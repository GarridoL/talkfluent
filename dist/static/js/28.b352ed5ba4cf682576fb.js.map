{"version":3,"sources":["webpack:///static/js/28.b352ed5ba4cf682576fb.js","webpack:///./src/modules/history/History.vue","webpack:///./~/howler/dist/howler.js?905d*****************","webpack:///./~/wavesurfer.js/dist/wavesurfer.min.js?4d0d","webpack:///./~/Howler/dist/howlerCustom.js?d8d3","webpack:///./src/components/audio/index.js?c2ef","webpack:///History.vue?deda","webpack:///./src/modules/history/History.vue?df4c","webpack:///./src/modules/history/History.vue?b713","webpack:///./src/modules/history/History.vue?cdc9"],"names":["webpackJsonp","384","module","exports","__webpack_require__","Component","436","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","test","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","index","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","458","t","r","n","l","m","c","d","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","default","hasOwnProperty","p","s","a","u","h","f","configurable","writable","key","TypeError","handlers","name","callback","un","forEach","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","iterator","constructor","ReferenceError","setPrototypeOf","getPrototypeOf","__proto__","getOwnPropertyDescriptor","set","audioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","getPlayedPercents","getDuration","getCurrentTime","startPosition","getPlayedTime","removeOnAudioProcess","fireEvent","params","ac","getAudioContext","lastPlay","scheduledPause","states","analyser","filters","gainNode","mergedPeaks","offlineAc","peaks","scriptNode","splitPeaks","explicitDuration","Observer","WaveSurferAudioContext","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","createVolumeNode","createScriptNode","createAnalyserNode","setState","setPlaybackRate","audioRate","setLength","setFilters","disconnectFilters","reduce","audioScriptProcessor","createScriptProcessor","scriptBufferSize","createJavaScriptNode","onaudioprocess","createAnalyser","setSinkId","reject","Error","createMediaStreamDestination","srcObject","stream","getOfflineAudioContext","numberOfChannels","getChannelData","v","splitChannels","isPaused","unAll","disconnectSource","closeAudioContext","createSource","seekTo","defaultParams","autoCenter","backend","barHeight","barGap","container","cursorColor","cursorWidth","dragSelection","fillParent","forceDecode","height","hideScrollbar","interact","loopSelection","maxCanvasWidth","mediaContainer","mediaControls","mediaType","minPxPerSec","normalize","partialRender","pixelRatio","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","progressColor","removeMediaElementOnDestroy","renderer","responsive","scrollParent","skipLength","waveColor","backends","MediaElement","WebAudio","util","extend","querySelector","savedVolume","isMuted","tmpEvents","currentAjax","drawer","peakCache","Drawer","Backend","initialisedPluginList","isDestroyed","isReady","_onResize","debounce","wrapper","clientWidth","registerPlugins","createDrawer","createBackend","createPeakCache","addPlugin","deferInit","initPlugin","instance","concat","staticProps","getOwnPropertyNames","destroyPlugin","destroy","drawBuffer","progress","supportsWebAudio","skip","seekAndCenter","recenter","isFinite","setVolume","getVolume","getPlaybackRate","setMute","updateCursor","setHeight","getWidth","getScrollX","addRangeToPeakCache","getPeaks","drawPeaks","decodeArrayBuffer","loadDecodedBuffer","FileReader","onProgress","loadArrayBuffer","target","result","readAsArrayBuffer","empty","Preload is not 'auto', 'none' or 'metadata'","Peaks are not provided","Backend is not of type MediaElement","Url is not of type string","filter","join","loadMediaElement","getArrayBuffer","setPeaks","loadElt","ajax","statusText","lengthComputable","loaded","total","map","JSON","stringify","encodeURIComponent","getImage","abort","cancelAjax","clearTmpEvents","setWidth","destroyAllPlugins","VERSION","method","requestHeaders","setRequestHeader","random","toString","substring","Number","style","clear","flush","stopPropagation","body","maxCanvasElementWidth","hasProgressCanvas","halfPixel","canvases","progressWave","createWrapper","createElements","appendChild","createElement","position","zIndex","left","top","bottom","overflow","width","display","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","borderRightColor","removeCanvas","updateDimensions","clearWaveForEntry","wave","waveCtx","getContext","progressCtx","parentElement","removeChild","canvas","offsetLeft","clearRect","prepareDraw","absmax","hasMinVals","offsetY","halfH","barWidth","floor","fillRect","drawLine","setFillStyles","drawLineToContext","beginPath","moveTo","lineTo","b","g","closePath","fill","x1","y1","x2","y2","fillRectToContext","frame","some","fillStyle","toDataURL","lastPos","userSelect","webkitUserSelect","overflowX","overflowY","setupWrapperEvents","preventDefault","targetTouches","clientX","getBoundingClientRect","scrollLeft","scrollWidth","offsetHeight","clientHeight","clientY","handleEvent","clearWave","drawBars","drawWave","recenterOnPosition","updateSize","updateProgress","parentNode","Reflect","media","elementPosition","onPlayEnd","createTimer","controls","_load","seekable","clearPlayEnd","setPlayEnd","_onPlayEnd","clearPeakCache","peakCacheRanges","peakCacheLength","sort","494","mobileAutoEnable","_enableMobileAudio","isMobile","_mobileEnabled","_xhronwaiting","xhronwaiting","_onwait","onwait","_waiting","_onwaiting","_playing","_onplaying","testButtons","repeatButtons","$","removeClass","addClass","onwaiting","496","__webpack_exports__","checkIfButtonExist","button","playerHowler","emptyAudioArray","previousButton","changeToInitial","changeToSpinning","makeInActive","makeActive","visualizerButton","wavesurfer","initVisualizer","getElementById","visibility","alert","waveSurferFlag","parameter","prevWaveUrl","WaveSurfer","visualizerPlay","iDevices","deviceFlag","pauseHowler","urlP","pauseButton","playHowler","repeatButtonsTest","pronounciationAudio","background","color","hideModal","modal","showModal","backdrop","keyboard","show","hideDashboardModal","__WEBPACK_IMPORTED_MODULE_0_wavesurfer_js__","__WEBPACK_IMPORTED_MODULE_0_wavesurfer_js___default","__WEBPACK_IMPORTED_MODULE_1_Howler_dist_howlerCustom_js__","620","__WEBPACK_IMPORTED_MODULE_0__router__","__WEBPACK_IMPORTED_MODULE_1__services_auth__","__WEBPACK_IMPORTED_MODULE_2__config_js__","__WEBPACK_IMPORTED_MODULE_3_howler__","__WEBPACK_IMPORTED_MODULE_4__components_audio__","mounted","view","$route","initWistia","created","user","tokenData","config","word","sentence","lesson","contents","prevLessonIndex","isActive","wordAudio","tickToggle","wistia","charset","active","wordPrevFlag","wordNextFlag","wordLimit","wordLimitAdder","activeSentence","sentencePrevFlag","sentenceNextFlag","sentenceLimit","sentenceLimitAdder","audioHandler","methods","script","redirectDashboard","redirect","retrieveWord","retrieveSentence","retrieveLesson","sortWord","char","String","fromCharCode","pager","wordNext","wordPrev","wordMobileNext","wordMobilePrev","_this","account_id","userID","css","APIRequest","sortSentence","pagerSentence","sentenceNext","sentencePrev","sentenceMobileNext","sentenceMobilePrev","_this2","_this3","retrieveContent","_this4","slideDown","slideUp","toggle","_this5","lesson_id","flag","lesson_tick_flag","700","sources","names","mappings","file","sourcesContent","sourceRoot","783","content","locals","914","render","_vm","_h","$createElement","_c","_self","staticClass","click","$event","attrs","href","onclick","_v","class","word-active","sentence-active","lesson-active","word-result-active","disabled","_e","_l","domProps","innerHTML","_s","_m","item","BACKEND_URL","staticStyle","text-transform","padding-top","translation","sentence-result-active","original","lesson-result-active","margin-top","margin-left","lesson_audio","padding-left","title","padding-right","itemContent","indexContent","staticRenderFns"],"mappings":"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","file":"static/js/28.b352ed5ba4cf682576fb.js","sourcesContent":["webpackJsonp([28],{\n\n/***/ 384:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(783)\n\nvar Component = __webpack_require__(151)(\n  /* script */\n  __webpack_require__(620),\n  /* template */\n  __webpack_require__(914),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Pool of unlocked HTML5 Audio objects.\r\n      self._html5AudioPool = [];\r\n      self.html5PoolSize = 10;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto audio unlocker.\r\n      self.autoUnlock = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Some browsers/devices will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _unlockAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\r\n      if (self._audioUnlocked || !self.ctx) {\r\n        return;\r\n      }\r\n\r\n      self._audioUnlocked = false;\r\n      self.autoUnlock = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Create a pool of unlocked HTML5 Audio objects that can\r\n        // be used for playing sounds without user interaction. HTML5\r\n        // Audio objects must be individually unlocked, as opposed\r\n        // to the WebAudio API which only needs a single activation.\r\n        // This must occur before WebAudio setup or the source.onended\r\n        // event will not fire.\r\n        for (var i=0; i<self.html5PoolSize; i++) {\r\n          try {\r\n            var audioNode = new Audio();\r\n\r\n            // Mark this Audio object as unlocked to ensure it can get returned\r\n            // to the unlocked pool when released.\r\n            audioNode._unlocked = true;\r\n\r\n            // Add the audio node to the pool.\r\n            self._releaseHtml5Audio(audioNode);\r\n          } catch (e) {\r\n            self.noAudio = true;\r\n          }\r\n        }\r\n\r\n        // Loop through any assigned audio nodes and unlock them.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and unlock the audio nodes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node && !sound._node._unlocked) {\r\n                sound._node._unlocked = true;\r\n                sound._node.load();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fix Android can not play in suspend state.\r\n        self._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._audioUnlocked = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\r\n     * return a new Audio object and throw a warning.\r\n     * @return {Audio} HTML5 Audio object.\r\n     */\r\n    _obtainHtml5Audio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Return the next object from the pool if one exists.\r\n      if (self._html5AudioPool.length) {\r\n        return self._html5AudioPool.pop();\r\n      }\r\n\r\n      //.Check if the audio is locked and throw a warning.\r\n      var testPlay = new Audio().play();\r\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\r\n        testPlay.catch(function() {\r\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\r\n        });\r\n      }\r\n\r\n      return new Audio();\r\n    },\r\n\r\n    /**\r\n     * Return an activated HTML5 Audio object to the pool.\r\n     * @return {Howler}\r\n     */\r\n    _releaseHtml5Audio: function(audio) {\r\n      var self = this || Howler;\r\n\r\n      // Don't add audio to the pool if we don't know if it has been unlocked.\r\n      if (audio._unlocked) {\r\n        self._html5AudioPool.push(audio);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n\r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\r\n        Howler._unlockAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended. \r\n        // If there is, play that sound. If not, continue as usual.  \r\n        if (!self._playLock) {\r\n          var num = 0;\r\n          for (var i=0; i<self._sounds.length; i++) {\r\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n              num++;\r\n              id = self._sounds[i]._id;\r\n            }\r\n          }\r\n\r\n          if (num === 1) {\r\n            sprite = null;\r\n          } else {\r\n            id = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Mark this sound as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n      var start = self._sprite[sprite][0] / 1000;\r\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n      sound._sprite = sprite;\r\n\r\n      // Mark the sound as ended instantly so that this async playback\r\n      // doesn't get grabbed by another call to play while this one waits to start.\r\n      sound._ended = false;\r\n\r\n      // Update the parameters of the sound.\r\n      var setParams = function() {\r\n        sound._paused = false;\r\n        sound._seek = seek;\r\n        sound._start = start;\r\n        sound._stop = stop;\r\n        sound._loop = loop;\r\n      };\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (seek >= stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._playLock = false;\r\n          setParams();\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          // Wait for the audio context to resume before playing.\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Some browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Set param values immediately.\r\n              setParams();\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  node._unlocked = true;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                    self._loadQueue();\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n\r\n                  // Reset the ended and paused values.\r\n                  sound._ended = true;\r\n                  sound._paused = true;\r\n                });\r\n            } else if (!internal) {\r\n              self._playLock = false;\r\n              setParams();\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // If this is streaming audio, make sure the src is set and load again.\r\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\r\n          node.src = self._src;\r\n          node.load();\r\n        }\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n\r\n              // If this is a live stream, stop download once the audio is stopped.\r\n              if (sound._node.duration === Infinity) {\r\n                self._clearSound(sound._node);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Make sure the to/from/len values are numbers.\r\n      from = parseFloat(from);\r\n      to = parseFloat(to);\r\n      len = parseFloat(len);\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            if (self.playing(id[i])) {\r\n              sound._rateSeek = self.seek(id[i]);\r\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            }\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          self._clearSound(sounds[i]._node);\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n\r\n          // Release the Audio object back to the pool.\r\n          Howler._releaseHtml5Audio(sounds[i]._node);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        if (isIOS) {\r\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n        }\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\r\n     * @param  {Object} node Audio node to clear.\r\n     */\r\n    _clearSound: function(node) {\r\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n      if (!checkIE) {\r\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        // Get an unlocked Audio object from the pool.\r\n        self._node = Howler._obtainHtml5Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\r\n    if (!Howler.usingWebAudio) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // If the audio context creation still failed, set using web audio to false.\r\n    if (!Howler.ctx) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (true) {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setPosition(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))\n\n/***/ }),\n\n/***/ 458:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\r\n * wavesurfer.js 2.1.0 (Mon Oct 01 2018 11:34:49 GMT+0200 (Central European Summer Time))\r\n * https://github.com/katspaugh/wavesurfer.js\r\n * @license BSD-3-Clause\r\n */\r\n!function(e,t){ true?module.exports=t():\"function\"==typeof define&&define.amd?define(\"WaveSurfer\",[],t):\"object\"==typeof exports?exports.WaveSurfer=t():e.WaveSurfer=t()}(window,function(){return function(r){var n={};function i(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return r[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}return i.m=r,i.c=n,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)i.d(r,n,function(e){return t[e]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,\"a\",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p=\"\",i(i.s=4)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"ajax\",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(t,\"getId\",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(t,\"max\",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(t,\"min\",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(t,\"Observer\",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(t,\"extend\",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(t,\"style\",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(t,\"requestAnimationFrame\",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(t,\"frame\",{enumerable:!0,get:function(){return h.default}}),Object.defineProperty(t,\"debounce\",{enumerable:!0,get:function(){return f.default}}),Object.defineProperty(t,\"preventClick\",{enumerable:!0,get:function(){return d.default}});var n=p(r(5)),i=p(r(6)),a=p(r(7)),s=p(r(8)),o=p(r(1)),u=p(r(9)),l=p(r(10)),c=p(r(2)),h=p(r(11)),f=p(r(12)),d=p(r(13));function p(e){return e&&e.__esModule?e:{default:e}}},function(e,t,r){\"use strict\";function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.handlers=null}var t,r,n;return t=e,(r=[{key:\"on\",value:function(e,t){var r=this;this.handlers||(this.handlers={});var n=this.handlers[e];return n||(n=this.handlers[e]=[]),n.push(t),{name:e,callback:t,un:function(e,t){return r.un(e,t)}}}},{key:\"un\",value:function(e,t){if(this.handlers){var r,n=this.handlers[e];if(n)if(t)for(r=n.length-1;0<=r;r--)n[r]==t&&n.splice(r,1);else n.length=0}}},{key:\"unAll\",value:function(){this.handlers=null}},{key:\"once\",value:function(i,a){var s=this;return this.on(i,function e(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];a.apply(s,r),setTimeout(function(){s.un(i,e)},0)})}},{key:\"fireEvent\",value:function(e){for(var t=arguments.length,r=new Array(1<t?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];if(this.handlers){var i=this.handlers[e];i&&i.forEach(function(e){e.apply(void 0,r)})}}}])&&i(t.prototype,r),n&&i(t,n),e}();t.default=n,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return setTimeout(e,1e3/60)}).bind(window);t.default=n,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),e}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=\"playing\",f=\"paused\",d=\"finished\",p=function(e){function i(e){var t,r,n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(n=s(this,o(i).call(this))).audioContext=null,n.offlineAudioContext=null,n.stateBehaviors=(a(t={},h,{init:function(){this.addOnAudioProcess()},getPlayedPercents:function(){var e=this.getDuration();return this.getCurrentTime()/e||0},getCurrentTime:function(){return this.startPosition+this.getPlayedTime()}}),a(t,f,{init:function(){this.removeOnAudioProcess()},getPlayedPercents:function(){var e=this.getDuration();return this.getCurrentTime()/e||0},getCurrentTime:function(){return this.startPosition}}),a(t,d,{init:function(){this.removeOnAudioProcess(),this.fireEvent(\"finish\")},getPlayedPercents:function(){return 1},getCurrentTime:function(){return this.getDuration()}}),t),n.params=e,n.ac=e.audioContext||n.getAudioContext(),n.lastPlay=n.ac.currentTime,n.startPosition=0,n.scheduledPause=null,n.states=(a(r={},h,Object.create(n.stateBehaviors[h])),a(r,f,Object.create(n.stateBehaviors[f])),a(r,d,Object.create(n.stateBehaviors[d])),r),n.analyser=null,n.buffer=null,n.filters=[],n.gainNode=null,n.mergedPeaks=null,n.offlineAc=null,n.peaks=null,n.playbackRate=1,n.analyser=null,n.scriptNode=null,n.source=null,n.splitPeaks=[],n.state=null,n.explicitDuration=null,n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(i,n.Observer),l(i,[{key:\"supportsWebAudio\",value:function(){return!(!window.AudioContext&&!window.webkitAudioContext)}},{key:\"getAudioContext\",value:function(){return window.WaveSurferAudioContext||(window.WaveSurferAudioContext=new(window.AudioContext||window.webkitAudioContext)),window.WaveSurferAudioContext}},{key:\"getOfflineAudioContext\",value:function(e){return window.WaveSurferOfflineAudioContext||(window.WaveSurferOfflineAudioContext=new(window.OfflineAudioContext||window.webkitOfflineAudioContext)(1,2,e)),window.WaveSurferOfflineAudioContext}}]),l(i,[{key:\"init\",value:function(){this.createVolumeNode(),this.createScriptNode(),this.createAnalyserNode(),this.setState(f),this.setPlaybackRate(this.params.audioRate),this.setLength(0)}},{key:\"disconnectFilters\",value:function(){this.filters&&(this.filters.forEach(function(e){e&&e.disconnect()}),this.filters=null,this.analyser.connect(this.gainNode))}},{key:\"setState\",value:function(e){this.state!==this.states[e]&&(this.state=this.states[e],this.state.init.call(this))}},{key:\"setFilter\",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.setFilters(t)}},{key:\"setFilters\",value:function(e){this.disconnectFilters(),e&&e.length&&(this.filters=e,this.analyser.disconnect(),e.reduce(function(e,t){return e.connect(t),t},this.analyser).connect(this.gainNode))}},{key:\"createScriptNode\",value:function(){this.params.audioScriptProcessor?this.scriptNode=this.params.audioScriptProcessor:this.ac.createScriptProcessor?this.scriptNode=this.ac.createScriptProcessor(i.scriptBufferSize):this.scriptNode=this.ac.createJavaScriptNode(i.scriptBufferSize),this.scriptNode.connect(this.ac.destination)}},{key:\"addOnAudioProcess\",value:function(){var t=this;this.scriptNode.onaudioprocess=function(){var e=t.getCurrentTime();e>=t.getDuration()?(t.setState(d),t.fireEvent(\"pause\")):e>=t.scheduledPause?t.pause():t.state===t.states[h]&&t.fireEvent(\"audioprocess\",e)}}},{key:\"removeOnAudioProcess\",value:function(){this.scriptNode.onaudioprocess=null}},{key:\"createAnalyserNode\",value:function(){this.analyser=this.ac.createAnalyser(),this.analyser.connect(this.gainNode)}},{key:\"createVolumeNode\",value:function(){this.ac.createGain?this.gainNode=this.ac.createGain():this.gainNode=this.ac.createGainNode(),this.gainNode.connect(this.ac.destination)}},{key:\"setSinkId\",value:function(e){if(e){var t=new window.Audio;if(!t.setSinkId)return Promise.reject(new Error(\"setSinkId is not supported in your browser\"));t.autoplay=!0;var r=this.ac.createMediaStreamDestination();return this.gainNode.disconnect(),this.gainNode.connect(r),t.srcObject=r.stream,t.setSinkId(e)}return Promise.reject(new Error(\"Invalid deviceId: \"+e))}},{key:\"setVolume\",value:function(e){this.gainNode.gain.setValueAtTime(e,this.ac.currentTime)}},{key:\"getVolume\",value:function(){return this.gainNode.gain.value}},{key:\"decodeArrayBuffer\",value:function(e,t,r){this.offlineAc||(this.offlineAc=this.getOfflineAudioContext(this.ac&&this.ac.sampleRate?this.ac.sampleRate:44100)),this.offlineAc.decodeAudioData(e,function(e){return t(e)},r)}},{key:\"setPeaks\",value:function(e,t){this.explicitDuration=t,this.peaks=e}},{key:\"setLength\",value:function(e){if(!this.mergedPeaks||e!=2*this.mergedPeaks.length-1+2){this.splitPeaks=[],this.mergedPeaks=[];var t,r=this.buffer?this.buffer.numberOfChannels:1;for(t=0;t<r;t++)this.splitPeaks[t]=[],this.splitPeaks[t][2*(e-1)]=0,this.splitPeaks[t][2*(e-1)+1]=0;this.mergedPeaks[2*(e-1)]=0,this.mergedPeaks[2*(e-1)+1]=0}}},{key:\"getPeaks\",value:function(e,t,r){if(this.peaks)return this.peaks;if(t=t||0,r=r||e-1,this.setLength(e),!this.buffer.length){var n=this.createBuffer(1,4096,this.sampleRate);this.buffer=n.buffer}var i,a=this.buffer.length/e,s=~~(a/10)||1,o=this.buffer.numberOfChannels;for(i=0;i<o;i++){var u=this.splitPeaks[i],l=this.buffer.getChannelData(i),c=void 0;for(c=t;c<=r;c++){var h=~~(c*a),f=~~(h+a),d=0,p=0,v=void 0;for(v=h;v<f;v+=s){var y=l[v];p<y&&(p=y),y<d&&(d=y)}u[2*c]=p,u[2*c+1]=d,(0==i||p>this.mergedPeaks[2*c])&&(this.mergedPeaks[2*c]=p),(0==i||d<this.mergedPeaks[2*c+1])&&(this.mergedPeaks[2*c+1]=d)}}return this.params.splitChannels?this.splitPeaks:this.mergedPeaks}},{key:\"getPlayedPercents\",value:function(){return this.state.getPlayedPercents.call(this)}},{key:\"disconnectSource\",value:function(){this.source&&this.source.disconnect()}},{key:\"destroy\",value:function(){this.isPaused()||this.pause(),this.unAll(),this.buffer=null,this.disconnectFilters(),this.disconnectSource(),this.gainNode.disconnect(),this.scriptNode.disconnect(),this.analyser.disconnect(),this.params.closeAudioContext&&(\"function\"==typeof this.ac.close&&\"closed\"!=this.ac.state&&this.ac.close(),this.ac=null,this.params.audioContext?this.params.audioContext=null:window.WaveSurferAudioContext=null,window.WaveSurferOfflineAudioContext=null)}},{key:\"load\",value:function(e){this.startPosition=0,this.lastPlay=this.ac.currentTime,this.buffer=e,this.createSource()}},{key:\"createSource\",value:function(){this.disconnectSource(),this.source=this.ac.createBufferSource(),this.source.start=this.source.start||this.source.noteGrainOn,this.source.stop=this.source.stop||this.source.noteOff,this.source.playbackRate.setValueAtTime(this.playbackRate,this.ac.currentTime),this.source.buffer=this.buffer,this.source.connect(this.analyser)}},{key:\"isPaused\",value:function(){return this.state!==this.states[h]}},{key:\"getDuration\",value:function(){return this.buffer?this.buffer.duration:this.explicitDuration?this.explicitDuration:0}},{key:\"seekTo\",value:function(e,t){if(this.buffer)return(this.scheduledPause=null)==e&&(e=this.getCurrentTime())>=this.getDuration()&&(e=0),null==t&&(t=this.getDuration()),this.startPosition=e,this.lastPlay=this.ac.currentTime,this.state===this.states[d]&&this.setState(f),{start:e,end:t}}},{key:\"getPlayedTime\",value:function(){return(this.ac.currentTime-this.lastPlay)*this.playbackRate}},{key:\"play\",value:function(e,t){if(this.buffer){this.createSource();var r=this.seekTo(e,t);e=r.start,t=r.end,this.scheduledPause=t,this.source.start(0,e,t-e),\"suspended\"==this.ac.state&&this.ac.resume&&this.ac.resume(),this.setState(h),this.fireEvent(\"play\")}}},{key:\"pause\",value:function(){this.scheduledPause=null,this.startPosition+=this.getPlayedTime(),this.source&&this.source.stop(0),this.setState(f),this.fireEvent(\"pause\")}},{key:\"getCurrentTime\",value:function(){return this.state.getCurrentTime.call(this)}},{key:\"getPlaybackRate\",value:function(){return this.playbackRate}},{key:\"setPlaybackRate\",value:function(e){e=e||1,this.isPaused()?this.playbackRate=e:(this.pause(),this.playbackRate=e,this.play())}}]),i}();(t.default=p).scriptBufferSize=256,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0)),a=n(r(14)),s=n(r(3)),o=n(r(16)),u=n(r(17));function n(e){return e&&e.__esModule?e:{default:e}}function l(e){return(l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){return!t||\"object\"!==l(t)&&\"function\"!=typeof t?d(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function p(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function y(e,t,r){return t&&v(e.prototype,t),r&&v(e,r),e}var m=function(e){function n(e){var t;if(p(this,n),(t=c(this,h(n).call(this))).defaultParams={audioContext:null,audioRate:1,autoCenter:!0,backend:\"WebAudio\",barHeight:1,barGap:null,container:null,cursorColor:\"#333\",cursorWidth:1,dragSelection:!0,fillParent:!0,forceDecode:!1,height:128,hideScrollbar:!1,interact:!0,loopSelection:!0,maxCanvasWidth:4e3,mediaContainer:null,mediaControls:!1,mediaType:\"audio\",minPxPerSec:20,normalize:!1,partialRender:!1,pixelRatio:window.devicePixelRatio||screen.deviceXDPI/screen.logicalXDPI,plugins:[],progressColor:\"#555\",removeMediaElementOnDestroy:!0,renderer:a.default,responsive:!1,scrollParent:!1,skipLength:2,splitChannels:!1,waveColor:\"#999\",xhr:{}},t.backends={MediaElement:o.default,WebAudio:s.default},t.util=i,t.params=i.extend({},t.defaultParams,e),t.container=\"string\"==typeof e.container?document.querySelector(t.params.container):t.params.container,!t.container)throw new Error(\"Container element not found\");if(null==t.params.mediaContainer?t.mediaContainer=t.container:\"string\"==typeof t.params.mediaContainer?t.mediaContainer=document.querySelector(t.params.mediaContainer):t.mediaContainer=t.params.mediaContainer,!t.mediaContainer)throw new Error(\"Media Container element not found\");if(t.params.maxCanvasWidth<=1)throw new Error(\"maxCanvasWidth must be greater than 1\");if(t.params.maxCanvasWidth%2==1)throw new Error(\"maxCanvasWidth must be an even number\");if(t.savedVolume=0,t.isMuted=!1,t.tmpEvents=[],t.currentAjax=null,t.arraybuffer=null,t.drawer=null,t.backend=null,t.peakCache=null,\"function\"!=typeof t.params.renderer)throw new Error(\"Renderer parameter is invalid\");t.Drawer=t.params.renderer,t.Backend=t.backends[t.params.backend],t.initialisedPluginList={},t.isDestroyed=!1,t.isReady=!1;var r=0;return t._onResize=i.debounce(function(){r==t.drawer.wrapper.clientWidth||t.params.scrollParent||(r=t.drawer.wrapper.clientWidth,t.drawer.fireEvent(\"redraw\"))},\"number\"==typeof t.params.responsive?t.params.responsive:100),c(t,d(d(t)))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(n,i.Observer),y(n,null,[{key:\"create\",value:function(e){return new n(e).init()}}]),y(n,[{key:\"init\",value:function(){return this.registerPlugins(this.params.plugins),this.createDrawer(),this.createBackend(),this.createPeakCache(),this}},{key:\"registerPlugins\",value:function(e){var t=this;return e.forEach(function(e){return t.addPlugin(e)}),e.forEach(function(e){e.deferInit||t.initPlugin(e.name)}),this.fireEvent(\"plugins-registered\",e),this}},{key:\"addPlugin\",value:function(t){var r=this;if(!t.name)throw new Error(\"Plugin does not have a name!\");if(!t.instance)throw new Error(\"Plugin \".concat(t.name,\" does not have an instance property!\"));t.staticProps&&Object.keys(t.staticProps).forEach(function(e){r[e]=t.staticProps[e]});var n=t.instance;return Object.getOwnPropertyNames(i.Observer.prototype).forEach(function(e){n.prototype[e]=i.Observer.prototype[e]}),this[t.name]=new n(t.params||{},this),this.fireEvent(\"plugin-added\",t.name),this}},{key:\"initPlugin\",value:function(e){if(!this[e])throw new Error(\"Plugin \".concat(e,\" has not been added yet!\"));return this.initialisedPluginList[e]&&this.destroyPlugin(e),this[e].init(),this.initialisedPluginList[e]=!0,this.fireEvent(\"plugin-initialised\",e),this}},{key:\"destroyPlugin\",value:function(e){if(!this[e])throw new Error(\"Plugin \".concat(e,\" has not been added yet and cannot be destroyed!\"));if(!this.initialisedPluginList[e])throw new Error(\"Plugin \".concat(e,\" is not active and cannot be destroyed!\"));if(\"function\"!=typeof this[e].destroy)throw new Error(\"Plugin \".concat(e,\" does not have a destroy function!\"));return this[e].destroy(),delete this.initialisedPluginList[e],this.fireEvent(\"plugin-destroyed\",e),this}},{key:\"destroyAllPlugins\",value:function(){var t=this;Object.keys(this.initialisedPluginList).forEach(function(e){return t.destroyPlugin(e)})}},{key:\"createDrawer\",value:function(){var r=this;this.drawer=new this.Drawer(this.container,this.params),this.drawer.init(),this.fireEvent(\"drawer-created\",this.drawer),!1!==this.params.responsive&&(window.addEventListener(\"resize\",this._onResize,!0),window.addEventListener(\"orientationchange\",this._onResize,!0)),this.drawer.on(\"redraw\",function(){r.drawBuffer(),r.drawer.progress(r.backend.getPlayedPercents())}),this.drawer.on(\"click\",function(e,t){setTimeout(function(){return r.seekTo(t)},0)}),this.drawer.on(\"scroll\",function(e){r.params.partialRender&&r.drawBuffer(),r.fireEvent(\"scroll\",e)})}},{key:\"createBackend\",value:function(){var t=this;this.backend&&this.backend.destroy(),\"AudioElement\"==this.params.backend&&(this.params.backend=\"MediaElement\"),\"WebAudio\"!=this.params.backend||this.Backend.prototype.supportsWebAudio.call(null)||(this.params.backend=\"MediaElement\"),this.backend=new this.Backend(this.params),this.backend.init(),this.fireEvent(\"backend-created\",this.backend),this.backend.on(\"finish\",function(){return t.fireEvent(\"finish\")}),this.backend.on(\"play\",function(){return t.fireEvent(\"play\")}),this.backend.on(\"pause\",function(){return t.fireEvent(\"pause\")}),this.backend.on(\"audioprocess\",function(e){t.drawer.progress(t.backend.getPlayedPercents()),t.fireEvent(\"audioprocess\",e)})}},{key:\"createPeakCache\",value:function(){this.params.partialRender&&(this.peakCache=new u.default)}},{key:\"getDuration\",value:function(){return this.backend.getDuration()}},{key:\"getCurrentTime\",value:function(){return this.backend.getCurrentTime()}},{key:\"setCurrentTime\",value:function(e){e>=this.getDuration()?this.seekTo(1):this.seekTo(e/this.getDuration())}},{key:\"play\",value:function(e,t){var r=this;return this.fireEvent(\"interaction\",function(){return r.play(e,t)}),this.backend.play(e,t)}},{key:\"pause\",value:function(){if(!this.backend.isPaused())return this.backend.pause()}},{key:\"playPause\",value:function(){return this.backend.isPaused()?this.play():this.pause()}},{key:\"isPlaying\",value:function(){return!this.backend.isPaused()}},{key:\"skipBackward\",value:function(e){this.skip(-e||-this.params.skipLength)}},{key:\"skipForward\",value:function(e){this.skip(e||this.params.skipLength)}},{key:\"skip\",value:function(e){var t=this.getDuration()||1,r=this.getCurrentTime()||0;r=Math.max(0,Math.min(t,r+(e||0))),this.seekAndCenter(r/t)}},{key:\"seekAndCenter\",value:function(e){this.seekTo(e),this.drawer.recenter(e)}},{key:\"seekTo\",value:function(e){var t=this;if(\"number\"!=typeof e||!isFinite(e)||e<0||1<e)return console.error(\"Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!\");this.fireEvent(\"interaction\",function(){return t.seekTo(e)});var r=this.backend.isPaused();r||this.backend.pause();var n=this.params.scrollParent;this.params.scrollParent=!1,this.backend.seekTo(e*this.getDuration()),this.drawer.progress(e),r||this.backend.play(),this.params.scrollParent=n,this.fireEvent(\"seek\",e)}},{key:\"stop\",value:function(){this.pause(),this.seekTo(0),this.drawer.progress(0)}},{key:\"setSinkId\",value:function(e){return this.backend.setSinkId(e)}},{key:\"setVolume\",value:function(e){this.backend.setVolume(e),this.fireEvent(\"volume\",e)}},{key:\"getVolume\",value:function(){return this.backend.getVolume()}},{key:\"setPlaybackRate\",value:function(e){this.backend.setPlaybackRate(e)}},{key:\"getPlaybackRate\",value:function(){return this.backend.getPlaybackRate()}},{key:\"toggleMute\",value:function(){this.setMute(!this.isMuted)}},{key:\"setMute\",value:function(e){e!==this.isMuted&&(e?(this.savedVolume=this.backend.getVolume(),this.backend.setVolume(0),this.isMuted=!0,this.fireEvent(\"volume\",0)):(this.backend.setVolume(this.savedVolume),this.isMuted=!1,this.fireEvent(\"volume\",this.savedVolume))),this.fireEvent(\"mute\",this.isMuted)}},{key:\"getMute\",value:function(){return this.isMuted}},{key:\"isReady\",value:function(){return this.isReady}},{key:\"getFilters\",value:function(){return this.backend.filters||[]}},{key:\"toggleScroll\",value:function(){this.params.scrollParent=!this.params.scrollParent,this.drawBuffer()}},{key:\"toggleInteraction\",value:function(){this.params.interact=!this.params.interact}},{key:\"getWaveColor\",value:function(){return this.params.waveColor}},{key:\"setWaveColor\",value:function(e){this.params.waveColor=e,this.drawBuffer()}},{key:\"getProgressColor\",value:function(){return this.params.progressColor}},{key:\"setProgressColor\",value:function(e){this.params.progressColor=e,this.drawBuffer()}},{key:\"getCursorColor\",value:function(){return this.params.cursorColor}},{key:\"setCursorColor\",value:function(e){this.params.cursorColor=e,this.drawer.updateCursor()}},{key:\"getHeight\",value:function(){return this.params.height}},{key:\"setHeight\",value:function(e){this.params.height=e,this.drawer.setHeight(e*this.params.pixelRatio),this.drawBuffer()}},{key:\"drawBuffer\",value:function(){var e,t=Math.round(this.getDuration()*this.params.minPxPerSec*this.params.pixelRatio),r=this.drawer.getWidth(),n=t,i=this.drawer.getScrollX(),a=Math.max(i+r,n);if(this.params.fillParent&&(!this.params.scrollParent||t<r)&&(i=0,a=n=r),this.params.partialRender){var s,o=this.peakCache.addRangeToPeakCache(n,i,a);for(s=0;s<o.length;s++)e=this.backend.getPeaks(n,o[s][0],o[s][1]),this.drawer.drawPeaks(e,n,o[s][0],o[s][1])}else e=this.backend.getPeaks(n,i,a),this.drawer.drawPeaks(e,n,i,a);this.fireEvent(\"redraw\",e,n)}},{key:\"zoom\",value:function(e){this.params.scrollParent=e?(this.params.minPxPerSec=e,!0):(this.params.minPxPerSec=this.defaultParams.minPxPerSec,!1),this.drawBuffer(),this.drawer.progress(this.backend.getPlayedPercents()),this.drawer.recenter(this.getCurrentTime()/this.getDuration()),this.fireEvent(\"zoom\",e)}},{key:\"loadArrayBuffer\",value:function(e){var t=this;this.decodeArrayBuffer(e,function(e){t.isDestroyed||t.loadDecodedBuffer(e)})}},{key:\"loadDecodedBuffer\",value:function(e){this.backend.load(e),this.drawBuffer(),this.fireEvent(\"ready\"),this.isReady=!0}},{key:\"loadBlob\",value:function(e){var t=this,r=new FileReader;r.addEventListener(\"progress\",function(e){return t.onProgress(e)}),r.addEventListener(\"load\",function(e){return t.loadArrayBuffer(e.target.result)}),r.addEventListener(\"error\",function(){return t.fireEvent(\"error\",\"Error reading file\")}),r.readAsArrayBuffer(e),this.empty()}},{key:\"load\",value:function(e,t,r,n){if(this.empty(),r){var i={\"Preload is not 'auto', 'none' or 'metadata'\":-1===[\"auto\",\"metadata\",\"none\"].indexOf(r),\"Peaks are not provided\":!t,\"Backend is not of type MediaElement\":\"MediaElement\"!==this.params.backend,\"Url is not of type string\":\"string\"!=typeof e},a=Object.keys(i).filter(function(e){return i[e]});a.length&&(console.warn(\"Preload parameter of wavesurfer.load will be ignored because:\\n\\t- \"+a.join(\"\\n\\t- \")),r=null)}switch(this.params.backend){case\"WebAudio\":return this.loadBuffer(e,t,n);case\"MediaElement\":return this.loadMediaElement(e,t,r,n)}}},{key:\"loadBuffer\",value:function(t,e,r){var n=this,i=function(e){return e&&n.tmpEvents.push(n.once(\"ready\",e)),n.getArrayBuffer(t,function(e){return n.loadArrayBuffer(e)})};if(!e)return i();this.backend.setPeaks(e,r),this.drawBuffer(),this.tmpEvents.push(this.once(\"interaction\",i))}},{key:\"loadMediaElement\",value:function(e,t,r,n){var i=this,a=e;if(\"string\"==typeof e)this.backend.load(a,this.mediaContainer,t,r);else{var s=e;this.backend.loadElt(s,t),a=s.src}this.tmpEvents.push(this.backend.once(\"canplay\",function(){i.drawBuffer(),i.fireEvent(\"ready\"),i.isReady=!0}),this.backend.once(\"error\",function(e){return i.fireEvent(\"error\",e)})),t&&this.backend.setPeaks(t,n),t&&!this.params.forceDecode||!this.backend.supportsWebAudio()||this.getArrayBuffer(a,function(e){i.decodeArrayBuffer(e,function(e){i.backend.buffer=e,i.backend.setPeaks(null),i.drawBuffer(),i.fireEvent(\"waveform-ready\")})})}},{key:\"decodeArrayBuffer\",value:function(t,r){var n=this;this.arraybuffer=t,this.backend.decodeArrayBuffer(t,function(e){n.isDestroyed||n.arraybuffer!=t||(r(e),n.arraybuffer=null)},function(){return n.fireEvent(\"error\",\"Error decoding audiobuffer\")})}},{key:\"getArrayBuffer\",value:function(e,r){var n=this,t=i.ajax({url:e,responseType:\"arraybuffer\",xhr:this.params.xhr});return this.currentAjax=t,this.tmpEvents.push(t.on(\"progress\",function(e){n.onProgress(e)}),t.on(\"success\",function(e,t){r(e),n.currentAjax=null}),t.on(\"error\",function(e){n.fireEvent(\"error\",\"XHR error: \"+e.target.statusText),n.currentAjax=null})),t}},{key:\"onProgress\",value:function(e){var t;t=e.lengthComputable?e.loaded/e.total:e.loaded/(e.loaded+1e6),this.fireEvent(\"loading\",Math.round(100*t),e.target)}},{key:\"exportPCM\",value:function(e,t,r,n){e=e||1024,n=n||0,t=t||1e4,r=r||!1;var i=this.backend.getPeaks(e,n),a=[].map.call(i,function(e){return Math.round(e*t)/t}),s=JSON.stringify(a);return r||window.open(\"data:application/json;charset=utf-8,\"+encodeURIComponent(s)),s}},{key:\"exportImage\",value:function(e,t){return e||(e=\"image/png\"),t||(t=1),this.drawer.getImage(e,t)}},{key:\"cancelAjax\",value:function(){this.currentAjax&&(this.currentAjax.xhr.abort(),this.currentAjax=null)}},{key:\"clearTmpEvents\",value:function(){this.tmpEvents.forEach(function(e){return e.un()})}},{key:\"empty\",value:function(){this.backend.isPaused()||(this.stop(),this.backend.disconnectSource()),this.isReady=!1,this.cancelAjax(),this.clearTmpEvents(),this.drawer.progress(0),this.drawer.setWidth(0),this.drawer.drawPeaks({length:this.drawer.getWidth()},0)}},{key:\"destroy\",value:function(){this.destroyAllPlugins(),this.fireEvent(\"destroy\"),this.cancelAjax(),this.clearTmpEvents(),this.unAll(),!1!==this.params.responsive&&(window.removeEventListener(\"resize\",this._onResize,!0),window.removeEventListener(\"orientationchange\",this._onResize,!0)),this.backend.destroy(),this.drawer.destroy(),this.isDestroyed=!0,this.isReady=!1,this.arraybuffer=null}}]),n}();(t.default=m).VERSION=\"2.1.0\",m.util=i,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e){var t=new i.default,r=new XMLHttpRequest,n=!1;r.open(e.method||\"GET\",e.url,!0),r.responseType=e.responseType||\"json\",e.xhr&&(e.xhr.requestHeaders&&e.xhr.requestHeaders.forEach(function(e){r.setRequestHeader(e.key,e.value)}),e.xhr.withCredentials&&(r.withCredentials=!0));return r.addEventListener(\"progress\",function(e){t.fireEvent(\"progress\",e),e.lengthComputable&&e.loaded==e.total&&(n=!0)}),r.addEventListener(\"load\",function(e){n||t.fireEvent(\"progress\",e),t.fireEvent(\"load\",e),200==r.status||206==r.status?t.fireEvent(\"success\",r.response,e):t.fireEvent(\"error\",e)}),r.addEventListener(\"error\",function(e){return t.fireEvent(\"error\",e)}),r.send(),t.xhr=r,t};var n,i=(n=r(1))&&n.__esModule?n:{default:n};e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(){return\"wavesurfer_\"+Math.random().toString(32).substring(2)},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t){var r=-1/0;return Object.keys(t).forEach(function(e){t[e]>r&&(r=t[e])}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t){var r=Number(1/0);return Object.keys(t).forEach(function(e){t[e]<r&&(r=t[e])}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(r){for(var e=arguments.length,t=new Array(1<e?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];return t.forEach(function(t){Object.keys(t).forEach(function(e){r[e]=t[e]})}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t,r){return Object.keys(r).forEach(function(e){t.style[e]!==r[e]&&(t.style[e]=r[e])}),t},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(n){return function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return(0,i.default)(function(){return n.apply(void 0,t)})}};var n,i=(n=r(2))&&n.__esModule?n:{default:n};e.exports=t.default},function(e,t){function r(t,r,n){var i,a,s,o,u;function l(){var e=Date.now()-o;e<r&&0<=e?i=setTimeout(l,r-e):(i=null,n||(u=t.apply(s,a),s=a=null))}null==r&&(r=100);var e=function(){s=this,a=arguments,o=Date.now();var e=n&&!i;return i||(i=setTimeout(l,r)),e&&(u=t.apply(s,a),s=a=null),u};return e.clear=function(){i&&(clearTimeout(i),i=null)},e.flush=function(){i&&(u=t.apply(s,a),s=a=null,clearTimeout(i),i=null)},e}r.debounce=r,e.exports=r},function(e,t,r){\"use strict\";function n(e){e.stopPropagation(),document.body.removeEventListener(\"click\",n,!0)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e){document.body.addEventListener(\"click\",n,!0)},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n,a=(n=r(15))&&n.__esModule?n:{default:n},f=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var c=function(e){function n(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(r=o(this,u(n).call(this,e,t))).maxCanvasWidth=t.maxCanvasWidth,r.maxCanvasElementWidth=Math.round(t.maxCanvasWidth/t.pixelRatio),r.hasProgressCanvas=t.waveColor!=t.progressColor,r.halfPixel=.5/t.pixelRatio,r.canvases=[],r.progressWave=null,r}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(n,a.default),t=n,(r=[{key:\"init\",value:function(){this.createWrapper(),this.createElements()}},{key:\"createElements\",value:function(){this.progressWave=this.wrapper.appendChild(this.style(document.createElement(\"wave\"),{position:\"absolute\",zIndex:3,left:0,top:0,bottom:0,overflow:\"hidden\",width:\"0\",display:\"none\",boxSizing:\"border-box\",borderRightStyle:\"solid\",pointerEvents:\"none\"})),this.addCanvas(),this.updateCursor()}},{key:\"updateCursor\",value:function(){this.style(this.progressWave,{borderRightWidth:this.params.cursorWidth+\"px\",borderRightColor:this.params.cursorColor})}},{key:\"updateSize\",value:function(){for(var n=this,e=Math.round(this.width/this.params.pixelRatio),t=Math.ceil(e/this.maxCanvasElementWidth);this.canvases.length<t;)this.addCanvas();for(;this.canvases.length>t;)this.removeCanvas();this.canvases.forEach(function(e,t){var r=n.maxCanvasWidth+2*Math.ceil(n.params.pixelRatio/2);t==n.canvases.length-1&&(r=n.width-n.maxCanvasWidth*(n.canvases.length-1)),n.updateDimensions(e,r,n.height),n.clearWaveForEntry(e)})}},{key:\"addCanvas\",value:function(){var e={},t=this.maxCanvasElementWidth*this.canvases.length;e.wave=this.wrapper.appendChild(this.style(document.createElement(\"canvas\"),{position:\"absolute\",zIndex:2,left:t+\"px\",top:0,bottom:0,height:\"100%\",pointerEvents:\"none\"})),e.waveCtx=e.wave.getContext(\"2d\"),this.hasProgressCanvas&&(e.progress=this.progressWave.appendChild(this.style(document.createElement(\"canvas\"),{position:\"absolute\",left:t+\"px\",top:0,bottom:0,height:\"100%\"})),e.progressCtx=e.progress.getContext(\"2d\")),this.canvases.push(e)}},{key:\"removeCanvas\",value:function(){var e=this.canvases.pop();e.wave.parentElement.removeChild(e.wave),this.hasProgressCanvas&&e.progress.parentElement.removeChild(e.progress)}},{key:\"updateDimensions\",value:function(e,t,r){var n=Math.round(t/this.params.pixelRatio),i=Math.round(this.width/this.params.pixelRatio);e.start=e.waveCtx.canvas.offsetLeft/i||0,e.end=e.start+n/i,e.waveCtx.canvas.width=t,e.waveCtx.canvas.height=r,this.style(e.waveCtx.canvas,{width:n+\"px\"}),this.style(this.progressWave,{display:\"block\"}),this.hasProgressCanvas&&(e.progressCtx.canvas.width=t,e.progressCtx.canvas.height=r,this.style(e.progressCtx.canvas,{width:n+\"px\"}))}},{key:\"clearWave\",value:function(){var t=this;this.canvases.forEach(function(e){return t.clearWaveForEntry(e)})}},{key:\"clearWaveForEntry\",value:function(e){e.waveCtx.clearRect(0,0,e.waveCtx.canvas.width,e.waveCtx.canvas.height),this.hasProgressCanvas&&e.progressCtx.clearRect(0,0,e.progressCtx.canvas.width,e.progressCtx.canvas.height)}},{key:\"drawBars\",value:function(e,t,v,y){var m=this;return this.prepareDraw(e,t,v,y,function(e){var t=e.absmax,r=e.hasMinVals,n=(e.height,e.offsetY),i=e.halfH,a=e.peaks;if(void 0!==v){var s,o=r?2:1,u=a.length/o,l=m.params.barWidth*m.params.pixelRatio,c=l+(null===m.params.barGap?Math.max(m.params.pixelRatio,~~(l/2)):Math.max(m.params.pixelRatio,m.params.barGap*m.params.pixelRatio)),h=u/m.width,f=y;for(s=v;s<f;s+=c){var d=a[Math.floor(s*h*o)]||0,p=Math.round(d/t*i);m.fillRect(s+m.halfPixel,i-p+n,l+m.halfPixel,2*p)}}})}},{key:\"drawWave\",value:function(e,t,l,c){var h=this;return this.prepareDraw(e,t,l,c,function(e){var t=e.absmax,r=e.hasMinVals,n=(e.height,e.offsetY),i=e.halfH,a=e.peaks;if(!r){var s,o=[],u=a.length;for(s=0;s<u;s++)o[2*s]=a[s],o[2*s+1]=-a[s];a=o}void 0!==l&&h.drawLine(a,t,i,n,l,c),h.fillRect(0,i+n-h.halfPixel,h.width,h.halfPixel)})}},{key:\"drawLine\",value:function(t,r,n,i,a,s){var o=this;this.canvases.forEach(function(e){o.setFillStyles(e),o.drawLineToContext(e,e.waveCtx,t,r,n,i,a,s),o.drawLineToContext(e,e.progressCtx,t,r,n,i,a,s)})}},{key:\"drawLineToContext\",value:function(e,t,r,n,i,a,s,o){if(t){var u=r.length/2,l=this.params.fillParent&&this.width!=u?this.width/u:1,c=Math.round(u*e.start),h=Math.round(u*e.end)+1;if(!(o<c||h<s)){var f,d,p=Math.min(c,s),v=Math.max(h,o);for(t.beginPath(),t.moveTo((p-c)*l+this.halfPixel,i+a),f=p;f<v;f++){var y=r[2*f]||0,m=Math.round(y/n*i);t.lineTo((f-c)*l+this.halfPixel,i-m+a)}for(d=v-1;p<=d;d--){var b=r[2*d+1]||0,g=Math.round(b/n*i);t.lineTo((d-c)*l+this.halfPixel,i-g+a)}t.closePath(),t.fill()}}}},{key:\"fillRect\",value:function(e,t,r,n){var i,a=Math.floor(e/this.maxCanvasWidth),s=Math.min(Math.ceil((e+r)/this.maxCanvasWidth)+1,this.canvases.length);for(i=a;i<s;i++){var o=this.canvases[i],u=i*this.maxCanvasWidth,l={x1:Math.max(e,i*this.maxCanvasWidth),y1:t,x2:Math.min(e+r,i*this.maxCanvasWidth+o.waveCtx.canvas.width),y2:t+n};l.x1<l.x2&&(this.setFillStyles(o),this.fillRectToContext(o.waveCtx,l.x1-u,l.y1,l.x2-l.x1,l.y2-l.y1),this.fillRectToContext(o.progressCtx,l.x1-u,l.y1,l.x2-l.x1,l.y2-l.y1))}}},{key:\"prepareDraw\",value:function(s,o,u,l,c){var h=this;return f.frame(function(){if(s[0]instanceof Array){var e=s;if(h.params.splitChannels)return h.setHeight(e.length*h.params.height*h.params.pixelRatio),e.forEach(function(e,t){return h.prepareDraw(e,t,u,l,c)});s=e[0]}var t=1/h.params.barHeight;if(h.params.normalize){var r=f.max(s),n=f.min(s);t=r<-n?-n:r}var i=[].some.call(s,function(e){return e<0}),a=h.params.height*h.params.pixelRatio;return c({absmax:t,hasMinVals:i,height:a,offsetY:a*o||0,halfH:a/2,peaks:s})})()}},{key:\"fillRectToContext\",value:function(e,t,r,n,i){e&&e.fillRect(t,r,n,i)}},{key:\"setFillStyles\",value:function(e){e.waveCtx.fillStyle=this.params.waveColor,this.hasProgressCanvas&&(e.progressCtx.fillStyle=this.params.progressColor)}},{key:\"getImage\",value:function(t,r){var e=this.canvases.map(function(e){return e.wave.toDataURL(t,r)});return 1<e.length?e:e[0]}},{key:\"updateProgress\",value:function(e){this.style(this.progressWave,{width:e+\"px\"})}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=c,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var a=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==n(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var i=function(e){function n(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(r=o(this,u(n).call(this))).container=e,r.params=t,r.width=0,r.height=t.height*r.params.pixelRatio,r.lastPos=0,r.wrapper=null,r}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(n,a.Observer),t=n,(r=[{key:\"style\",value:function(e,t){return a.style(e,t)}},{key:\"createWrapper\",value:function(){this.wrapper=this.container.appendChild(document.createElement(\"wave\")),this.style(this.wrapper,{display:\"block\",position:\"relative\",userSelect:\"none\",webkitUserSelect:\"none\",height:this.params.height+\"px\"}),(this.params.fillParent||this.params.scrollParent)&&this.style(this.wrapper,{width:\"100%\",overflowX:this.params.hideScrollbar?\"hidden\":\"auto\",overflowY:\"hidden\"}),this.setupWrapperEvents()}},{key:\"handleEvent\",value:function(e,t){!t&&e.preventDefault();var r,n=e.targetTouches?e.targetTouches[0].clientX:e.clientX,i=this.wrapper.getBoundingClientRect(),a=this.width,s=this.getWidth();return!this.params.fillParent&&a<s?1<(r=(n-i.left)*(this.params.pixelRatio/a)||0)&&(r=1):r=(n-i.left+this.wrapper.scrollLeft)/this.wrapper.scrollWidth||0,r}},{key:\"setupWrapperEvents\",value:function(){var n=this;this.wrapper.addEventListener(\"click\",function(e){var t=n.wrapper.offsetHeight-n.wrapper.clientHeight;if(0!=t){var r=n.wrapper.getBoundingClientRect();if(e.clientY>=r.bottom-t)return}n.params.interact&&n.fireEvent(\"click\",e,n.handleEvent(e))}),this.wrapper.addEventListener(\"scroll\",function(e){return n.fireEvent(\"scroll\",e)})}},{key:\"drawPeaks\",value:function(e,t,r,n){this.setWidth(t)||this.clearWave(),this.params.barWidth?this.drawBars(e,0,r,n):this.drawWave(e,0,r,n)}},{key:\"resetScroll\",value:function(){null!==this.wrapper&&(this.wrapper.scrollLeft=0)}},{key:\"recenter\",value:function(e){var t=this.wrapper.scrollWidth*e;this.recenterOnPosition(t,!0)}},{key:\"recenterOnPosition\",value:function(e,t){var r=this.wrapper.scrollLeft,n=~~(this.wrapper.clientWidth/2),i=this.wrapper.scrollWidth-this.wrapper.clientWidth,a=e-n,s=a-r;if(0!=i){if(!t&&-n<=s&&s<n){a=r+(s=Math.max(-5,Math.min(5,s)))}(a=Math.max(0,Math.min(i,a)))!=r&&(this.wrapper.scrollLeft=a)}}},{key:\"getScrollX\",value:function(){var e=this.params.pixelRatio,t=Math.round(this.wrapper.scrollLeft*e);if(this.params.scrollParent){var r=~~(this.wrapper.scrollWidth*e-this.getWidth());t=Math.min(r,Math.max(0,t))}return t}},{key:\"getWidth\",value:function(){return Math.round(this.container.clientWidth*this.params.pixelRatio)}},{key:\"setWidth\",value:function(e){return this.width!=e&&(this.width=e,this.params.fillParent||this.params.scrollParent?this.style(this.wrapper,{width:\"\"}):this.style(this.wrapper,{width:~~(this.width/this.params.pixelRatio)+\"px\"}),this.updateSize(),!0)}},{key:\"setHeight\",value:function(e){return e!=this.height&&(this.height=e,this.style(this.wrapper,{height:~~(this.height/this.params.pixelRatio)+\"px\"}),this.updateSize(),!0)}},{key:\"progress\",value:function(e){var t=1/this.params.pixelRatio,r=Math.round(e*this.width)*t;if(r<this.lastPos||r-this.lastPos>=t){if(this.lastPos=r,this.params.scrollParent&&this.params.autoCenter){var n=~~(this.wrapper.scrollWidth*e);this.recenterOnPosition(n)}this.updateProgress(r)}}},{key:\"destroy\",value:function(){this.unAll(),this.wrapper&&(this.wrapper.parentNode==this.container&&this.container.removeChild(this.wrapper),this.wrapper=null)}},{key:\"updateCursor\",value:function(){}},{key:\"updateSize\",value:function(){}},{key:\"drawBars\",value:function(e,t,r,n){}},{key:\"drawWave\",value:function(e,t,r,n){}},{key:\"clearWave\",value:function(){}},{key:\"updateProgress\",value:function(e){}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=i,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n,a=(n=r(3))&&n.__esModule?n:{default:n};!function(e){{if(e&&e.__esModule)return;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}t.default=e}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e,t,r){return(u=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(n){var i=Object.getOwnPropertyDescriptor(n,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=function(e){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(t=o(this,l(n).call(this,e))).params=e,t.media={currentTime:0,duration:0,paused:!0,playbackRate:1,play:function(){},pause:function(){},volume:0},t.mediaType=e.mediaType.toLowerCase(),t.elementPosition=e.elementPosition,t.peaks=null,t.playbackRate=1,t.volume=1,t.buffer=null,t.onPlayEnd=null,t}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(n,a.default),t=n,(r=[{key:\"init\",value:function(){this.setPlaybackRate(this.params.audioRate),this.createTimer()}},{key:\"createTimer\",value:function(){var t=this;this.on(\"play\",function e(){t.isPaused()||(t.fireEvent(\"audioprocess\",t.getCurrentTime()),(window.requestAnimationFrame||window.webkitRequestAnimationFrame)(e))}),this.on(\"pause\",function(){t.fireEvent(\"audioprocess\",t.getCurrentTime())})}},{key:\"load\",value:function(e,t,r,n){var i=document.createElement(this.mediaType);i.controls=this.params.mediaControls,i.autoplay=this.params.autoplay||!1,i.preload=null==n?\"auto\":n,i.src=e,i.style.width=\"100%\";var a=t.querySelector(this.mediaType);a&&t.removeChild(a),t.appendChild(i),this._load(i,r)}},{key:\"loadElt\",value:function(e,t){e.controls=this.params.mediaControls,e.autoplay=this.params.autoplay||!1,this._load(e,t)}},{key:\"_load\",value:function(e,t){var r=this;\"function\"==typeof e.load&&e.load(),e.addEventListener(\"error\",function(){r.fireEvent(\"error\",\"Error loading media element\")}),e.addEventListener(\"canplay\",function(){r.fireEvent(\"canplay\")}),e.addEventListener(\"ended\",function(){r.fireEvent(\"finish\")}),e.addEventListener(\"play\",function(){r.fireEvent(\"play\")}),e.addEventListener(\"pause\",function(){r.fireEvent(\"pause\")}),this.media=e,this.peaks=t,this.onPlayEnd=null,this.buffer=null,this.setPlaybackRate(this.playbackRate),this.setVolume(this.volume)}},{key:\"isPaused\",value:function(){return!this.media||this.media.paused}},{key:\"getDuration\",value:function(){if(this.explicitDuration)return this.explicitDuration;var e=(this.buffer||this.media).duration;return 1/0<=e&&(e=this.media.seekable.end(0)),e}},{key:\"getCurrentTime\",value:function(){return this.media&&this.media.currentTime}},{key:\"getPlayedPercents\",value:function(){return this.getCurrentTime()/this.getDuration()||0}},{key:\"getPlaybackRate\",value:function(){return this.playbackRate||this.media.playbackRate}},{key:\"setPlaybackRate\",value:function(e){this.playbackRate=e||1,this.media.playbackRate=this.playbackRate}},{key:\"seekTo\",value:function(e){null!=e&&(this.media.currentTime=e),this.clearPlayEnd()}},{key:\"play\",value:function(e,t){this.seekTo(e);var r=this.media.play();return t&&this.setPlayEnd(t),r}},{key:\"pause\",value:function(){var e;return this.media&&(e=this.media.pause()),this.clearPlayEnd(),e}},{key:\"setPlayEnd\",value:function(t){var r=this;this._onPlayEnd=function(e){t<=e&&(r.pause(),r.seekTo(t))},this.on(\"audioprocess\",this._onPlayEnd)}},{key:\"clearPlayEnd\",value:function(){this._onPlayEnd&&(this.un(\"audioprocess\",this._onPlayEnd),this._onPlayEnd=null)}},{key:\"getPeaks\",value:function(e,t,r){return this.buffer?u(l(n.prototype),\"getPeaks\",this).call(this,e,t,r):this.peaks||[]}},{key:\"setSinkId\",value:function(e){return e?this.media.setSinkId?this.media.setSinkId(e):Promise.reject(new Error(\"setSinkId is not supported in your browser\")):Promise.reject(new Error(\"Invalid deviceId: \"+e))}},{key:\"getVolume\",value:function(){return this.volume||this.media.volume}},{key:\"setVolume\",value:function(e){this.volume=e,this.media.volume=this.volume}},{key:\"destroy\",value:function(){this.pause(),this.unAll(),this.params.removeMediaElementOnDestroy&&this.media&&this.media.parentNode&&this.media.parentNode.removeChild(this.media),this.media=null}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=h,e.exports=t.default},function(e,t,r){\"use strict\";function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.clearPeakCache()}var t,r,n;return t=e,(r=[{key:\"clearPeakCache\",value:function(){this.peakCacheRanges=[],this.peakCacheLength=-1}},{key:\"addRangeToPeakCache\",value:function(e,t,r){e!=this.peakCacheLength&&(this.clearPeakCache(),this.peakCacheLength=e);for(var n=[],i=0;i<this.peakCacheRanges.length&&this.peakCacheRanges[i]<t;)i++;for(i%2==0&&n.push(t);i<this.peakCacheRanges.length&&this.peakCacheRanges[i]<=r;)n.push(this.peakCacheRanges[i]),i++;i%2==0&&n.push(r),n=n.filter(function(e,t,r){return 0==t?e!=r[t+1]:t==r.length-1?e!=r[t-1]:e!=r[t-1]&&e!=r[t+1]}),this.peakCacheRanges=this.peakCacheRanges.concat(n),this.peakCacheRanges=this.peakCacheRanges.sort(function(e,t){return e-t}).filter(function(e,t,r){return 0==t?e!=r[t+1]:t==r.length-1?e!=r[t-1]:e!=r[t-1]&&e!=r[t+1]});var a=[];for(i=0;i<n.length;i+=2)a.push([n[i],n[i+1]]);return a}},{key:\"getCacheRanges\",value:function(){var e,t=[];for(e=0;e<this.peakCacheRanges.length;e+=2)t.push([this.peakCacheRanges[e],this.peakCacheRanges[e+1]]);return t}}])&&i(t.prototype,r),n&&i(t,n),e}();t.default=n,e.exports=t.default}])});\r\n//# sourceMappingURL=wavesurfer.min.js.map\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n *  howler.js v2.0.15\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto iOS enabler.\r\n      self.mobileAutoEnable = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mobile browsers will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _enableMobileAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this on mobile devices if audio isn't already eanbled.\r\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome/i.test(self._navigator && self._navigator.userAgent);\r\n      if (self._mobileEnabled || !self.ctx || !isMobile) {\r\n        return;\r\n      }\r\n\r\n      self._mobileEnabled = false;\r\n      self.mobileAutoEnable = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Fix Android can not play in suspend state.\r\n        Howler._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._mobileEnabled = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n      self._xhronwaiting = o.xhronwaiting || false;\r\n\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n      self._onwait = o.onwait ? o.onwait : null\r\n      \r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio on iOS.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\r\n        Howler._enableMobileAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended.\r\n        // If there is, play that sound. If not, continue as usual.\r\n        var num = 0;\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n            num++;\r\n            id = self._sounds[i]._id;\r\n          }\r\n        }\r\n\r\n        if (num === 1) {\r\n          sprite = null;\r\n        } else {\r\n          id = null;\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Makr this sounded as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n      // Update the parameters of the sound\r\n      sound._paused = false;\r\n      sound._ended = false;\r\n      sound._sprite = sprite;\r\n      sound._seek = seek;\r\n      sound._start = self._sprite[sprite][0] / 1000;\r\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (sound._seek >= sound._stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Mobile browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n                });\r\n            } else if (!internal) {\r\n              self._emit('play', sound._id);\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            sound._rateSeek = self.seek(id[i]);\r\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n          if (!checkIE) {\r\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n          }\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        self._node = new Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Listen for 'waiting' event to let us know if it's buffering\r\n        self._waiting = self._onwaiting.bind(self);\r\n        self._node.addEventListener('waiting', self._waiting, false);\r\n\r\n        // Listen for 'playing' event to let us know if it's buffering\r\n        self._playing = self._onplaying.bind(self);\r\n        self._node.addEventListener('playing', self._playing, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    },\r\n    \r\n    /**\r\n     * Get Progress Event\r\n     * @return {Howler}\r\n     */\r\n    _onwaiting: function(){\r\n      var self = this;\r\n      var id = self._parent._onwait;\r\n      var testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton'];\r\n      var repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat',\r\n        'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'grammarRepeatAudioPlayButton', 'testGrammarAudioButtonRepeat', 'cultureRepeatAudioPlayButton',\r\n        'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton',\r\n        'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton',\r\n        'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton',\r\n        'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton',\r\n        'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton',\r\n        'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton',\r\n        'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton',\r\n        'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton',\r\n        'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton',\r\n        'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton',\r\n        'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton',\r\n        'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton',\r\n        'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton',\r\n        'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton',\r\n        'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton',\r\n        'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton',\r\n        'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton',\r\n        'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton',\r\n        'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton',\r\n        'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton',\r\n        'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile',\r\n        'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile',\r\n        'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile',\r\n        'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile',\r\n        'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile',\r\n        'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile',\r\n        'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile',\r\n        'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile',\r\n        'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile',\r\n        'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile',\r\n        'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile',\r\n        'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile',\r\n        'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile'];\r\n      if(testButtons.indexOf(id) >= 0){\r\n        $('#' + id).removeClass('fa fa-play');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }else if(repeatButtons.indexOf(id) === -1){\r\n        // implement remove class here using ios, if this is implemented it affects the wholle process\r\n        // implement only on the IPA\r\n        // findout why sub component not working with removeclass while wokring on javascript style\r\n        $('#' + id).removeClass('fa fa-volume-up');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }else{\r\n        $('#' + id).removeClass('fas fa-sync');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Get Playing Event\r\n     * @return {Howler}\r\n     */\r\n    _onplaying: function(){\r\n      var self = this;\r\n      var id = self._parent._onwait;\r\n      var testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton'];\r\n      var repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat',\r\n        'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'grammarRepeatAudioPlayButton', 'testGrammarAudioButtonRepeat', 'cultureRepeatAudioPlayButton',\r\n        'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton',\r\n        'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton',\r\n        'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton',\r\n        'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton',\r\n        'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton',\r\n        'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton',\r\n        'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton',\r\n        'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton',\r\n        'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton',\r\n        'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton',\r\n        'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton',\r\n        'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton',\r\n        'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton',\r\n        'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton',\r\n        'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton',\r\n        'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton',\r\n        'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton',\r\n        'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton',\r\n        'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton',\r\n        'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton',\r\n        'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile',\r\n        'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile',\r\n        'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile',\r\n        'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile',\r\n        'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile',\r\n        'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile',\r\n        'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile',\r\n        'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile',\r\n        'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile',\r\n        'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile',\r\n        'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile',\r\n        'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile',\r\n        'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile'];\r\n      if(testButtons.indexOf(id) >= 0){\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fa fa-play')\r\n      }else if(repeatButtons.indexOf(id) === -1){\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fa fa-volume-up')\r\n      }else{\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fas fa-sync')\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      \r\n      xhr.onwaiting = function(e) {\r\n        self._emit('onwaiting', e);\r\n      }\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (true) {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.0.15\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"playerHowler\"] = playerHowler;\n/* harmony export (immutable) */ __webpack_exports__[\"visualizerPlay\"] = visualizerPlay;\n/* harmony export (immutable) */ __webpack_exports__[\"pause\"] = pause;\n/* harmony export (immutable) */ __webpack_exports__[\"pauseHowler\"] = pauseHowler;\n/* harmony export (immutable) */ __webpack_exports__[\"playHowler\"] = playHowler;\n/* harmony export (immutable) */ __webpack_exports__[\"hideModal\"] = hideModal;\n/* harmony export (immutable) */ __webpack_exports__[\"showModal\"] = showModal;\n/* harmony export (immutable) */ __webpack_exports__[\"hideDashboardModal\"] = hideDashboardModal;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer_js__ = __webpack_require__(458);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_wavesurfer_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Howler_dist_howlerCustom_js__ = __webpack_require__(494);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_Howler_dist_howlerCustom_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_Howler_dist_howlerCustom_js__);\n\n\nvar previousButton = null;\nvar visualizerButton = null;\nvar wavesurfer = null;\nvar audio = null;\nvar url = null;\nvar prevWaveUrl = null;\nvar pronounciationAudio = ['pronounciationAudio1', 'pronounciationAudio2', 'pronounciationAudio3', 'pronounciationAudio4', 'pronounciationAudio5', 'pronounciationAudio6', 'pronounciationAudio7', 'pronounciationAudio8', 'pronounciationAudio9', 'pronounciationAudio10', 'pronounciationAudio11', 'pronounciationAudio12', 'pronounciationAudio13', 'pronounciationAudio14', 'pronounciationAudio15', 'pronounciationAudio16', 'pronounciationAudio17', 'pronounciationAudio18', 'pronounciationAudio19', 'pronounciationAudio20', 'pronounciationAudio21', 'pronounciationAudio22', 'pronounciationAudio23', 'pronounciationAudio24', 'pronounciationAudio25', 'pronounciationAudio26', 'pronounciationAudio27', 'pronounciationAudio28', 'pronounciationAudio29'];\nvar pauseButton = ['testSpanishPauseButton', 'testGrammarAudioPauseButton', 'testEnglishPauseButton', 'testGrammarPauseButton'];\nvar repeatButtonsTest = ['testSpanishButtonRepeat', 'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'testGrammarAudioButtonRepeat'];\nvar testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton'];\nvar repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat', 'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'testGrammarAudioButtonRepeat', 'grammarRepeatAudioPlayButton', 'cultureRepeatAudioPlayButton', 'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton', 'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton', 'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton', 'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton', 'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton', 'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton', 'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton', 'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton', 'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton', 'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton', 'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton', 'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton', 'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton', 'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton', 'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton', 'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton', 'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton', 'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton', 'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton', 'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton', 'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile', 'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile', 'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile', 'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile', 'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile', 'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile', 'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile', 'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile', 'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile', 'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile', 'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile', 'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile', 'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile'];\n\nfunction checkIfButtonExist(button) {\n  for (var i = 0; i < repeatButtons.length; i++) {\n    if (repeatButtons[i] === button) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction playerHowler(url, id) {\n  var emptyAudioArray = ['http://api.talkfluentspanish.com/api/publicnull', 'http://api.talkfluentspanish.com/api/publicNONE', 'http://api.talkfluentspanish.com/api/publicnone', 'http://api.talkfluentspanish.com/api/public', 'https://api.talkfluentspanish.com/api/publicnull', 'https://api.talkfluentspanish.com/api/publicNONE', 'https://api.talkfluentspanish.com/api/publicnone', 'https://api.talkfluentspanish.com/api/public'];\n  if (previousButton !== null) {\n    changeToInitial(previousButton);\n  }\n  changeToSpinning(id);\n  if (parseInt(id) === 0) {\n    if (previousButton !== null) {\n      makeInActive(previousButton);\n      previousButton = null;\n    }\n  } else if (parseInt(id) === 1) {\n    if (previousButton !== null) {\n      makeInActive(previousButton);\n      previousButton = null;\n    }\n  } else {\n    if (previousButton === null) {\n      makeActive(id);\n      previousButton = id;\n      if (visualizerButton !== null) {\n        makeInActive(visualizerButton);\n        visualizerButton = null;\n      }\n    } else {\n      if (previousButton === id && checkIfButtonExist(previousButton) || previousButton === id) {} else {\n        makeActive(id);\n        makeInActive(previousButton);\n        previousButton = id;\n        if (visualizerButton !== null) {\n          makeInActive(visualizerButton);\n          visualizerButton = null;\n        }\n      }\n    }\n  }\n  if (emptyAudioArray.indexOf(url) === -1) {\n    if (audio !== null) {\n      audio.unload();\n    }\n    if (wavesurfer !== null) {\n      wavesurfer.un('finish', null);\n      wavesurfer.setVolume(0);\n    }\n    if (id !== 1) {\n      audio = new __WEBPACK_IMPORTED_MODULE_1_Howler_dist_howlerCustom_js__[\"Howl\"]({\n        src: url,\n        html5: true,\n        buffer: true,\n        onplay: function onplay() {\n          changeToInitial(id);\n        },\n        onwait: id\n      });\n\n      audio.play();\n      if (checkIfButtonExist(id)) {\n        audio.on('end', function () {\n          audio.play();\n        });\n      }\n    } else if (id === 1) {\n      window.setTimeout(function () {\n        initVisualizer(url);\n      }, 1000);\n    }\n  } else {\n    if (previousButton !== null) {\n      makeInActive(previousButton);\n    } else {}\n    pause();\n    wavesurfer = null;\n    previousButton = null;\n    visualizerButton = null;\n    var waveSurferFlag = document.getElementById('mp3_player');\n    waveSurferFlag.style.visibility = 'hidden';\n    alert('No Audio Found!');\n  }\n}\n\nfunction changeToSpinning(id) {\n  if (testButtons.indexOf(id) >= 0) {\n    $('#' + id).removeClass('fa fa-play');\n    $('#' + id).addClass('fas fa-circle-notch fa-spin');\n  } else if (repeatButtons.indexOf(id) === -1) {\n    $('#' + id).removeClass('fa fa-volume-up');\n    $('#' + id).addClass('fas fa-circle-notch fa-spin');\n  } else {\n    $('#' + id).removeClass('fas fa-sync');\n    $('#' + id).addClass('fas fa-circle-notch fa-spin');\n  }\n}\n\nfunction changeToInitial(id) {\n  if (testButtons.indexOf(id) >= 0) {\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin');\n    $('#' + id).addClass('fa fa-play');\n  } else if (repeatButtons.indexOf(id) === -1) {\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin');\n    $('#' + id).addClass('fa fa-volume-up');\n  } else {\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin');\n    $('#' + id).addClass('fas fa-sync');\n  }\n}\n\nfunction initVisualizer(url) {\n  var progressFlag = document.getElementById('spinnerFlag');\n  var waveSurferFlag = document.getElementById('mp3_player');\n  $('#visualizerAudioPlayButton').removeClass('fa fa-volume-up');\n  $('#visualizerAudioPlayButton').addClass('fas fa-circle-notch fa-spin');\n\n  waveSurferFlag.style.visibility = 'hidden';\n  var parameter = {\n    container: '#mp3_player',\n    waveColor: '#1caceb',\n    progressColor: '#1caceb',\n    hideScrollbar: true,\n    height: 128,\n    backend: 'MediaElement'\n  };\n  prevWaveUrl = url;\n  if (wavesurfer === null) {\n    wavesurfer = __WEBPACK_IMPORTED_MODULE_0_wavesurfer_js___default.a.create(parameter);\n  } else {\n    wavesurfer.destroy();\n    wavesurfer = __WEBPACK_IMPORTED_MODULE_0_wavesurfer_js___default.a.create(parameter);\n  }\n  wavesurfer.load(url);\n  wavesurfer.on('ready', function () {\n    window.setTimeout(function () {\n      $('#visualizerAudioPlayButton').removeClass('fas fa-circle-notch fa-spin');\n      $('#visualizerAudioPlayButton').addClass('fa fa-volume-up');\n      waveSurferFlag.style.visibility = 'visible';\n    }, 100);\n    window.setTimeout(function () {\n      wavesurfer.play(0);\n      wavesurfer.drawer.progress(0);\n    }, 100);\n  });\n}\n\nfunction visualizerPlay(id) {\n  if (wavesurfer !== null) {\n    wavesurfer.setVolume(1);\n    wavesurfer.play(0);\n    wavesurfer.drawer.progress(0);\n    var iDevices = ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'];\n    var deviceFlag = false;\n    if (navigator.platform) {\n      while (iDevices.length) {\n        if (navigator.platform === iDevices.pop()) {\n          deviceFlag = true;\n        }\n      }\n    }\n    if (deviceFlag === true) {\n      changeToSpinning(id);\n      var waveSurferFlag = document.getElementById('mp3_player');\n      waveSurferFlag.style.visibility = 'hidden';\n      wavesurfer.load(prevWaveUrl);\n      wavesurfer.on('ready', function () {\n        window.setTimeout(function () {\n          changeToInitial(id);\n          waveSurferFlag.style.visibility = 'visible';\n          wavesurfer.play(0);\n          wavesurfer.drawer.progress(0);\n        }, 100);\n      });\n    } else {\n      if (id === 'visualizerRepeatAudioPlayButton') {\n        makeActive('visualizerRepeatAudioPlayButton');\n        makeInActive('visualizerAudioPlayButton');\n        visualizerButton = 'visualizerRepeatAudioPlayButton';\n        wavesurfer.on('finish', function () {\n          wavesurfer.play(0);\n          wavesurfer.drawer.progress(0);\n        });\n      } else {\n        makeActive('visualizerAudioPlayButton');\n        makeInActive('visualizerRepeatAudioPlayButton');\n        visualizerButton = 'visualizerAudioPlayButton';\n\n        wavesurfer.un('finish', null);\n      }\n    }\n  }\n  if (previousButton !== null) {\n    makeInActive(previousButton);\n    previousButton = id;\n  }\n  if (audio !== null) {\n    audio.unload();\n  }\n}\n\nfunction pause() {\n  if (audio !== null) {\n    audio.pause();\n    makeInActive(previousButton);\n  }\n  if (wavesurfer !== null) {\n    wavesurfer.pause();\n    makeInActive(previousButton);\n  }\n  previousButton = null;\n}\n\nfunction pauseHowler(urlP, id) {\n  if (previousButton === null) {\n    previousButton = id;\n    makeActive(previousButton);\n  } else if (previousButton !== id) {\n    makeInActive(previousButton);\n    makeActive(id);\n    previousButton = id;\n  }\n  if (audio !== null && url === urlP) {\n    audio.pause();\n  } else if (audio !== null && url !== urlP && pauseButton.indexOf(id) > -1) {\n    audio.pause();\n    audio.unload();\n    audio = null;\n    makeInActive(previousButton);\n  }\n}\n\nfunction playHowler(urlP, id) {\n  if (audio === null) {\n    url = urlP;\n    playerHowler(urlP, id);\n  } else {\n    if (urlP === url) {\n      makeInActive(previousButton);\n      makeActive(id);\n      if (pauseButton.indexOf(previousButton) > -1) {\n        audio.play();\n        if (repeatButtonsTest.indexOf(id) > -1) {\n          audio.on('end', function () {\n            audio.play();\n          });\n        } else {\n          audio.off('end');\n        }\n      } else if (testButtons.indexOf(previousButton) > -1 && repeatButtonsTest.indexOf(id) > -1 && audio.playing() === false) {\n        audio.seek(0);\n        audio.play();\n        audio.on('end', function () {\n          audio.play();\n        });\n      } else if (testButtons.indexOf(previousButton) > -1 && testButtons.indexOf(id) > -1 && audio.playing() === false) {\n        audio.seek(0);\n        audio.play();\n      } else {\n        if (repeatButtonsTest.indexOf(id) > -1) {\n          audio.on('end', function () {\n            audio.play();\n          });\n        } else {\n          audio.off('end');\n        }\n      }\n      previousButton = id;\n    } else {\n      url = urlP;\n      audio.pause();\n      audio.unload();\n      audio = null;\n      makeInActive(previousButton);\n      playerHowler(urlP, id);\n    }\n  }\n}\n\nfunction makeActive(id) {\n  var container = document.getElementById(id);\n\n  if (id === 'lessonAudioPlayButton' || id === 'lessonAudioPlayButtonRepeat' || id === 'grammarAudioPlayButton' || id === 'grammarAudioPlayButtonRepeat' || pronounciationAudio.indexOf(id) > -1) {\n    container.style.background = '#ccc';\n  } else {\n    container.style.background = '#1caceb';\n  }\n  container.style.color = '#fff';\n}\n\nfunction makeInActive(id) {\n  var container = document.getElementById(id);\n  if (container !== null) {\n    container.style.color = '#1caceb';\n    if (id === 'lessonAudioPlayButton' || id === 'lessonAudioPlayButtonRepeat' || id === 'grammarAudioPlayButton' || id === 'grammarAudioPlayButtonRepeat' || pronounciationAudio.indexOf(id) > -1) {\n      container.style.background = '#fff';\n    } else {\n      container.style.background = 'inherit';\n    }\n  }\n}\n\nfunction hideModal(modal) {\n  $(modal).modal('hide');\n}\n\nfunction showModal(modal) {\n  $(modal).modal({\n    backdrop: 'static',\n    keyboard: true,\n    show: true\n  });\n}\n\nfunction hideDashboardModal() {\n  $('#dashboardModal').modal('hide');\n}\n\n/***/ }),\n\n/***/ 620:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__router__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_auth__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config_js__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_howler__ = __webpack_require__(436);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_howler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_howler__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_audio__ = __webpack_require__(496);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  mounted: function mounted() {\n    this.view(this.$route.params.parameter);\n    this.initWistia();\n  },\n  created: function created() {},\n  data: function data() {\n    return {\n      user: __WEBPACK_IMPORTED_MODULE_1__services_auth__[\"a\" /* default */].user,\n      tokenData: __WEBPACK_IMPORTED_MODULE_1__services_auth__[\"a\" /* default */].tokenData,\n      audio: null,\n      config: __WEBPACK_IMPORTED_MODULE_2__config_js__[\"default\"],\n      word: [],\n      sentence: [],\n      lesson: [],\n      contents: [],\n      prevLessonIndex: null,\n      isActive: {\n        word: true,\n        sentence: false,\n        lesson: false\n      },\n      wordAudio: null,\n      parameter: this.$route.params.parameter,\n      tickToggle: false,\n      wistia: {\n        url: 'http://fast.wistia.com/assets/external/E-v1.js',\n        charset: 'ISO-8859-1'\n      },\n      active: null,\n      wordPrevFlag: false,\n      wordNextFlag: true,\n      wordLimit: 5,\n      wordLimitAdder: 0,\n      activeSentence: null,\n      sentencePrevFlag: false,\n      sentenceNextFlag: true,\n      sentenceLimit: 5,\n      sentenceLimitAdder: 0,\n      audioHandler: __WEBPACK_IMPORTED_MODULE_4__components_audio__\n    };\n  },\n\n  methods: {\n    initWistia: function initWistia() {\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = this.wistia.url;\n      script.charset = this.wistia.charset;\n      document.body.appendChild(script);\n    },\n    redirectDashboard: function redirectDashboard(parameter) {\n      __WEBPACK_IMPORTED_MODULE_0__router__[\"a\" /* default */].push(parameter);\n      this.audioHandler.pause();\n    },\n    redirect: function redirect(parameter, method) {\n      this.active = null;\n      this.activeSentence = null;\n      __WEBPACK_IMPORTED_MODULE_0__router__[\"a\" /* default */].push(parameter + method);\n      this.view(method);\n    },\n    view: function view(method) {\n      if (this.audio !== null) {\n        this.audio.pause();\n      }\n      if (method === 'word') {\n        this.isActive.word = true;\n        this.isActive.sentence = false;\n        this.isActive.lesson = false;\n      } else if (method === 'sentence') {\n        this.isActive.word = false;\n        this.isActive.sentence = true;\n        this.isActive.lesson = false;\n      } else {\n        this.isActive.word = false;\n        this.isActive.sentence = false;\n        this.isActive.lesson = true;\n      }\n      if (this.isActive.word === true) {\n        this.retrieveWord('');\n      } else if (this.isActive.sentence === true) {\n        this.retrieveSentence('');\n      } else {\n        this.retrieveLesson();\n      }\n    },\n    sortWord: function sortWord(i) {\n      var char = String.fromCharCode(i + 64);\n      this.retrieveWord(char);\n    },\n    pager: function pager(index) {\n      this.active = index;\n      if (this.active === 90) {\n        this.wordNextFlag = false;\n        this.wordPrevFlag = true;\n      } else if (this.active === 65) {\n        this.wordNextFlag = true;\n        this.wordPrevFlag = false;\n      } else {\n        this.wordNextFlag = true;\n        this.wordPrevFlag = true;\n      }\n    },\n    wordNext: function wordNext() {\n      if (this.active < 90) {\n        this.active++;\n        this.wordNextFlag = true;\n        this.wordPrevFlag = true;\n        this.retrieveWord(String.fromCharCode(this.active));\n      }\n      if (this.active === 90) {\n        this.wordNextFlag = false;\n        this.wordPrevFlag = true;\n      }\n    },\n    wordPrev: function wordPrev() {\n      if (this.active > 65) {\n        this.active--;\n        this.wordNextFlag = true;\n        this.wordPrevFlag = true;\n        this.retrieveWord(String.fromCharCode(this.active));\n      }\n      if (this.active === 65) {\n        this.wordNextFlag = true;\n        this.wordPrevFlag = false;\n      }\n    },\n    wordMobileNext: function wordMobileNext() {\n      if (this.active < 90) {\n        this.active++;\n        this.wordNextFlag = true;\n        this.wordPrevFlag = true;\n        this.retrieveWord(String.fromCharCode(this.active));\n        if (this.wordLimitAdder < 21) {\n          this.wordLimitAdder++;\n        }\n      }\n      if (this.active === 90) {\n        this.wordNextFlag = false;\n        this.wordPrevFlag = true;\n      }\n    },\n    wordMobilePrev: function wordMobilePrev() {\n      if (this.active > 65) {\n        this.active--;\n        this.wordNextFlag = true;\n        this.wordPrevFlag = true;\n        this.retrieveWord(String.fromCharCode(this.active));\n        if (this.wordLimitAdder >= 1) {\n          this.wordLimitAdder--;\n        }\n      }\n      if (this.active === 65) {\n        this.wordNextFlag = true;\n        this.wordPrevFlag = false;\n      }\n    },\n    retrieveWord: function retrieveWord(char) {\n      var _this = this;\n\n      var parameter = {\n        'account_id': this.user.userID,\n        'char': char + '%'\n      };\n      $('#loading').css({ 'display': 'block' });\n      this.APIRequest('save/retrieve_history', parameter).then(function (response) {\n        $('#loading').css({ 'display': 'none' });\n        _this.word = response.data;\n      });\n    },\n    sortSentence: function sortSentence(i) {\n      var char = String.fromCharCode(i + 64);\n      this.retrieveSentence(char);\n    },\n    pagerSentence: function pagerSentence(index) {\n      this.activeSentence = index;\n      if (this.activeSentence === 90) {\n        this.sentenceNextFlag = false;\n        this.sentencePrevFlag = true;\n      } else if (this.activeSentence === 65) {\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = false;\n      } else {\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = true;\n      }\n    },\n    sentenceNext: function sentenceNext() {\n      if (this.activeSentence < 90) {\n        this.activeSentence++;\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = true;\n        this.retrieveSentence(String.fromCharCode(this.activeSentence));\n      }\n      if (this.activeSentence === 90) {\n        this.sentenceNextFlag = false;\n        this.sentencePrevFlag = true;\n      }\n    },\n    sentencePrev: function sentencePrev() {\n      if (this.activeSentence > 65) {\n        this.activeSentence--;\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = true;\n        this.retrieveSentence(String.fromCharCode(this.activeSentence));\n      }\n      if (this.activeSentence === 65) {\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = false;\n      }\n    },\n    sentenceMobileNext: function sentenceMobileNext() {\n      if (this.activeSentence < 90) {\n        this.activeSentence++;\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = true;\n        this.retrieveSentence(String.fromCharCode(this.activeSentence));\n        if (this.sentenceLimitAdder < 21) {\n          this.sentenceLimitAdder++;\n        }\n      }\n      if (this.activeSentence === 90) {\n        this.sentenceNextFlag = false;\n        this.sentencePrevFlag = true;\n      }\n    },\n    sentenceMobilePrev: function sentenceMobilePrev() {\n      if (this.activeSentence > 65) {\n        this.activeSentence--;\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = true;\n        this.retrieveSentence(String.fromCharCode(this.activeSentence));\n        if (this.sentenceLimitAdder >= 1) {\n          this.sentenceLimitAdder--;\n        }\n      }\n      if (this.activeSentence === 65) {\n        this.sentenceNextFlag = true;\n        this.sentencePrevFlag = false;\n      }\n    },\n    retrieveSentence: function retrieveSentence(char) {\n      var _this2 = this;\n\n      var parameter = {\n        'account_id': this.user.userID,\n        char: char + '%'\n      };\n      $('#loading').css({ 'display': 'block' });\n      this.APIRequest('save_content/retrieve_history', parameter).then(function (response) {\n        $('#loading').css({ 'display': 'none' });\n        _this2.sentence = response.data;\n      });\n    },\n    retrieveLesson: function retrieveLesson() {\n      var _this3 = this;\n\n      var parameter = {\n        'account_id': this.user.userID\n      };\n      $('#loading').css({ 'display': 'block' });\n      this.APIRequest('lesson/retrieve_history', parameter).then(function (response) {\n        $('#loading').css({ 'display': 'none' });\n        if (response.data.length > 0) {\n          _this3.lesson = response.data;\n        } else {\n          _this3.lesson = [];\n        }\n      });\n    },\n    retrieveContent: function retrieveContent(id, index) {\n      var _this4 = this;\n\n      this.contents = this.lesson[index].contents;\n      setTimeout(function () {\n        _this4.makeActive(index);\n      }, 5);\n    },\n    makeActive: function makeActive(index) {\n      if (this.prevLessonIndex === null) {\n        this.prevLessonIndex = index;\n        $('#lesson-container-' + index).css({ 'background': '#eee', 'color': '#000' });\n\n        $('#lesson-content-' + index).slideDown();\n      } else {\n        if (this.prevLessonIndex === index) {\n          $('#lesson-content-' + index).slideUp();\n\n          $('#lesson-container-' + index).css({ 'background': '#fff', 'color': '#000' });\n          this.prevLessonIndex = null;\n        } else {\n          $('#lesson-content-' + this.prevLessonIndex).slideUp();\n\n          $('#lesson-container-' + this.prevLessonIndex).css({ 'background': '#fff', 'color': '#000' });\n\n          $('#lesson-content-' + index).slideDown();\n          $('#lesson-container-' + index).css({ 'background': '#eee', 'color': '#000' });\n          this.prevLessonIndex = index;\n        }\n      }\n    },\n    toggle: function toggle(index) {\n      var _this5 = this;\n\n      var parameter = {\n        'account_id': this.lesson[index].account_id,\n        'lesson_id': this.lesson[index].lesson_id,\n        'flag': !this.lesson[index].lesson_tick_flag\n      };\n      this.APIRequest('lesson_ticks/update', parameter).then(function (response) {\n        _this5.retrieveLesson();\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(367)();\n// imports\n\n\n// module\nexports.push([module.i, \".lesson-active,.page-link:hover,.sentence-active,.word-active{background:#1caceb!important;color:#fff!important}.pagination-header{border:none!important;background:#eee;border-radius:0!important}.pagination-holder{width:100%;float:left}.page-link:hover{cursor:pointer}.page-link2{width:15%!important;text-align:center!important;float:left}.page-item-block{width:45%!important;float:left;border-top-right-radius:0!important;border-bottom-right-radius:0!important}.disabled,.page-link2{border:none!important;background:#eee}.guide-video-history{float:left;width:10%}.guide-video-history .guide-video{height:50px;padding-top:2px}.lesson-result-history,.sentence-result,.word-result{display:none;float:left;min-height:200px;overflow-y:hidden}.lesson-result-active,.sentence-result-active,.word-result-active{display:block}.lesson-item-history{height:50px;border-bottom:1px solid #eee;margin-top:1px;font-size:18px}.lesson-item-history i:hover{cursor:pointer}.lessons-content{width:100%;min-height:50px!important;overflow:hidden;display:none;border-bottom:1px solid #eee;border-right:1px solid #eee;border-left:1px solid #eee;transition:width 2s}.lesson-holder-history{float:left;height:auto;width:100%}.content-holder{min-height:50px;overflow:hidden}.content-holder .original{width:100%;float:left;font-size:18px}.content-holder .translation{width:90%;margin-left:1%;float:left;color:#888;font-size:18px}.content-holder .original label{padding-top:5px;padding-bottom:5px}.content-holder .translation label{padding-top:5px}.error-container{width:100%!important;float:left;text-align:center}.table-hover:hover{cursor:pointer!important}.table{font-size:16px!important}.fa-chevron-down{color:#1caceb}.tick-info{width:100%;float:left;text-align:right}.tick-info i{width:24px;height:24px;border-radius:12px;color:#fff;text-align:center!important;margin-right:5px;margin-left:5px;background:#1caceb;padding-top:5px}.tick-info label{padding-right:10px}.tick-toggle{font-size:40px;padding:5px;color:#1caceb}.test-check-history,.test-check-number-history{width:40px;height:40px;border-radius:20px;text-align:center!important;margin-right:5px;margin-left:5px;margin-top:5px;padding-top:10px}.test-check-number-history{color:#fff;background:#aaa}.test-check-number-history:hover{cursor:pointer}.test-check-history,.word-pagination .active{background:#1caceb;color:#fff}.pagination-mobile-show{display:none}.pagination-mobile-hide{display:block}thead{border-bottom:2px solid #ccc!important}table.borderless td,table.borderless th{border:none!important}.thead{font-weight:600!important;font-size:16px}@media screen and (max-width:991px){.pagination-mobile-hide{display:none}.pagination-mobile-show{display:block}}@media screen and (min-width:551px) and (max-width:991px){.guide-video-history{width:10%!important}.guide-video-history .guide-video{padding-top:0}.pagination-header .page-link2{width:33%!important;text-align:center!important;font-size:14px!important;padding-left:0!important;padding-right:0!important}.pagination-header .link3{width:34%!important}.page-item-block{width:0!important;float:left}.tick-info{text-align:center}.test-check-number-history{font-size:18px!important}}@media screen and (max-width:550px){.guide-video-history{width:25%!important}.guide-video-history .guide-video{padding-top:0}.pagination-header .page-link2{width:33%!important;text-align:center!important;font-size:14px!important;padding-left:0!important;padding-right:0!important}.pagination-header .link3{width:34%!important}.page-item-block{width:0!important;float:left}.lesson-item-history .title{font-size:12px}}\", \"\", {\"version\":3,\"sources\":[\"C:/xampp/htdocs/talkfluent/src/modules/history/History.vue\"],\"names\":[],\"mappings\":\"AACA,8DACE,6BAA+B,AAC/B,oBAAwB,CACzB,AACD,mBACE,sBAAuB,AACvB,gBAAiB,AACjB,yBAA8B,CAC/B,AACD,mBACE,WAAY,AACZ,UAAY,CACb,AACD,iBACE,cAAgB,CACjB,AACD,YACE,oBAAsB,AACtB,4BAA8B,AAC9B,UAAY,CACb,AACD,iBACE,oBAAsB,AACtB,WAAY,AACZ,oCAAwC,AACxC,sCAA2C,CAC5C,AACD,sBACE,sBAAuB,AACvB,eAAiB,CAClB,AACD,qBACE,WAAY,AACZ,SAAW,CACZ,AACD,kCACE,YAAa,AACb,eAAiB,CAClB,AAOD,qDACE,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,iBAAmB,CACpB,AACD,kEACE,aAAe,CAChB,AACD,qBACE,YAAa,AACb,6BAA8B,AAC9B,eAAgB,AAChB,cAAgB,CACjB,AACD,6BACE,cAAgB,CACjB,AACD,iBACE,WAAY,AACZ,0BAA4B,AAC5B,gBAAiB,AACjB,aAAc,AACd,6BAA8B,AAC9B,4BAA6B,AAC7B,2BAA4B,AAC5B,mBAAqB,CACtB,AACD,uBACE,WAAY,AACZ,YAAa,AACb,UAAY,CACb,AACD,gBACE,gBAAiB,AACjB,eAAiB,CAClB,AACD,0BACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,6BACE,UAAW,AACX,eAAgB,AAChB,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,gCACE,gBAAiB,AACjB,kBAAoB,CACrB,AACD,mCACE,eAAiB,CAClB,AACD,iBACE,qBAAuB,AACvB,WAAY,AACZ,iBAAmB,CACpB,AACD,mBACE,wBAA2B,CAC5B,AACD,OACE,wBAA2B,CAC5B,AACD,iBACE,aAAe,CAChB,AACD,WACE,WAAY,AACZ,WAAY,AACZ,gBAAkB,CACnB,AACD,aACE,WAAY,AACZ,YAAY,AACZ,mBAAoB,AACpB,WAAY,AACZ,4BAA8B,AAC9B,iBAAkB,AAClB,gBAAiB,AACjB,mBAAoB,AACpB,eAAiB,CAClB,AACD,iBACE,kBAAoB,CACrB,AACD,aACE,eAAgB,AAGhB,YAAkB,AAElB,aAAc,CACf,AAaD,+CAXE,WAAY,AACZ,YAAY,AACZ,mBAAoB,AAEpB,4BAA8B,AAC9B,iBAAkB,AAClB,gBAAiB,AACjB,eAAgB,AAEhB,gBAAkB,CAanB,AAXD,2BAIE,WAAY,AAKZ,eAAiB,CAElB,AACD,iCACE,cAAgB,CACjB,AAKD,6CACE,mBAAoB,AACpB,UAAY,CACb,AACD,wBACE,YAAc,CACf,AACD,wBACE,aAAe,CAChB,AACD,MACE,sCAAyC,CAC1C,AACD,wCACG,qBAAwB,CAC1B,AACD,OACE,0BAA4B,AAC5B,cAAgB,CACjB,AACD,oCACA,wBACI,YAAc,CACjB,AACD,wBACI,aAAe,CAClB,CACA,AACD,0DACA,qBACI,mBAAsB,CACzB,AACD,kCACI,aAAiB,CACpB,AACD,+BACI,oBAAsB,AACtB,4BAA8B,AAC9B,yBAA2B,AAC3B,yBAA6B,AAC7B,yBAA8B,CACjC,AACD,0BACI,mBAAsB,CACzB,AACD,iBACI,kBAAqB,AACrB,UAAY,CACf,AACD,WACI,iBAAmB,CACtB,AACD,2BACI,wBAA2B,CAC9B,CACA,AACD,oCACA,qBACI,mBAAsB,CACzB,AACD,kCACI,aAAiB,CACpB,AACD,+BACI,oBAAsB,AACtB,4BAA8B,AAC9B,yBAA2B,AAC3B,yBAA6B,AAC7B,yBAA8B,CACjC,AACD,0BACI,mBAAsB,CACzB,AACD,iBACI,kBAAqB,AACrB,UAAY,CACf,AACD,4BACI,cAAgB,CACnB,CACA\",\"file\":\"History.vue\",\"sourcesContent\":[\"\\n.word-active, .sentence-active, .lesson-active, .page-link:hover{\\n  background: #1caceb !important;\\n  color: white !important;\\n}\\n.pagination-header{\\n  border:none !important;\\n  background: #eee;\\n  border-radius: 0px !important;\\n}\\n.pagination-holder{\\n  width: 100%;\\n  float: left;\\n}\\n.page-link:hover{\\n  cursor: pointer;\\n}\\n.page-link2{\\n  width: 15% !important;\\n  text-align: center !important;\\n  float: left;\\n}\\n.page-item-block{\\n  width: 45% !important;\\n  float: left;\\n  border-top-right-radius: 0px !important;\\n  border-bottom-right-radius: 0px !important;\\n}\\n.disabled, .page-link2{\\n  border:none !important;\\n  background: #eee;\\n}\\n.guide-video-history{\\n  float: left;\\n  width: 10%;\\n}\\n.guide-video-history .guide-video{\\n  height: 50px;\\n  padding-top: 2px;\\n}\\n\\n\\n/*\\n\\n    Word Result\\n*/\\n.word-result, .sentence-result, .lesson-result-history{\\n  display: none;\\n  float: left;\\n  min-height: 200px;\\n  overflow-y: hidden;\\n}\\n.word-result-active, .sentence-result-active, .lesson-result-active{\\n  display: block;\\n}\\n.lesson-item-history{\\n  height: 50px;\\n  border-bottom: solid 1px #eee;\\n  margin-top: 1px;\\n  font-size: 18px;\\n}\\n.lesson-item-history i:hover{\\n  cursor: pointer;\\n}\\n.lessons-content{\\n  width: 100%;\\n  min-height: 50px !important;\\n  overflow: hidden;\\n  display: none;\\n  border-bottom: solid 1px #eee;\\n  border-right: solid 1px #eee;\\n  border-left: solid 1px #eee; /* Safari */\\n  transition: width 2s;\\n}\\n.lesson-holder-history{\\n  float: left;\\n  height: auto;\\n  width: 100%;\\n}\\n.content-holder{\\n  min-height: 50px;\\n  overflow: hidden;\\n}\\n.content-holder .original{\\n  width: 100%;\\n  float: left;\\n  font-size: 18px;\\n}\\n.content-holder .translation{\\n  width: 90%;\\n  margin-left: 1%;\\n  float: left;\\n  color: #888;\\n  font-size: 18px;\\n}\\n.content-holder .original label{\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n.content-holder .translation label{\\n  padding-top: 5px;\\n}\\n.error-container{\\n  width: 100% !important;\\n  float: left;\\n  text-align: center;\\n}\\n.table-hover:hover{\\n  cursor: pointer !important;\\n}\\n.table{\\n  font-size: 16px !important;\\n}\\n.fa-chevron-down{\\n  color: #1caceb;\\n}\\n.tick-info{\\n  width: 100%;\\n  float: left;\\n  text-align: right;\\n}\\n.tick-info i{\\n  width: 24px;\\n  height:24px;\\n  border-radius: 12px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  background: #1caceb;\\n  padding-top: 5px;\\n}\\n.tick-info label{\\n  padding-right: 10px;\\n}\\n.tick-toggle{\\n  font-size: 40px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  color: #1caceb\\n}\\n.test-check-history{\\n  width: 40px;\\n  height:40px;\\n  border-radius: 20px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n  background: #1caceb;\\n  padding-top: 10px;\\n}\\n.test-check-number-history{\\n  width: 40px;\\n  height:40px;\\n  border-radius: 20px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n  background: #aaa;\\n  padding-top: 10px;\\n}\\n.test-check-number-history:hover{\\n  cursor: pointer;\\n}\\n.test-check-history{\\n  background: #1caceb;\\n  color: #fff;\\n}\\n.word-pagination .active{\\n  background: #1caceb;\\n  color: #fff;\\n}\\n.pagination-mobile-show{\\n  display: none;\\n}\\n.pagination-mobile-hide{\\n  display: block;\\n}\\nthead{\\n  border-bottom: 2px solid #ccc !important;\\n}\\ntable.borderless td,table.borderless th{\\n   border: none !important;\\n}\\n.thead{ \\n  font-weight: 600 !important;\\n  font-size: 16px;\\n}\\n@media screen and (max-width: 991px){\\n.pagination-mobile-hide{\\n    display: none;\\n}\\n.pagination-mobile-show{\\n    display: block;\\n}\\n}\\n@media screen and (min-width: 551px) and (max-width: 991px) {\\n.guide-video-history{\\n    width: 10% !important;\\n}\\n.guide-video-history .guide-video{\\n    padding-top: 0px;\\n}\\n.pagination-header .page-link2{\\n    width: 33% !important;\\n    text-align: center !important;\\n    font-size: 14px !important;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n.pagination-header .link3{\\n    width: 34% !important;\\n}\\n.page-item-block{\\n    width: 0% !important;\\n    float: left;\\n}\\n.tick-info{\\n    text-align: center;\\n}\\n.test-check-number-history{\\n    font-size: 18px !important;\\n}\\n}\\n@media screen and (max-width: 550px) {\\n.guide-video-history{\\n    width: 25% !important;\\n}\\n.guide-video-history .guide-video{\\n    padding-top: 0px;\\n}\\n.pagination-header .page-link2{\\n    width: 33% !important;\\n    text-align: center !important;\\n    font-size: 14px !important;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n.pagination-header .link3{\\n    width: 34% !important;\\n}\\n.page-item-block{\\n    width: 0% !important;\\n    float: left;\\n}\\n.lesson-item-history .title{\\n    font-size: 12px;\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(700);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(368)(\"26e73afe\", content, true);\n\n/***/ }),\n\n/***/ 914:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"breadcrumb\"\n  }, [_c('li', {\n    staticClass: \"breadcrumb-item active\",\n    on: {\n      \"click\": function($event) {\n        return _vm.redirectDashboard('/dashboard')\n      }\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#\",\n      \"onclick\": \"return false;\"\n    }\n  }, [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    staticClass: \"breadcrumb-item active\"\n  }, [_vm._v(\"Already Known\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"pagination pagination-lg pagination-header\"\n  }, [_c('li', {\n    staticClass: \"page-item page-link page-link2\",\n    class: {\n      'word-active': _vm.isActive.word === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'word')\n      }\n    }\n  }, [_vm._v(\"Words\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item page-link page-link2\",\n    class: {\n      'sentence-active': _vm.isActive.sentence === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'sentence')\n      }\n    }\n  }, [_vm._v(\"Sentences\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item page-link page-link2 link3\",\n    class: {\n      'lesson-active': _vm.isActive.lesson === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'lesson')\n      }\n    }\n  }, [_vm._v(\"Lessons\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item disabled page-item-block\"\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto word-result\",\n    class: {\n      'word-result-active': _vm.isActive.word === true\n    }\n  }, [_c('span', {\n    staticClass: \"pagination-holder pagination-mobile-hide\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination \"\n  }, [(_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordPrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordPrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((26), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64) === _vm.active\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortWord(i), _vm.pager(i + 64)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), _c('span', {\n    staticClass: \"pagination-holder pagination-mobile-show\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination\"\n  }, [(_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordPrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordMobilePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((_vm.wordLimit), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64 + _vm.wordLimitAdder) === _vm.active\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64 + _vm.wordLimitAdder) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortWord(i + _vm.wordLimitAdder), _vm.pager(i + 64 + _vm.wordLimitAdder)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordMobileNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), (_vm.word.length >= 1) ? _c('table', {\n    staticClass: \"table table-hover borderless\"\n  }, [_vm._m(0), _vm._v(\" \"), _c('tbody', {\n    staticClass: \"table-hover\"\n  }, _vm._l((_vm.word), function(item, index) {\n    return _c('tr', [_c('td', [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      attrs: {\n        \"id\": 'audioWord' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.audio, 'audioWord' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      staticStyle: {\n        \"text-transform\": \"capitalize\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.word)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('label', {\n      staticStyle: {\n        \"padding-top\": \"10px\",\n        \"text-transform\": \"capitalize\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.translation)\n      }\n    })])])\n  }), 0)]) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Word(s) Learned or Completed!\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto  sentence-result\",\n    class: {\n      'sentence-result-active': _vm.isActive.sentence === true\n    }\n  }, [_c('span', {\n    staticClass: \"pagination-holder pagination-mobile-hide\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination \"\n  }, [(_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentencePrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentencePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((26), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64) === _vm.activeSentence\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortSentence(i), _vm.pagerSentence(i + 64)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentenceNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), _c('span', {\n    staticClass: \"pagination-holder pagination-mobile-show\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination\"\n  }, [(_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentencePrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceMobilePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((_vm.sentenceLimit), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64 + _vm.sentenceLimitAdder) === _vm.activeSentence\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64 + _vm.sentenceLimitAdder) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortSentence(i + _vm.sentenceLimitAdder), _vm.pagerSentence(i + 64 + _vm.sentenceLimitAdder)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentenceNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceMobileNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), (_vm.sentence.length >= 1) ? _c('table', {\n    staticClass: \"table table-hover borderless\"\n  }, [_vm._m(1), _vm._v(\" \"), _c('tbody', _vm._l((_vm.sentence), function(item, index) {\n    return _c('tr', [_c('td', [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      attrs: {\n        \"id\": 'audioSentence' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.audio, 'audioSentence' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.original)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('label', {\n      staticStyle: {\n        \"padding-top\": \"10px\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.translation)\n      }\n    })])])\n  }), 0)]) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Sentence(s) Learned or Completed!\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto lesson-result-history\",\n    class: {\n      'lesson-result-active': _vm.isActive.lesson === true\n    }\n  }, [_vm._m(2), _vm._v(\" \"), (_vm.lesson.length > 0) ? _c('span', _vm._l((_vm.lesson), function(item, index) {\n    return _c('span', {\n      staticClass: \"lesson-holder-history\"\n    }, [_c('div', {\n      staticClass: \"lesson-item-history\",\n      attrs: {\n        \"id\": 'lesson-container-' + index\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      staticStyle: {\n        \"margin-top\": \"2px\",\n        \"margin-left\": \"2px\"\n      },\n      attrs: {\n        \"id\": 'audioLessonKnown' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.lesson[0].lesson_audio, 'audioLessonKnown' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      staticClass: \"title\",\n      staticStyle: {\n        \"padding-top\": \"5px\",\n        \"padding-left\": \"10px\"\n      }\n    }, [_vm._v(_vm._s(index + 1) + \". \\n            \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.lesson[0].title)\n      }\n    })]), _vm._v(\" \"), (item.lesson_tick_flag === true) ? _c('i', {\n      staticClass: \"fa fa-check test-check-history pull-right\",\n      on: {\n        \"click\": function($event) {\n          return _vm.toggle(index)\n        }\n      }\n    }) : _vm._e(), _vm._v(\" \"), _c('i', {\n      staticClass: \"fa fa-chevron-down pull-right\",\n      staticStyle: {\n        \"padding-top\": \"15px\",\n        \"padding-right\": \"10px\"\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.retrieveContent(item.lesson[0].id, index)\n        }\n      }\n    })]), _vm._v(\" \"), (_vm.contents.length > 0) ? _c('div', {\n      staticClass: \"lessons-content\",\n      attrs: {\n        \"id\": 'lesson-content-' + index\n      }\n    }, _vm._l((_vm.contents), function(itemContent, indexContent) {\n      return _c('span', {\n        staticClass: \"content-holder\"\n      }, [_c('span', {\n        staticClass: \"original\"\n      }, [_c('label', [_vm._v(_vm._s(indexContent + 1) + \". \")]), _vm._v(\" \"), _c('label', {\n        domProps: {\n          \"innerHTML\": _vm._s(itemContent.original)\n        }\n      })]), _vm._v(\" \"), _c('span', {\n        staticClass: \"translation\"\n      }, [_c('label', [_vm._v(_vm._s(indexContent + 1) + \". \")]), _vm._v(\" \"), _c('label', {\n        domProps: {\n          \"innerHTML\": _vm._s(itemContent.translation)\n        }\n      })])])\n    }), 0) : _vm._e()])\n  }), 0) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Lesson(s) Learned or Completed!\")])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', {\n    staticClass: \"thead\"\n  }, [_c('td', [_vm._v(\"WORD\")]), _vm._v(\" \"), _c('td', [_vm._v(\"TRANSLATION\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', {\n    staticClass: \"thead\"\n  }, [_c('td', [_vm._v(\"SENTENCE\")]), _vm._v(\" \"), _c('td', [_vm._v(\"TRANSLATION\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('span', {\n    staticClass: \"tick-info pull-right\"\n  }, [_c('label', [_c('i', {\n    staticClass: \"fas fa-check\"\n  }), _vm._v(\"Tick when you have put in your Calendar as a reminder to practice lesson with native speaker.\")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/28.b352ed5ba4cf682576fb.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-5488340d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./History.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./History.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5488340d\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./History.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/history/History.vue\n// module id = 384\n// module chunks = 28","/*!\r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Pool of unlocked HTML5 Audio objects.\r\n      self._html5AudioPool = [];\r\n      self.html5PoolSize = 10;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto audio unlocker.\r\n      self.autoUnlock = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Some browsers/devices will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _unlockAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\r\n      if (self._audioUnlocked || !self.ctx) {\r\n        return;\r\n      }\r\n\r\n      self._audioUnlocked = false;\r\n      self.autoUnlock = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Create a pool of unlocked HTML5 Audio objects that can\r\n        // be used for playing sounds without user interaction. HTML5\r\n        // Audio objects must be individually unlocked, as opposed\r\n        // to the WebAudio API which only needs a single activation.\r\n        // This must occur before WebAudio setup or the source.onended\r\n        // event will not fire.\r\n        for (var i=0; i<self.html5PoolSize; i++) {\r\n          try {\r\n            var audioNode = new Audio();\r\n\r\n            // Mark this Audio object as unlocked to ensure it can get returned\r\n            // to the unlocked pool when released.\r\n            audioNode._unlocked = true;\r\n\r\n            // Add the audio node to the pool.\r\n            self._releaseHtml5Audio(audioNode);\r\n          } catch (e) {\r\n            self.noAudio = true;\r\n          }\r\n        }\r\n\r\n        // Loop through any assigned audio nodes and unlock them.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and unlock the audio nodes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node && !sound._node._unlocked) {\r\n                sound._node._unlocked = true;\r\n                sound._node.load();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fix Android can not play in suspend state.\r\n        self._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._audioUnlocked = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\r\n     * return a new Audio object and throw a warning.\r\n     * @return {Audio} HTML5 Audio object.\r\n     */\r\n    _obtainHtml5Audio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Return the next object from the pool if one exists.\r\n      if (self._html5AudioPool.length) {\r\n        return self._html5AudioPool.pop();\r\n      }\r\n\r\n      //.Check if the audio is locked and throw a warning.\r\n      var testPlay = new Audio().play();\r\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\r\n        testPlay.catch(function() {\r\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\r\n        });\r\n      }\r\n\r\n      return new Audio();\r\n    },\r\n\r\n    /**\r\n     * Return an activated HTML5 Audio object to the pool.\r\n     * @return {Howler}\r\n     */\r\n    _releaseHtml5Audio: function(audio) {\r\n      var self = this || Howler;\r\n\r\n      // Don't add audio to the pool if we don't know if it has been unlocked.\r\n      if (audio._unlocked) {\r\n        self._html5AudioPool.push(audio);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n\r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\r\n        Howler._unlockAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended. \r\n        // If there is, play that sound. If not, continue as usual.  \r\n        if (!self._playLock) {\r\n          var num = 0;\r\n          for (var i=0; i<self._sounds.length; i++) {\r\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n              num++;\r\n              id = self._sounds[i]._id;\r\n            }\r\n          }\r\n\r\n          if (num === 1) {\r\n            sprite = null;\r\n          } else {\r\n            id = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Mark this sound as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n      var start = self._sprite[sprite][0] / 1000;\r\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n      sound._sprite = sprite;\r\n\r\n      // Mark the sound as ended instantly so that this async playback\r\n      // doesn't get grabbed by another call to play while this one waits to start.\r\n      sound._ended = false;\r\n\r\n      // Update the parameters of the sound.\r\n      var setParams = function() {\r\n        sound._paused = false;\r\n        sound._seek = seek;\r\n        sound._start = start;\r\n        sound._stop = stop;\r\n        sound._loop = loop;\r\n      };\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (seek >= stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._playLock = false;\r\n          setParams();\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          // Wait for the audio context to resume before playing.\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Some browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Set param values immediately.\r\n              setParams();\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  node._unlocked = true;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                    self._loadQueue();\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n\r\n                  // Reset the ended and paused values.\r\n                  sound._ended = true;\r\n                  sound._paused = true;\r\n                });\r\n            } else if (!internal) {\r\n              self._playLock = false;\r\n              setParams();\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // If this is streaming audio, make sure the src is set and load again.\r\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\r\n          node.src = self._src;\r\n          node.load();\r\n        }\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n\r\n              // If this is a live stream, stop download once the audio is stopped.\r\n              if (sound._node.duration === Infinity) {\r\n                self._clearSound(sound._node);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Make sure the to/from/len values are numbers.\r\n      from = parseFloat(from);\r\n      to = parseFloat(to);\r\n      len = parseFloat(len);\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            if (self.playing(id[i])) {\r\n              sound._rateSeek = self.seek(id[i]);\r\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            }\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          self._clearSound(sounds[i]._node);\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n\r\n          // Release the Audio object back to the pool.\r\n          Howler._releaseHtml5Audio(sounds[i]._node);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        if (isIOS) {\r\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n        }\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\r\n     * @param  {Object} node Audio node to clear.\r\n     */\r\n    _clearSound: function(node) {\r\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n      if (!checkIE) {\r\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        // Get an unlocked Audio object from the pool.\r\n        self._node = Howler._obtainHtml5Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\r\n    if (!Howler.usingWebAudio) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // If the audio context creation still failed, set using web audio to false.\r\n    if (!Howler.ctx) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    });\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (typeof exports !== 'undefined') {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setPosition(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/howler/dist/howler.js\n// module id = 436\n// module chunks = 0 3 6 7 8 9 10 11 12 13 14 15 21 22 23 24 25 26 28","/*!\r\n * wavesurfer.js 2.1.0 (Mon Oct 01 2018 11:34:49 GMT+0200 (Central European Summer Time))\r\n * https://github.com/katspaugh/wavesurfer.js\r\n * @license BSD-3-Clause\r\n */\r\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"WaveSurfer\",[],t):\"object\"==typeof exports?exports.WaveSurfer=t():e.WaveSurfer=t()}(window,function(){return function(r){var n={};function i(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return r[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}return i.m=r,i.c=n,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)i.d(r,n,function(e){return t[e]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,\"a\",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p=\"\",i(i.s=4)}([function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"ajax\",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(t,\"getId\",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(t,\"max\",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(t,\"min\",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(t,\"Observer\",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(t,\"extend\",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(t,\"style\",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(t,\"requestAnimationFrame\",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(t,\"frame\",{enumerable:!0,get:function(){return h.default}}),Object.defineProperty(t,\"debounce\",{enumerable:!0,get:function(){return f.default}}),Object.defineProperty(t,\"preventClick\",{enumerable:!0,get:function(){return d.default}});var n=p(r(5)),i=p(r(6)),a=p(r(7)),s=p(r(8)),o=p(r(1)),u=p(r(9)),l=p(r(10)),c=p(r(2)),h=p(r(11)),f=p(r(12)),d=p(r(13));function p(e){return e&&e.__esModule?e:{default:e}}},function(e,t,r){\"use strict\";function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.handlers=null}var t,r,n;return t=e,(r=[{key:\"on\",value:function(e,t){var r=this;this.handlers||(this.handlers={});var n=this.handlers[e];return n||(n=this.handlers[e]=[]),n.push(t),{name:e,callback:t,un:function(e,t){return r.un(e,t)}}}},{key:\"un\",value:function(e,t){if(this.handlers){var r,n=this.handlers[e];if(n)if(t)for(r=n.length-1;0<=r;r--)n[r]==t&&n.splice(r,1);else n.length=0}}},{key:\"unAll\",value:function(){this.handlers=null}},{key:\"once\",value:function(i,a){var s=this;return this.on(i,function e(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];a.apply(s,r),setTimeout(function(){s.un(i,e)},0)})}},{key:\"fireEvent\",value:function(e){for(var t=arguments.length,r=new Array(1<t?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];if(this.handlers){var i=this.handlers[e];i&&i.forEach(function(e){e.apply(void 0,r)})}}}])&&i(t.prototype,r),n&&i(t,n),e}();t.default=n,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return setTimeout(e,1e3/60)}).bind(window);t.default=n,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),e}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=\"playing\",f=\"paused\",d=\"finished\",p=function(e){function i(e){var t,r,n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(n=s(this,o(i).call(this))).audioContext=null,n.offlineAudioContext=null,n.stateBehaviors=(a(t={},h,{init:function(){this.addOnAudioProcess()},getPlayedPercents:function(){var e=this.getDuration();return this.getCurrentTime()/e||0},getCurrentTime:function(){return this.startPosition+this.getPlayedTime()}}),a(t,f,{init:function(){this.removeOnAudioProcess()},getPlayedPercents:function(){var e=this.getDuration();return this.getCurrentTime()/e||0},getCurrentTime:function(){return this.startPosition}}),a(t,d,{init:function(){this.removeOnAudioProcess(),this.fireEvent(\"finish\")},getPlayedPercents:function(){return 1},getCurrentTime:function(){return this.getDuration()}}),t),n.params=e,n.ac=e.audioContext||n.getAudioContext(),n.lastPlay=n.ac.currentTime,n.startPosition=0,n.scheduledPause=null,n.states=(a(r={},h,Object.create(n.stateBehaviors[h])),a(r,f,Object.create(n.stateBehaviors[f])),a(r,d,Object.create(n.stateBehaviors[d])),r),n.analyser=null,n.buffer=null,n.filters=[],n.gainNode=null,n.mergedPeaks=null,n.offlineAc=null,n.peaks=null,n.playbackRate=1,n.analyser=null,n.scriptNode=null,n.source=null,n.splitPeaks=[],n.state=null,n.explicitDuration=null,n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(i,n.Observer),l(i,[{key:\"supportsWebAudio\",value:function(){return!(!window.AudioContext&&!window.webkitAudioContext)}},{key:\"getAudioContext\",value:function(){return window.WaveSurferAudioContext||(window.WaveSurferAudioContext=new(window.AudioContext||window.webkitAudioContext)),window.WaveSurferAudioContext}},{key:\"getOfflineAudioContext\",value:function(e){return window.WaveSurferOfflineAudioContext||(window.WaveSurferOfflineAudioContext=new(window.OfflineAudioContext||window.webkitOfflineAudioContext)(1,2,e)),window.WaveSurferOfflineAudioContext}}]),l(i,[{key:\"init\",value:function(){this.createVolumeNode(),this.createScriptNode(),this.createAnalyserNode(),this.setState(f),this.setPlaybackRate(this.params.audioRate),this.setLength(0)}},{key:\"disconnectFilters\",value:function(){this.filters&&(this.filters.forEach(function(e){e&&e.disconnect()}),this.filters=null,this.analyser.connect(this.gainNode))}},{key:\"setState\",value:function(e){this.state!==this.states[e]&&(this.state=this.states[e],this.state.init.call(this))}},{key:\"setFilter\",value:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.setFilters(t)}},{key:\"setFilters\",value:function(e){this.disconnectFilters(),e&&e.length&&(this.filters=e,this.analyser.disconnect(),e.reduce(function(e,t){return e.connect(t),t},this.analyser).connect(this.gainNode))}},{key:\"createScriptNode\",value:function(){this.params.audioScriptProcessor?this.scriptNode=this.params.audioScriptProcessor:this.ac.createScriptProcessor?this.scriptNode=this.ac.createScriptProcessor(i.scriptBufferSize):this.scriptNode=this.ac.createJavaScriptNode(i.scriptBufferSize),this.scriptNode.connect(this.ac.destination)}},{key:\"addOnAudioProcess\",value:function(){var t=this;this.scriptNode.onaudioprocess=function(){var e=t.getCurrentTime();e>=t.getDuration()?(t.setState(d),t.fireEvent(\"pause\")):e>=t.scheduledPause?t.pause():t.state===t.states[h]&&t.fireEvent(\"audioprocess\",e)}}},{key:\"removeOnAudioProcess\",value:function(){this.scriptNode.onaudioprocess=null}},{key:\"createAnalyserNode\",value:function(){this.analyser=this.ac.createAnalyser(),this.analyser.connect(this.gainNode)}},{key:\"createVolumeNode\",value:function(){this.ac.createGain?this.gainNode=this.ac.createGain():this.gainNode=this.ac.createGainNode(),this.gainNode.connect(this.ac.destination)}},{key:\"setSinkId\",value:function(e){if(e){var t=new window.Audio;if(!t.setSinkId)return Promise.reject(new Error(\"setSinkId is not supported in your browser\"));t.autoplay=!0;var r=this.ac.createMediaStreamDestination();return this.gainNode.disconnect(),this.gainNode.connect(r),t.srcObject=r.stream,t.setSinkId(e)}return Promise.reject(new Error(\"Invalid deviceId: \"+e))}},{key:\"setVolume\",value:function(e){this.gainNode.gain.setValueAtTime(e,this.ac.currentTime)}},{key:\"getVolume\",value:function(){return this.gainNode.gain.value}},{key:\"decodeArrayBuffer\",value:function(e,t,r){this.offlineAc||(this.offlineAc=this.getOfflineAudioContext(this.ac&&this.ac.sampleRate?this.ac.sampleRate:44100)),this.offlineAc.decodeAudioData(e,function(e){return t(e)},r)}},{key:\"setPeaks\",value:function(e,t){this.explicitDuration=t,this.peaks=e}},{key:\"setLength\",value:function(e){if(!this.mergedPeaks||e!=2*this.mergedPeaks.length-1+2){this.splitPeaks=[],this.mergedPeaks=[];var t,r=this.buffer?this.buffer.numberOfChannels:1;for(t=0;t<r;t++)this.splitPeaks[t]=[],this.splitPeaks[t][2*(e-1)]=0,this.splitPeaks[t][2*(e-1)+1]=0;this.mergedPeaks[2*(e-1)]=0,this.mergedPeaks[2*(e-1)+1]=0}}},{key:\"getPeaks\",value:function(e,t,r){if(this.peaks)return this.peaks;if(t=t||0,r=r||e-1,this.setLength(e),!this.buffer.length){var n=this.createBuffer(1,4096,this.sampleRate);this.buffer=n.buffer}var i,a=this.buffer.length/e,s=~~(a/10)||1,o=this.buffer.numberOfChannels;for(i=0;i<o;i++){var u=this.splitPeaks[i],l=this.buffer.getChannelData(i),c=void 0;for(c=t;c<=r;c++){var h=~~(c*a),f=~~(h+a),d=0,p=0,v=void 0;for(v=h;v<f;v+=s){var y=l[v];p<y&&(p=y),y<d&&(d=y)}u[2*c]=p,u[2*c+1]=d,(0==i||p>this.mergedPeaks[2*c])&&(this.mergedPeaks[2*c]=p),(0==i||d<this.mergedPeaks[2*c+1])&&(this.mergedPeaks[2*c+1]=d)}}return this.params.splitChannels?this.splitPeaks:this.mergedPeaks}},{key:\"getPlayedPercents\",value:function(){return this.state.getPlayedPercents.call(this)}},{key:\"disconnectSource\",value:function(){this.source&&this.source.disconnect()}},{key:\"destroy\",value:function(){this.isPaused()||this.pause(),this.unAll(),this.buffer=null,this.disconnectFilters(),this.disconnectSource(),this.gainNode.disconnect(),this.scriptNode.disconnect(),this.analyser.disconnect(),this.params.closeAudioContext&&(\"function\"==typeof this.ac.close&&\"closed\"!=this.ac.state&&this.ac.close(),this.ac=null,this.params.audioContext?this.params.audioContext=null:window.WaveSurferAudioContext=null,window.WaveSurferOfflineAudioContext=null)}},{key:\"load\",value:function(e){this.startPosition=0,this.lastPlay=this.ac.currentTime,this.buffer=e,this.createSource()}},{key:\"createSource\",value:function(){this.disconnectSource(),this.source=this.ac.createBufferSource(),this.source.start=this.source.start||this.source.noteGrainOn,this.source.stop=this.source.stop||this.source.noteOff,this.source.playbackRate.setValueAtTime(this.playbackRate,this.ac.currentTime),this.source.buffer=this.buffer,this.source.connect(this.analyser)}},{key:\"isPaused\",value:function(){return this.state!==this.states[h]}},{key:\"getDuration\",value:function(){return this.buffer?this.buffer.duration:this.explicitDuration?this.explicitDuration:0}},{key:\"seekTo\",value:function(e,t){if(this.buffer)return(this.scheduledPause=null)==e&&(e=this.getCurrentTime())>=this.getDuration()&&(e=0),null==t&&(t=this.getDuration()),this.startPosition=e,this.lastPlay=this.ac.currentTime,this.state===this.states[d]&&this.setState(f),{start:e,end:t}}},{key:\"getPlayedTime\",value:function(){return(this.ac.currentTime-this.lastPlay)*this.playbackRate}},{key:\"play\",value:function(e,t){if(this.buffer){this.createSource();var r=this.seekTo(e,t);e=r.start,t=r.end,this.scheduledPause=t,this.source.start(0,e,t-e),\"suspended\"==this.ac.state&&this.ac.resume&&this.ac.resume(),this.setState(h),this.fireEvent(\"play\")}}},{key:\"pause\",value:function(){this.scheduledPause=null,this.startPosition+=this.getPlayedTime(),this.source&&this.source.stop(0),this.setState(f),this.fireEvent(\"pause\")}},{key:\"getCurrentTime\",value:function(){return this.state.getCurrentTime.call(this)}},{key:\"getPlaybackRate\",value:function(){return this.playbackRate}},{key:\"setPlaybackRate\",value:function(e){e=e||1,this.isPaused()?this.playbackRate=e:(this.pause(),this.playbackRate=e,this.play())}}]),i}();(t.default=p).scriptBufferSize=256,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0)),a=n(r(14)),s=n(r(3)),o=n(r(16)),u=n(r(17));function n(e){return e&&e.__esModule?e:{default:e}}function l(e){return(l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){return!t||\"object\"!==l(t)&&\"function\"!=typeof t?d(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function p(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function y(e,t,r){return t&&v(e.prototype,t),r&&v(e,r),e}var m=function(e){function n(e){var t;if(p(this,n),(t=c(this,h(n).call(this))).defaultParams={audioContext:null,audioRate:1,autoCenter:!0,backend:\"WebAudio\",barHeight:1,barGap:null,container:null,cursorColor:\"#333\",cursorWidth:1,dragSelection:!0,fillParent:!0,forceDecode:!1,height:128,hideScrollbar:!1,interact:!0,loopSelection:!0,maxCanvasWidth:4e3,mediaContainer:null,mediaControls:!1,mediaType:\"audio\",minPxPerSec:20,normalize:!1,partialRender:!1,pixelRatio:window.devicePixelRatio||screen.deviceXDPI/screen.logicalXDPI,plugins:[],progressColor:\"#555\",removeMediaElementOnDestroy:!0,renderer:a.default,responsive:!1,scrollParent:!1,skipLength:2,splitChannels:!1,waveColor:\"#999\",xhr:{}},t.backends={MediaElement:o.default,WebAudio:s.default},t.util=i,t.params=i.extend({},t.defaultParams,e),t.container=\"string\"==typeof e.container?document.querySelector(t.params.container):t.params.container,!t.container)throw new Error(\"Container element not found\");if(null==t.params.mediaContainer?t.mediaContainer=t.container:\"string\"==typeof t.params.mediaContainer?t.mediaContainer=document.querySelector(t.params.mediaContainer):t.mediaContainer=t.params.mediaContainer,!t.mediaContainer)throw new Error(\"Media Container element not found\");if(t.params.maxCanvasWidth<=1)throw new Error(\"maxCanvasWidth must be greater than 1\");if(t.params.maxCanvasWidth%2==1)throw new Error(\"maxCanvasWidth must be an even number\");if(t.savedVolume=0,t.isMuted=!1,t.tmpEvents=[],t.currentAjax=null,t.arraybuffer=null,t.drawer=null,t.backend=null,t.peakCache=null,\"function\"!=typeof t.params.renderer)throw new Error(\"Renderer parameter is invalid\");t.Drawer=t.params.renderer,t.Backend=t.backends[t.params.backend],t.initialisedPluginList={},t.isDestroyed=!1,t.isReady=!1;var r=0;return t._onResize=i.debounce(function(){r==t.drawer.wrapper.clientWidth||t.params.scrollParent||(r=t.drawer.wrapper.clientWidth,t.drawer.fireEvent(\"redraw\"))},\"number\"==typeof t.params.responsive?t.params.responsive:100),c(t,d(d(t)))}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(n,i.Observer),y(n,null,[{key:\"create\",value:function(e){return new n(e).init()}}]),y(n,[{key:\"init\",value:function(){return this.registerPlugins(this.params.plugins),this.createDrawer(),this.createBackend(),this.createPeakCache(),this}},{key:\"registerPlugins\",value:function(e){var t=this;return e.forEach(function(e){return t.addPlugin(e)}),e.forEach(function(e){e.deferInit||t.initPlugin(e.name)}),this.fireEvent(\"plugins-registered\",e),this}},{key:\"addPlugin\",value:function(t){var r=this;if(!t.name)throw new Error(\"Plugin does not have a name!\");if(!t.instance)throw new Error(\"Plugin \".concat(t.name,\" does not have an instance property!\"));t.staticProps&&Object.keys(t.staticProps).forEach(function(e){r[e]=t.staticProps[e]});var n=t.instance;return Object.getOwnPropertyNames(i.Observer.prototype).forEach(function(e){n.prototype[e]=i.Observer.prototype[e]}),this[t.name]=new n(t.params||{},this),this.fireEvent(\"plugin-added\",t.name),this}},{key:\"initPlugin\",value:function(e){if(!this[e])throw new Error(\"Plugin \".concat(e,\" has not been added yet!\"));return this.initialisedPluginList[e]&&this.destroyPlugin(e),this[e].init(),this.initialisedPluginList[e]=!0,this.fireEvent(\"plugin-initialised\",e),this}},{key:\"destroyPlugin\",value:function(e){if(!this[e])throw new Error(\"Plugin \".concat(e,\" has not been added yet and cannot be destroyed!\"));if(!this.initialisedPluginList[e])throw new Error(\"Plugin \".concat(e,\" is not active and cannot be destroyed!\"));if(\"function\"!=typeof this[e].destroy)throw new Error(\"Plugin \".concat(e,\" does not have a destroy function!\"));return this[e].destroy(),delete this.initialisedPluginList[e],this.fireEvent(\"plugin-destroyed\",e),this}},{key:\"destroyAllPlugins\",value:function(){var t=this;Object.keys(this.initialisedPluginList).forEach(function(e){return t.destroyPlugin(e)})}},{key:\"createDrawer\",value:function(){var r=this;this.drawer=new this.Drawer(this.container,this.params),this.drawer.init(),this.fireEvent(\"drawer-created\",this.drawer),!1!==this.params.responsive&&(window.addEventListener(\"resize\",this._onResize,!0),window.addEventListener(\"orientationchange\",this._onResize,!0)),this.drawer.on(\"redraw\",function(){r.drawBuffer(),r.drawer.progress(r.backend.getPlayedPercents())}),this.drawer.on(\"click\",function(e,t){setTimeout(function(){return r.seekTo(t)},0)}),this.drawer.on(\"scroll\",function(e){r.params.partialRender&&r.drawBuffer(),r.fireEvent(\"scroll\",e)})}},{key:\"createBackend\",value:function(){var t=this;this.backend&&this.backend.destroy(),\"AudioElement\"==this.params.backend&&(this.params.backend=\"MediaElement\"),\"WebAudio\"!=this.params.backend||this.Backend.prototype.supportsWebAudio.call(null)||(this.params.backend=\"MediaElement\"),this.backend=new this.Backend(this.params),this.backend.init(),this.fireEvent(\"backend-created\",this.backend),this.backend.on(\"finish\",function(){return t.fireEvent(\"finish\")}),this.backend.on(\"play\",function(){return t.fireEvent(\"play\")}),this.backend.on(\"pause\",function(){return t.fireEvent(\"pause\")}),this.backend.on(\"audioprocess\",function(e){t.drawer.progress(t.backend.getPlayedPercents()),t.fireEvent(\"audioprocess\",e)})}},{key:\"createPeakCache\",value:function(){this.params.partialRender&&(this.peakCache=new u.default)}},{key:\"getDuration\",value:function(){return this.backend.getDuration()}},{key:\"getCurrentTime\",value:function(){return this.backend.getCurrentTime()}},{key:\"setCurrentTime\",value:function(e){e>=this.getDuration()?this.seekTo(1):this.seekTo(e/this.getDuration())}},{key:\"play\",value:function(e,t){var r=this;return this.fireEvent(\"interaction\",function(){return r.play(e,t)}),this.backend.play(e,t)}},{key:\"pause\",value:function(){if(!this.backend.isPaused())return this.backend.pause()}},{key:\"playPause\",value:function(){return this.backend.isPaused()?this.play():this.pause()}},{key:\"isPlaying\",value:function(){return!this.backend.isPaused()}},{key:\"skipBackward\",value:function(e){this.skip(-e||-this.params.skipLength)}},{key:\"skipForward\",value:function(e){this.skip(e||this.params.skipLength)}},{key:\"skip\",value:function(e){var t=this.getDuration()||1,r=this.getCurrentTime()||0;r=Math.max(0,Math.min(t,r+(e||0))),this.seekAndCenter(r/t)}},{key:\"seekAndCenter\",value:function(e){this.seekTo(e),this.drawer.recenter(e)}},{key:\"seekTo\",value:function(e){var t=this;if(\"number\"!=typeof e||!isFinite(e)||e<0||1<e)return console.error(\"Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!\");this.fireEvent(\"interaction\",function(){return t.seekTo(e)});var r=this.backend.isPaused();r||this.backend.pause();var n=this.params.scrollParent;this.params.scrollParent=!1,this.backend.seekTo(e*this.getDuration()),this.drawer.progress(e),r||this.backend.play(),this.params.scrollParent=n,this.fireEvent(\"seek\",e)}},{key:\"stop\",value:function(){this.pause(),this.seekTo(0),this.drawer.progress(0)}},{key:\"setSinkId\",value:function(e){return this.backend.setSinkId(e)}},{key:\"setVolume\",value:function(e){this.backend.setVolume(e),this.fireEvent(\"volume\",e)}},{key:\"getVolume\",value:function(){return this.backend.getVolume()}},{key:\"setPlaybackRate\",value:function(e){this.backend.setPlaybackRate(e)}},{key:\"getPlaybackRate\",value:function(){return this.backend.getPlaybackRate()}},{key:\"toggleMute\",value:function(){this.setMute(!this.isMuted)}},{key:\"setMute\",value:function(e){e!==this.isMuted&&(e?(this.savedVolume=this.backend.getVolume(),this.backend.setVolume(0),this.isMuted=!0,this.fireEvent(\"volume\",0)):(this.backend.setVolume(this.savedVolume),this.isMuted=!1,this.fireEvent(\"volume\",this.savedVolume))),this.fireEvent(\"mute\",this.isMuted)}},{key:\"getMute\",value:function(){return this.isMuted}},{key:\"isReady\",value:function(){return this.isReady}},{key:\"getFilters\",value:function(){return this.backend.filters||[]}},{key:\"toggleScroll\",value:function(){this.params.scrollParent=!this.params.scrollParent,this.drawBuffer()}},{key:\"toggleInteraction\",value:function(){this.params.interact=!this.params.interact}},{key:\"getWaveColor\",value:function(){return this.params.waveColor}},{key:\"setWaveColor\",value:function(e){this.params.waveColor=e,this.drawBuffer()}},{key:\"getProgressColor\",value:function(){return this.params.progressColor}},{key:\"setProgressColor\",value:function(e){this.params.progressColor=e,this.drawBuffer()}},{key:\"getCursorColor\",value:function(){return this.params.cursorColor}},{key:\"setCursorColor\",value:function(e){this.params.cursorColor=e,this.drawer.updateCursor()}},{key:\"getHeight\",value:function(){return this.params.height}},{key:\"setHeight\",value:function(e){this.params.height=e,this.drawer.setHeight(e*this.params.pixelRatio),this.drawBuffer()}},{key:\"drawBuffer\",value:function(){var e,t=Math.round(this.getDuration()*this.params.minPxPerSec*this.params.pixelRatio),r=this.drawer.getWidth(),n=t,i=this.drawer.getScrollX(),a=Math.max(i+r,n);if(this.params.fillParent&&(!this.params.scrollParent||t<r)&&(i=0,a=n=r),this.params.partialRender){var s,o=this.peakCache.addRangeToPeakCache(n,i,a);for(s=0;s<o.length;s++)e=this.backend.getPeaks(n,o[s][0],o[s][1]),this.drawer.drawPeaks(e,n,o[s][0],o[s][1])}else e=this.backend.getPeaks(n,i,a),this.drawer.drawPeaks(e,n,i,a);this.fireEvent(\"redraw\",e,n)}},{key:\"zoom\",value:function(e){this.params.scrollParent=e?(this.params.minPxPerSec=e,!0):(this.params.minPxPerSec=this.defaultParams.minPxPerSec,!1),this.drawBuffer(),this.drawer.progress(this.backend.getPlayedPercents()),this.drawer.recenter(this.getCurrentTime()/this.getDuration()),this.fireEvent(\"zoom\",e)}},{key:\"loadArrayBuffer\",value:function(e){var t=this;this.decodeArrayBuffer(e,function(e){t.isDestroyed||t.loadDecodedBuffer(e)})}},{key:\"loadDecodedBuffer\",value:function(e){this.backend.load(e),this.drawBuffer(),this.fireEvent(\"ready\"),this.isReady=!0}},{key:\"loadBlob\",value:function(e){var t=this,r=new FileReader;r.addEventListener(\"progress\",function(e){return t.onProgress(e)}),r.addEventListener(\"load\",function(e){return t.loadArrayBuffer(e.target.result)}),r.addEventListener(\"error\",function(){return t.fireEvent(\"error\",\"Error reading file\")}),r.readAsArrayBuffer(e),this.empty()}},{key:\"load\",value:function(e,t,r,n){if(this.empty(),r){var i={\"Preload is not 'auto', 'none' or 'metadata'\":-1===[\"auto\",\"metadata\",\"none\"].indexOf(r),\"Peaks are not provided\":!t,\"Backend is not of type MediaElement\":\"MediaElement\"!==this.params.backend,\"Url is not of type string\":\"string\"!=typeof e},a=Object.keys(i).filter(function(e){return i[e]});a.length&&(console.warn(\"Preload parameter of wavesurfer.load will be ignored because:\\n\\t- \"+a.join(\"\\n\\t- \")),r=null)}switch(this.params.backend){case\"WebAudio\":return this.loadBuffer(e,t,n);case\"MediaElement\":return this.loadMediaElement(e,t,r,n)}}},{key:\"loadBuffer\",value:function(t,e,r){var n=this,i=function(e){return e&&n.tmpEvents.push(n.once(\"ready\",e)),n.getArrayBuffer(t,function(e){return n.loadArrayBuffer(e)})};if(!e)return i();this.backend.setPeaks(e,r),this.drawBuffer(),this.tmpEvents.push(this.once(\"interaction\",i))}},{key:\"loadMediaElement\",value:function(e,t,r,n){var i=this,a=e;if(\"string\"==typeof e)this.backend.load(a,this.mediaContainer,t,r);else{var s=e;this.backend.loadElt(s,t),a=s.src}this.tmpEvents.push(this.backend.once(\"canplay\",function(){i.drawBuffer(),i.fireEvent(\"ready\"),i.isReady=!0}),this.backend.once(\"error\",function(e){return i.fireEvent(\"error\",e)})),t&&this.backend.setPeaks(t,n),t&&!this.params.forceDecode||!this.backend.supportsWebAudio()||this.getArrayBuffer(a,function(e){i.decodeArrayBuffer(e,function(e){i.backend.buffer=e,i.backend.setPeaks(null),i.drawBuffer(),i.fireEvent(\"waveform-ready\")})})}},{key:\"decodeArrayBuffer\",value:function(t,r){var n=this;this.arraybuffer=t,this.backend.decodeArrayBuffer(t,function(e){n.isDestroyed||n.arraybuffer!=t||(r(e),n.arraybuffer=null)},function(){return n.fireEvent(\"error\",\"Error decoding audiobuffer\")})}},{key:\"getArrayBuffer\",value:function(e,r){var n=this,t=i.ajax({url:e,responseType:\"arraybuffer\",xhr:this.params.xhr});return this.currentAjax=t,this.tmpEvents.push(t.on(\"progress\",function(e){n.onProgress(e)}),t.on(\"success\",function(e,t){r(e),n.currentAjax=null}),t.on(\"error\",function(e){n.fireEvent(\"error\",\"XHR error: \"+e.target.statusText),n.currentAjax=null})),t}},{key:\"onProgress\",value:function(e){var t;t=e.lengthComputable?e.loaded/e.total:e.loaded/(e.loaded+1e6),this.fireEvent(\"loading\",Math.round(100*t),e.target)}},{key:\"exportPCM\",value:function(e,t,r,n){e=e||1024,n=n||0,t=t||1e4,r=r||!1;var i=this.backend.getPeaks(e,n),a=[].map.call(i,function(e){return Math.round(e*t)/t}),s=JSON.stringify(a);return r||window.open(\"data:application/json;charset=utf-8,\"+encodeURIComponent(s)),s}},{key:\"exportImage\",value:function(e,t){return e||(e=\"image/png\"),t||(t=1),this.drawer.getImage(e,t)}},{key:\"cancelAjax\",value:function(){this.currentAjax&&(this.currentAjax.xhr.abort(),this.currentAjax=null)}},{key:\"clearTmpEvents\",value:function(){this.tmpEvents.forEach(function(e){return e.un()})}},{key:\"empty\",value:function(){this.backend.isPaused()||(this.stop(),this.backend.disconnectSource()),this.isReady=!1,this.cancelAjax(),this.clearTmpEvents(),this.drawer.progress(0),this.drawer.setWidth(0),this.drawer.drawPeaks({length:this.drawer.getWidth()},0)}},{key:\"destroy\",value:function(){this.destroyAllPlugins(),this.fireEvent(\"destroy\"),this.cancelAjax(),this.clearTmpEvents(),this.unAll(),!1!==this.params.responsive&&(window.removeEventListener(\"resize\",this._onResize,!0),window.removeEventListener(\"orientationchange\",this._onResize,!0)),this.backend.destroy(),this.drawer.destroy(),this.isDestroyed=!0,this.isReady=!1,this.arraybuffer=null}}]),n}();(t.default=m).VERSION=\"2.1.0\",m.util=i,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e){var t=new i.default,r=new XMLHttpRequest,n=!1;r.open(e.method||\"GET\",e.url,!0),r.responseType=e.responseType||\"json\",e.xhr&&(e.xhr.requestHeaders&&e.xhr.requestHeaders.forEach(function(e){r.setRequestHeader(e.key,e.value)}),e.xhr.withCredentials&&(r.withCredentials=!0));return r.addEventListener(\"progress\",function(e){t.fireEvent(\"progress\",e),e.lengthComputable&&e.loaded==e.total&&(n=!0)}),r.addEventListener(\"load\",function(e){n||t.fireEvent(\"progress\",e),t.fireEvent(\"load\",e),200==r.status||206==r.status?t.fireEvent(\"success\",r.response,e):t.fireEvent(\"error\",e)}),r.addEventListener(\"error\",function(e){return t.fireEvent(\"error\",e)}),r.send(),t.xhr=r,t};var n,i=(n=r(1))&&n.__esModule?n:{default:n};e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(){return\"wavesurfer_\"+Math.random().toString(32).substring(2)},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t){var r=-1/0;return Object.keys(t).forEach(function(e){t[e]>r&&(r=t[e])}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t){var r=Number(1/0);return Object.keys(t).forEach(function(e){t[e]<r&&(r=t[e])}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(r){for(var e=arguments.length,t=new Array(1<e?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];return t.forEach(function(t){Object.keys(t).forEach(function(e){r[e]=t[e]})}),r},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(t,r){return Object.keys(r).forEach(function(e){t.style[e]!==r[e]&&(t.style[e]=r[e])}),t},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(n){return function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return(0,i.default)(function(){return n.apply(void 0,t)})}};var n,i=(n=r(2))&&n.__esModule?n:{default:n};e.exports=t.default},function(e,t){function r(t,r,n){var i,a,s,o,u;function l(){var e=Date.now()-o;e<r&&0<=e?i=setTimeout(l,r-e):(i=null,n||(u=t.apply(s,a),s=a=null))}null==r&&(r=100);var e=function(){s=this,a=arguments,o=Date.now();var e=n&&!i;return i||(i=setTimeout(l,r)),e&&(u=t.apply(s,a),s=a=null),u};return e.clear=function(){i&&(clearTimeout(i),i=null)},e.flush=function(){i&&(u=t.apply(s,a),s=a=null,clearTimeout(i),i=null)},e}r.debounce=r,e.exports=r},function(e,t,r){\"use strict\";function n(e){e.stopPropagation(),document.body.removeEventListener(\"click\",n,!0)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e){document.body.addEventListener(\"click\",n,!0)},e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n,a=(n=r(15))&&n.__esModule?n:{default:n},f=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var c=function(e){function n(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(r=o(this,u(n).call(this,e,t))).maxCanvasWidth=t.maxCanvasWidth,r.maxCanvasElementWidth=Math.round(t.maxCanvasWidth/t.pixelRatio),r.hasProgressCanvas=t.waveColor!=t.progressColor,r.halfPixel=.5/t.pixelRatio,r.canvases=[],r.progressWave=null,r}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(n,a.default),t=n,(r=[{key:\"init\",value:function(){this.createWrapper(),this.createElements()}},{key:\"createElements\",value:function(){this.progressWave=this.wrapper.appendChild(this.style(document.createElement(\"wave\"),{position:\"absolute\",zIndex:3,left:0,top:0,bottom:0,overflow:\"hidden\",width:\"0\",display:\"none\",boxSizing:\"border-box\",borderRightStyle:\"solid\",pointerEvents:\"none\"})),this.addCanvas(),this.updateCursor()}},{key:\"updateCursor\",value:function(){this.style(this.progressWave,{borderRightWidth:this.params.cursorWidth+\"px\",borderRightColor:this.params.cursorColor})}},{key:\"updateSize\",value:function(){for(var n=this,e=Math.round(this.width/this.params.pixelRatio),t=Math.ceil(e/this.maxCanvasElementWidth);this.canvases.length<t;)this.addCanvas();for(;this.canvases.length>t;)this.removeCanvas();this.canvases.forEach(function(e,t){var r=n.maxCanvasWidth+2*Math.ceil(n.params.pixelRatio/2);t==n.canvases.length-1&&(r=n.width-n.maxCanvasWidth*(n.canvases.length-1)),n.updateDimensions(e,r,n.height),n.clearWaveForEntry(e)})}},{key:\"addCanvas\",value:function(){var e={},t=this.maxCanvasElementWidth*this.canvases.length;e.wave=this.wrapper.appendChild(this.style(document.createElement(\"canvas\"),{position:\"absolute\",zIndex:2,left:t+\"px\",top:0,bottom:0,height:\"100%\",pointerEvents:\"none\"})),e.waveCtx=e.wave.getContext(\"2d\"),this.hasProgressCanvas&&(e.progress=this.progressWave.appendChild(this.style(document.createElement(\"canvas\"),{position:\"absolute\",left:t+\"px\",top:0,bottom:0,height:\"100%\"})),e.progressCtx=e.progress.getContext(\"2d\")),this.canvases.push(e)}},{key:\"removeCanvas\",value:function(){var e=this.canvases.pop();e.wave.parentElement.removeChild(e.wave),this.hasProgressCanvas&&e.progress.parentElement.removeChild(e.progress)}},{key:\"updateDimensions\",value:function(e,t,r){var n=Math.round(t/this.params.pixelRatio),i=Math.round(this.width/this.params.pixelRatio);e.start=e.waveCtx.canvas.offsetLeft/i||0,e.end=e.start+n/i,e.waveCtx.canvas.width=t,e.waveCtx.canvas.height=r,this.style(e.waveCtx.canvas,{width:n+\"px\"}),this.style(this.progressWave,{display:\"block\"}),this.hasProgressCanvas&&(e.progressCtx.canvas.width=t,e.progressCtx.canvas.height=r,this.style(e.progressCtx.canvas,{width:n+\"px\"}))}},{key:\"clearWave\",value:function(){var t=this;this.canvases.forEach(function(e){return t.clearWaveForEntry(e)})}},{key:\"clearWaveForEntry\",value:function(e){e.waveCtx.clearRect(0,0,e.waveCtx.canvas.width,e.waveCtx.canvas.height),this.hasProgressCanvas&&e.progressCtx.clearRect(0,0,e.progressCtx.canvas.width,e.progressCtx.canvas.height)}},{key:\"drawBars\",value:function(e,t,v,y){var m=this;return this.prepareDraw(e,t,v,y,function(e){var t=e.absmax,r=e.hasMinVals,n=(e.height,e.offsetY),i=e.halfH,a=e.peaks;if(void 0!==v){var s,o=r?2:1,u=a.length/o,l=m.params.barWidth*m.params.pixelRatio,c=l+(null===m.params.barGap?Math.max(m.params.pixelRatio,~~(l/2)):Math.max(m.params.pixelRatio,m.params.barGap*m.params.pixelRatio)),h=u/m.width,f=y;for(s=v;s<f;s+=c){var d=a[Math.floor(s*h*o)]||0,p=Math.round(d/t*i);m.fillRect(s+m.halfPixel,i-p+n,l+m.halfPixel,2*p)}}})}},{key:\"drawWave\",value:function(e,t,l,c){var h=this;return this.prepareDraw(e,t,l,c,function(e){var t=e.absmax,r=e.hasMinVals,n=(e.height,e.offsetY),i=e.halfH,a=e.peaks;if(!r){var s,o=[],u=a.length;for(s=0;s<u;s++)o[2*s]=a[s],o[2*s+1]=-a[s];a=o}void 0!==l&&h.drawLine(a,t,i,n,l,c),h.fillRect(0,i+n-h.halfPixel,h.width,h.halfPixel)})}},{key:\"drawLine\",value:function(t,r,n,i,a,s){var o=this;this.canvases.forEach(function(e){o.setFillStyles(e),o.drawLineToContext(e,e.waveCtx,t,r,n,i,a,s),o.drawLineToContext(e,e.progressCtx,t,r,n,i,a,s)})}},{key:\"drawLineToContext\",value:function(e,t,r,n,i,a,s,o){if(t){var u=r.length/2,l=this.params.fillParent&&this.width!=u?this.width/u:1,c=Math.round(u*e.start),h=Math.round(u*e.end)+1;if(!(o<c||h<s)){var f,d,p=Math.min(c,s),v=Math.max(h,o);for(t.beginPath(),t.moveTo((p-c)*l+this.halfPixel,i+a),f=p;f<v;f++){var y=r[2*f]||0,m=Math.round(y/n*i);t.lineTo((f-c)*l+this.halfPixel,i-m+a)}for(d=v-1;p<=d;d--){var b=r[2*d+1]||0,g=Math.round(b/n*i);t.lineTo((d-c)*l+this.halfPixel,i-g+a)}t.closePath(),t.fill()}}}},{key:\"fillRect\",value:function(e,t,r,n){var i,a=Math.floor(e/this.maxCanvasWidth),s=Math.min(Math.ceil((e+r)/this.maxCanvasWidth)+1,this.canvases.length);for(i=a;i<s;i++){var o=this.canvases[i],u=i*this.maxCanvasWidth,l={x1:Math.max(e,i*this.maxCanvasWidth),y1:t,x2:Math.min(e+r,i*this.maxCanvasWidth+o.waveCtx.canvas.width),y2:t+n};l.x1<l.x2&&(this.setFillStyles(o),this.fillRectToContext(o.waveCtx,l.x1-u,l.y1,l.x2-l.x1,l.y2-l.y1),this.fillRectToContext(o.progressCtx,l.x1-u,l.y1,l.x2-l.x1,l.y2-l.y1))}}},{key:\"prepareDraw\",value:function(s,o,u,l,c){var h=this;return f.frame(function(){if(s[0]instanceof Array){var e=s;if(h.params.splitChannels)return h.setHeight(e.length*h.params.height*h.params.pixelRatio),e.forEach(function(e,t){return h.prepareDraw(e,t,u,l,c)});s=e[0]}var t=1/h.params.barHeight;if(h.params.normalize){var r=f.max(s),n=f.min(s);t=r<-n?-n:r}var i=[].some.call(s,function(e){return e<0}),a=h.params.height*h.params.pixelRatio;return c({absmax:t,hasMinVals:i,height:a,offsetY:a*o||0,halfH:a/2,peaks:s})})()}},{key:\"fillRectToContext\",value:function(e,t,r,n,i){e&&e.fillRect(t,r,n,i)}},{key:\"setFillStyles\",value:function(e){e.waveCtx.fillStyle=this.params.waveColor,this.hasProgressCanvas&&(e.progressCtx.fillStyle=this.params.progressColor)}},{key:\"getImage\",value:function(t,r){var e=this.canvases.map(function(e){return e.wave.toDataURL(t,r)});return 1<e.length?e:e[0]}},{key:\"updateProgress\",value:function(e){this.style(this.progressWave,{width:e+\"px\"})}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=c,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var a=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}}(r(0));function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==n(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var i=function(e){function n(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(r=o(this,u(n).call(this))).container=e,r.params=t,r.width=0,r.height=t.height*r.params.pixelRatio,r.lastPos=0,r.wrapper=null,r}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(n,a.Observer),t=n,(r=[{key:\"style\",value:function(e,t){return a.style(e,t)}},{key:\"createWrapper\",value:function(){this.wrapper=this.container.appendChild(document.createElement(\"wave\")),this.style(this.wrapper,{display:\"block\",position:\"relative\",userSelect:\"none\",webkitUserSelect:\"none\",height:this.params.height+\"px\"}),(this.params.fillParent||this.params.scrollParent)&&this.style(this.wrapper,{width:\"100%\",overflowX:this.params.hideScrollbar?\"hidden\":\"auto\",overflowY:\"hidden\"}),this.setupWrapperEvents()}},{key:\"handleEvent\",value:function(e,t){!t&&e.preventDefault();var r,n=e.targetTouches?e.targetTouches[0].clientX:e.clientX,i=this.wrapper.getBoundingClientRect(),a=this.width,s=this.getWidth();return!this.params.fillParent&&a<s?1<(r=(n-i.left)*(this.params.pixelRatio/a)||0)&&(r=1):r=(n-i.left+this.wrapper.scrollLeft)/this.wrapper.scrollWidth||0,r}},{key:\"setupWrapperEvents\",value:function(){var n=this;this.wrapper.addEventListener(\"click\",function(e){var t=n.wrapper.offsetHeight-n.wrapper.clientHeight;if(0!=t){var r=n.wrapper.getBoundingClientRect();if(e.clientY>=r.bottom-t)return}n.params.interact&&n.fireEvent(\"click\",e,n.handleEvent(e))}),this.wrapper.addEventListener(\"scroll\",function(e){return n.fireEvent(\"scroll\",e)})}},{key:\"drawPeaks\",value:function(e,t,r,n){this.setWidth(t)||this.clearWave(),this.params.barWidth?this.drawBars(e,0,r,n):this.drawWave(e,0,r,n)}},{key:\"resetScroll\",value:function(){null!==this.wrapper&&(this.wrapper.scrollLeft=0)}},{key:\"recenter\",value:function(e){var t=this.wrapper.scrollWidth*e;this.recenterOnPosition(t,!0)}},{key:\"recenterOnPosition\",value:function(e,t){var r=this.wrapper.scrollLeft,n=~~(this.wrapper.clientWidth/2),i=this.wrapper.scrollWidth-this.wrapper.clientWidth,a=e-n,s=a-r;if(0!=i){if(!t&&-n<=s&&s<n){a=r+(s=Math.max(-5,Math.min(5,s)))}(a=Math.max(0,Math.min(i,a)))!=r&&(this.wrapper.scrollLeft=a)}}},{key:\"getScrollX\",value:function(){var e=this.params.pixelRatio,t=Math.round(this.wrapper.scrollLeft*e);if(this.params.scrollParent){var r=~~(this.wrapper.scrollWidth*e-this.getWidth());t=Math.min(r,Math.max(0,t))}return t}},{key:\"getWidth\",value:function(){return Math.round(this.container.clientWidth*this.params.pixelRatio)}},{key:\"setWidth\",value:function(e){return this.width!=e&&(this.width=e,this.params.fillParent||this.params.scrollParent?this.style(this.wrapper,{width:\"\"}):this.style(this.wrapper,{width:~~(this.width/this.params.pixelRatio)+\"px\"}),this.updateSize(),!0)}},{key:\"setHeight\",value:function(e){return e!=this.height&&(this.height=e,this.style(this.wrapper,{height:~~(this.height/this.params.pixelRatio)+\"px\"}),this.updateSize(),!0)}},{key:\"progress\",value:function(e){var t=1/this.params.pixelRatio,r=Math.round(e*this.width)*t;if(r<this.lastPos||r-this.lastPos>=t){if(this.lastPos=r,this.params.scrollParent&&this.params.autoCenter){var n=~~(this.wrapper.scrollWidth*e);this.recenterOnPosition(n)}this.updateProgress(r)}}},{key:\"destroy\",value:function(){this.unAll(),this.wrapper&&(this.wrapper.parentNode==this.container&&this.container.removeChild(this.wrapper),this.wrapper=null)}},{key:\"updateCursor\",value:function(){}},{key:\"updateSize\",value:function(){}},{key:\"drawBars\",value:function(e,t,r,n){}},{key:\"drawWave\",value:function(e,t,r,n){}},{key:\"clearWave\",value:function(){}},{key:\"updateProgress\",value:function(e){}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=i,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n,a=(n=r(3))&&n.__esModule?n:{default:n};!function(e){{if(e&&e.__esModule)return;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}t.default=e}}(r(0));function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0!==e)return e;throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")}(e):t}function u(e,t,r){return(u=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(n){var i=Object.getOwnPropertyDescriptor(n,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=function(e){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),(t=o(this,l(n).call(this,e))).params=e,t.media={currentTime:0,duration:0,paused:!0,playbackRate:1,play:function(){},pause:function(){},volume:0},t.mediaType=e.mediaType.toLowerCase(),t.elementPosition=e.elementPosition,t.peaks=null,t.playbackRate=1,t.volume=1,t.buffer=null,t.onPlayEnd=null,t}var t,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(n,a.default),t=n,(r=[{key:\"init\",value:function(){this.setPlaybackRate(this.params.audioRate),this.createTimer()}},{key:\"createTimer\",value:function(){var t=this;this.on(\"play\",function e(){t.isPaused()||(t.fireEvent(\"audioprocess\",t.getCurrentTime()),(window.requestAnimationFrame||window.webkitRequestAnimationFrame)(e))}),this.on(\"pause\",function(){t.fireEvent(\"audioprocess\",t.getCurrentTime())})}},{key:\"load\",value:function(e,t,r,n){var i=document.createElement(this.mediaType);i.controls=this.params.mediaControls,i.autoplay=this.params.autoplay||!1,i.preload=null==n?\"auto\":n,i.src=e,i.style.width=\"100%\";var a=t.querySelector(this.mediaType);a&&t.removeChild(a),t.appendChild(i),this._load(i,r)}},{key:\"loadElt\",value:function(e,t){e.controls=this.params.mediaControls,e.autoplay=this.params.autoplay||!1,this._load(e,t)}},{key:\"_load\",value:function(e,t){var r=this;\"function\"==typeof e.load&&e.load(),e.addEventListener(\"error\",function(){r.fireEvent(\"error\",\"Error loading media element\")}),e.addEventListener(\"canplay\",function(){r.fireEvent(\"canplay\")}),e.addEventListener(\"ended\",function(){r.fireEvent(\"finish\")}),e.addEventListener(\"play\",function(){r.fireEvent(\"play\")}),e.addEventListener(\"pause\",function(){r.fireEvent(\"pause\")}),this.media=e,this.peaks=t,this.onPlayEnd=null,this.buffer=null,this.setPlaybackRate(this.playbackRate),this.setVolume(this.volume)}},{key:\"isPaused\",value:function(){return!this.media||this.media.paused}},{key:\"getDuration\",value:function(){if(this.explicitDuration)return this.explicitDuration;var e=(this.buffer||this.media).duration;return 1/0<=e&&(e=this.media.seekable.end(0)),e}},{key:\"getCurrentTime\",value:function(){return this.media&&this.media.currentTime}},{key:\"getPlayedPercents\",value:function(){return this.getCurrentTime()/this.getDuration()||0}},{key:\"getPlaybackRate\",value:function(){return this.playbackRate||this.media.playbackRate}},{key:\"setPlaybackRate\",value:function(e){this.playbackRate=e||1,this.media.playbackRate=this.playbackRate}},{key:\"seekTo\",value:function(e){null!=e&&(this.media.currentTime=e),this.clearPlayEnd()}},{key:\"play\",value:function(e,t){this.seekTo(e);var r=this.media.play();return t&&this.setPlayEnd(t),r}},{key:\"pause\",value:function(){var e;return this.media&&(e=this.media.pause()),this.clearPlayEnd(),e}},{key:\"setPlayEnd\",value:function(t){var r=this;this._onPlayEnd=function(e){t<=e&&(r.pause(),r.seekTo(t))},this.on(\"audioprocess\",this._onPlayEnd)}},{key:\"clearPlayEnd\",value:function(){this._onPlayEnd&&(this.un(\"audioprocess\",this._onPlayEnd),this._onPlayEnd=null)}},{key:\"getPeaks\",value:function(e,t,r){return this.buffer?u(l(n.prototype),\"getPeaks\",this).call(this,e,t,r):this.peaks||[]}},{key:\"setSinkId\",value:function(e){return e?this.media.setSinkId?this.media.setSinkId(e):Promise.reject(new Error(\"setSinkId is not supported in your browser\")):Promise.reject(new Error(\"Invalid deviceId: \"+e))}},{key:\"getVolume\",value:function(){return this.volume||this.media.volume}},{key:\"setVolume\",value:function(e){this.volume=e,this.media.volume=this.volume}},{key:\"destroy\",value:function(){this.pause(),this.unAll(),this.params.removeMediaElementOnDestroy&&this.media&&this.media.parentNode&&this.media.parentNode.removeChild(this.media),this.media=null}}])&&s(t.prototype,r),i&&s(t,i),n}();t.default=h,e.exports=t.default},function(e,t,r){\"use strict\";function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.clearPeakCache()}var t,r,n;return t=e,(r=[{key:\"clearPeakCache\",value:function(){this.peakCacheRanges=[],this.peakCacheLength=-1}},{key:\"addRangeToPeakCache\",value:function(e,t,r){e!=this.peakCacheLength&&(this.clearPeakCache(),this.peakCacheLength=e);for(var n=[],i=0;i<this.peakCacheRanges.length&&this.peakCacheRanges[i]<t;)i++;for(i%2==0&&n.push(t);i<this.peakCacheRanges.length&&this.peakCacheRanges[i]<=r;)n.push(this.peakCacheRanges[i]),i++;i%2==0&&n.push(r),n=n.filter(function(e,t,r){return 0==t?e!=r[t+1]:t==r.length-1?e!=r[t-1]:e!=r[t-1]&&e!=r[t+1]}),this.peakCacheRanges=this.peakCacheRanges.concat(n),this.peakCacheRanges=this.peakCacheRanges.sort(function(e,t){return e-t}).filter(function(e,t,r){return 0==t?e!=r[t+1]:t==r.length-1?e!=r[t-1]:e!=r[t-1]&&e!=r[t+1]});var a=[];for(i=0;i<n.length;i+=2)a.push([n[i],n[i+1]]);return a}},{key:\"getCacheRanges\",value:function(){var e,t=[];for(e=0;e<this.peakCacheRanges.length;e+=2)t.push([this.peakCacheRanges[e],this.peakCacheRanges[e+1]]);return t}}])&&i(t.prototype,r),n&&i(t,n),e}();t.default=n,e.exports=t.default}])});\r\n//# sourceMappingURL=wavesurfer.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/wavesurfer.js/dist/wavesurfer.min.js\n// module id = 458\n// module chunks = 0 28 33","/*!\r\n *  howler.js v2.0.15\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto iOS enabler.\r\n      self.mobileAutoEnable = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mobile browsers will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _enableMobileAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this on mobile devices if audio isn't already eanbled.\r\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome/i.test(self._navigator && self._navigator.userAgent);\r\n      if (self._mobileEnabled || !self.ctx || !isMobile) {\r\n        return;\r\n      }\r\n\r\n      self._mobileEnabled = false;\r\n      self.mobileAutoEnable = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Fix Android can not play in suspend state.\r\n        Howler._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._mobileEnabled = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n      self._xhronwaiting = o.xhronwaiting || false;\r\n\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n      self._onwait = o.onwait ? o.onwait : null\r\n      \r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio on iOS.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\r\n        Howler._enableMobileAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended.\r\n        // If there is, play that sound. If not, continue as usual.\r\n        var num = 0;\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n            num++;\r\n            id = self._sounds[i]._id;\r\n          }\r\n        }\r\n\r\n        if (num === 1) {\r\n          sprite = null;\r\n        } else {\r\n          id = null;\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Makr this sounded as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n      // Update the parameters of the sound\r\n      sound._paused = false;\r\n      sound._ended = false;\r\n      sound._sprite = sprite;\r\n      sound._seek = seek;\r\n      sound._start = self._sprite[sprite][0] / 1000;\r\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (sound._seek >= sound._stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Mobile browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n                });\r\n            } else if (!internal) {\r\n              self._emit('play', sound._id);\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            sound._rateSeek = self.seek(id[i]);\r\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n          if (!checkIE) {\r\n            sounds[i]._node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n          }\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        self._node = new Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Listen for 'waiting' event to let us know if it's buffering\r\n        self._waiting = self._onwaiting.bind(self);\r\n        self._node.addEventListener('waiting', self._waiting, false);\r\n\r\n        // Listen for 'playing' event to let us know if it's buffering\r\n        self._playing = self._onplaying.bind(self);\r\n        self._node.addEventListener('playing', self._playing, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    },\r\n    \r\n    /**\r\n     * Get Progress Event\r\n     * @return {Howler}\r\n     */\r\n    _onwaiting: function(){\r\n      var self = this;\r\n      var id = self._parent._onwait;\r\n      var testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton'];\r\n      var repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat',\r\n        'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'grammarRepeatAudioPlayButton', 'testGrammarAudioButtonRepeat', 'cultureRepeatAudioPlayButton',\r\n        'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton',\r\n        'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton',\r\n        'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton',\r\n        'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton',\r\n        'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton',\r\n        'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton',\r\n        'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton',\r\n        'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton',\r\n        'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton',\r\n        'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton',\r\n        'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton',\r\n        'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton',\r\n        'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton',\r\n        'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton',\r\n        'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton',\r\n        'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton',\r\n        'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton',\r\n        'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton',\r\n        'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton',\r\n        'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton',\r\n        'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile',\r\n        'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile',\r\n        'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile',\r\n        'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile',\r\n        'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile',\r\n        'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile',\r\n        'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile',\r\n        'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile',\r\n        'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile',\r\n        'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile',\r\n        'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile',\r\n        'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile',\r\n        'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile'];\r\n      if(testButtons.indexOf(id) >= 0){\r\n        $('#' + id).removeClass('fa fa-play');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }else if(repeatButtons.indexOf(id) === -1){\r\n        // implement remove class here using ios, if this is implemented it affects the wholle process\r\n        // implement only on the IPA\r\n        // findout why sub component not working with removeclass while wokring on javascript style\r\n        $('#' + id).removeClass('fa fa-volume-up');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }else{\r\n        $('#' + id).removeClass('fas fa-sync');\r\n        $('#' + id).addClass('fas fa-circle-notch fa-spin');\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Get Playing Event\r\n     * @return {Howler}\r\n     */\r\n    _onplaying: function(){\r\n      var self = this;\r\n      var id = self._parent._onwait;\r\n      var testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton'];\r\n      var repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat',\r\n        'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'grammarRepeatAudioPlayButton', 'testGrammarAudioButtonRepeat', 'cultureRepeatAudioPlayButton',\r\n        'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton',\r\n        'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton',\r\n        'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton',\r\n        'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton',\r\n        'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton',\r\n        'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton',\r\n        'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton',\r\n        'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton',\r\n        'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton',\r\n        'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton',\r\n        'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton',\r\n        'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton',\r\n        'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton',\r\n        'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton',\r\n        'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton',\r\n        'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton',\r\n        'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton',\r\n        'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton',\r\n        'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton',\r\n        'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton',\r\n        'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile',\r\n        'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile',\r\n        'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile',\r\n        'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile',\r\n        'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile',\r\n        'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile',\r\n        'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile',\r\n        'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile',\r\n        'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile',\r\n        'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile',\r\n        'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile',\r\n        'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile',\r\n        'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile'];\r\n      if(testButtons.indexOf(id) >= 0){\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fa fa-play')\r\n      }else if(repeatButtons.indexOf(id) === -1){\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fa fa-volume-up')\r\n      }else{\r\n        $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n        $('#' + id).addClass('fas fa-sync')\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      \r\n      xhr.onwaiting = function(e) {\r\n        self._emit('onwaiting', e);\r\n      }\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    });\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (typeof exports !== 'undefined') {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.0.15\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2018, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/Howler/dist/howlerCustom.js\n// module id = 494\n// module chunks = 0 28","import WaveSurfer from 'wavesurfer.js'\r\nimport {Howl, Howler} from 'Howler/dist/howlerCustom.js'\r\nlet previousButton = null\r\nlet visualizerButton = null\r\nlet wavesurfer = null\r\nlet audio = null\r\nlet url = null\r\nlet prevWaveUrl = null\r\nlet pronounciationAudio = ['pronounciationAudio1', 'pronounciationAudio2', 'pronounciationAudio3', 'pronounciationAudio4',\r\n  'pronounciationAudio5', 'pronounciationAudio6', 'pronounciationAudio7', 'pronounciationAudio8', 'pronounciationAudio9',\r\n  'pronounciationAudio10', 'pronounciationAudio11', 'pronounciationAudio12', 'pronounciationAudio13', 'pronounciationAudio14',\r\n  'pronounciationAudio15', 'pronounciationAudio16', 'pronounciationAudio17', 'pronounciationAudio18', 'pronounciationAudio19',\r\n  'pronounciationAudio20', 'pronounciationAudio21', 'pronounciationAudio22', 'pronounciationAudio23', 'pronounciationAudio24',\r\n  'pronounciationAudio25', 'pronounciationAudio26', 'pronounciationAudio27', 'pronounciationAudio28', 'pronounciationAudio29']\r\nlet pauseButton = ['testSpanishPauseButton', 'testGrammarAudioPauseButton', 'testEnglishPauseButton', 'testGrammarPauseButton']\r\nlet repeatButtonsTest = ['testSpanishButtonRepeat', 'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'testGrammarAudioButtonRepeat']\r\nlet testButtons = ['testSpanishButton', 'testEnglishButton', 'testGrammarButton', 'testGrammarAudioButton']\r\nlet repeatButtons = ['lessonAudioPlayButtonRepeat', 'grammarAudioPlayButtonRepeat', 'testSpanishButtonRepeat',\r\n  'testEnglishButtonRepeat', 'testGrammarButtonRepeat', 'testGrammarAudioButtonRepeat', 'grammarRepeatAudioPlayButton', 'cultureRepeatAudioPlayButton',\r\n  'syllabusRepeatAudioPlayButton', 'sentencePopupRepeatAudio0PlayButton', 'sentencePopupRepeatAudio1PlayButton',\r\n  'sentencePopupRepeatAudio2PlayButton', 'sentencePopupRepeatAudio3PlayButton', 'sentencePopupRepeatAudio4PlayButton',\r\n  'sentencePopupRepeatAudio5PlayButton', 'sentencePopupRepeatAudio6PlayButton', 'sentencePopupRepeatAudio7PlayButton',\r\n  'sentencePopupRepeatAudio8PlayButton', 'sentencePopupRepeatAudio9PlayButton', 'wordPopupRepeatAudio0PlayButton',\r\n  'wordPopupRepeatAudio1PlayButton', 'wordPopupRepeatAudio2PlayButton', 'wordPopupRepeatAudio3PlayButton',\r\n  'wordPopupRepeatAudio4PlayButton', 'wordPopupRepeatAudio5PlayButton', 'wordPopupRepeatAudio6PlayButton',\r\n  'wordPopupRepeatAudio7PlayButton', 'wordPopupRepeatAudio8PlayButton', 'wordPopupRepeatAudio9PlayButton',\r\n  'basicAudioRepeat1PlayButton', 'basicAudioRepeat2PlayButton', 'basicAudioRepeat3PlayButton', 'basicAudioRepeat4PlayButton',\r\n  'basicAudioRepeat5PlayButton', 'basicAudioRepeat6PlayButton', 'basicAudioRepeat7PlayButton', 'basicAudioRepeat8PlayButton',\r\n  'basicAudioRepeat9PlayButton', 'basicAudioRepeat10PlayButton', 'basicAudioRepeat11PlayButton', 'basicAudioRepeat12PlayButton',\r\n  'basicAudioRepeat13PlayButton', 'basicAudioRepeat14PlayButton', 'basicAudioRepeat15PlayButton', 'basicAudioRepeat16PlayButton',\r\n  'basicAudioRepeat17PlayButton', 'basicAudioRepeat18PlayButton', 'basicAudioRepeat19PlayButton', 'basicAudioRepeat20PlayButton',\r\n  'basicAudioRepeat21PlayButton', 'basicAudioRepeat22PlayButton', 'basicAudioRepeat23PlayButton', 'basicAudioRepeat24PlayButton',\r\n  'basicAudioRepeat25PlayButton', 'basicAudioRepeat26PlayButton', 'basicAudioRepeat27PlayButton', 'basicAudioRepeat28PlayButton',\r\n  'basicAudioRepeat29PlayButton', 'basicAudioRepeat30PlayButton', 'basicAudioRepeat31PlayButton', 'basicAudioRepeat32PlayButton',\r\n  'basicAudioRepeat33PlayButton', 'basicAudioRepeat34PlayButton', 'basicAudioRepeat35PlayButton', 'basicAudioRepeat36PlayButton',\r\n  'basicAudioRepeat37PlayButton', 'basicAudioRepeat38PlayButton', 'basicAudioRepeat39PlayButton', 'basicAudioRepeat40PlayButton',\r\n  'basicAudioRepeat41PlayButton', 'basicAudioRepeat42PlayButton', 'basicAudioRepeat43PlayButton', 'basicAudioRepeat44PlayButton',\r\n  'basicAudioRepeat45PlayButton', 'basicAudioRepeat46PlayButton', 'basicAudioRepeat47PlayButton', 'basicAudioRepeat48PlayButton',\r\n  'basicAudioRepeat49PlayButton', 'basicAudioRepeat50PlayButton', 'basicAudioRepeat51PlayButton', 'basicAudioRepeat52PlayButton',\r\n  'basicAudioRepeat1PlayButtonMobile', 'basicAudioRepeat2PlayButtonMobile', 'basicAudioRepeat3PlayButtonMobile', 'basicAudioRepeat4PlayButtonMobile',\r\n  'basicAudioRepeat5PlayButtonMobile', 'basicAudioRepeat6PlayButtonMobile', 'basicAudioRepeat7PlayButtonMobile', 'basicAudioRepeat8PlayButtonMobile',\r\n  'basicAudioRepeat9PlayButtonMobile', 'basicAudioRepeat10PlayButtonMobile', 'basicAudioRepeat11PlayButtonMobile', 'basicAudioRepeat12PlayButtonMobile',\r\n  'basicAudioRepeat13PlayButtonMobile', 'basicAudioRepeat14PlayButtonMobile', 'basicAudioRepeat15PlayButtonMobile', 'basicAudioRepeat16PlayButtonMobile',\r\n  'basicAudioRepeat17PlayButtonMobile', 'basicAudioRepeat18PlayButtonMobile', 'basicAudioRepeat19PlayButtonMobile', 'basicAudioRepeat20PlayButtonMobile',\r\n  'basicAudioRepeat21PlayButtonMobile', 'basicAudioRepeat22PlayButtonMobile', 'basicAudioRepeat23PlayButtonMobile', 'basicAudioRepeat24PlayButtonMobile',\r\n  'basicAudioRepeat25PlayButtonMobile', 'basicAudioRepeat26PlayButtonMobile', 'basicAudioRepeat27PlayButtonMobile', 'basicAudioRepeat28PlayButtonMobile',\r\n  'basicAudioRepeat29PlayButtonMobile', 'basicAudioRepeat30PlayButtonMobile', 'basicAudioRepeat31PlayButtonMobile', 'basicAudioRepeat32PlayButtonMobile',\r\n  'basicAudioRepeat33PlayButtonMobile', 'basicAudioRepeat34PlayButtonMobile', 'basicAudioRepeat35PlayButtonMobile', 'basicAudioRepeat36PlayButtonMobile',\r\n  'basicAudioRepeat37PlayButtonMobile', 'basicAudioRepeat38PlayButtonMobile', 'basicAudioRepeat39PlayButtonMobile', 'basicAudioRepeat40PlayButtonMobile',\r\n  'basicAudioRepeat41PlayButtonMobile', 'basicAudioRepeat42PlayButtonMobile', 'basicAudioRepeat43PlayButtonMobile', 'basicAudioRepeat44PlayButtonMobile',\r\n  'basicAudioRepeat45PlayButtonMobile', 'basicAudioRepeat46PlayButtonMobile', 'basicAudioRepeat47PlayButtonMobile', 'basicAudioRepeat48PlayButtonMobile',\r\n  'basicAudioRepeat49PlayButtonMobile', 'basicAudioRepeat50PlayButtonMobile', 'basicAudioRepeat51PlayButtonMobile', 'basicAudioRepeat52PlayButtonMobile']\r\n\r\nfunction checkIfButtonExist(button){\r\n  for (let i = 0; i < repeatButtons.length; i++) {\r\n    if(repeatButtons[i] === button){\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport function playerHowler(url, id){\r\n  var emptyAudioArray = ['http://api.talkfluentspanish.com/api/publicnull',\r\n    'http://api.talkfluentspanish.com/api/publicNONE',\r\n    'http://api.talkfluentspanish.com/api/publicnone',\r\n    'http://api.talkfluentspanish.com/api/public',\r\n    'https://api.talkfluentspanish.com/api/publicnull',\r\n    'https://api.talkfluentspanish.com/api/publicNONE',\r\n    'https://api.talkfluentspanish.com/api/publicnone',\r\n    'https://api.talkfluentspanish.com/api/public']\r\n  if(previousButton !== null){\r\n    changeToInitial(previousButton)\r\n  }\r\n  changeToSpinning(id)\r\n  if(parseInt(id) === 0){\r\n    if(previousButton !== null){\r\n      makeInActive(previousButton)\r\n      previousButton = null\r\n    }\r\n  }else if(parseInt(id) === 1){\r\n    if(previousButton !== null){\r\n      makeInActive(previousButton)\r\n      previousButton = null\r\n    }\r\n  }else{\r\n    if(previousButton === null){\r\n      makeActive(id)\r\n      previousButton = id\r\n      if(visualizerButton !== null){\r\n        makeInActive(visualizerButton)\r\n        visualizerButton = null\r\n      }\r\n    }else{\r\n      if(previousButton === id && checkIfButtonExist(previousButton) || previousButton === id){\r\n        //\r\n      }else{\r\n        makeActive(id)\r\n        makeInActive(previousButton)\r\n        previousButton = id\r\n        if(visualizerButton !== null){\r\n          makeInActive(visualizerButton)\r\n          visualizerButton = null\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if(emptyAudioArray.indexOf(url) === -1){\r\n    if(audio !== null){\r\n      audio.unload()\r\n    }\r\n    if(wavesurfer !== null){\r\n      // wavesurfer.pause()\r\n      wavesurfer.un('finish', null)\r\n      wavesurfer.setVolume(0)\r\n    }\r\n    if(id !== 1){\r\n      audio = new Howl({\r\n        src: url,\r\n        html5: true,\r\n        buffer: true,\r\n        onplay: function(){\r\n          changeToInitial(id)\r\n        },\r\n        onwait: id\r\n      })\r\n      // console.log(audio)\r\n      // audio.seek(0)\r\n      audio.play()\r\n      if(checkIfButtonExist(id)){\r\n        // audio.onend = function(){\r\n          // audio.play()\r\n        // }\r\n        audio.on('end', function(){\r\n          // playerHowler(url, id)\r\n          // audio.seek(0)\r\n          audio.play()\r\n        })\r\n      }\r\n    }else if(id === 1){\r\n      window.setTimeout(function(){\r\n        initVisualizer(url)\r\n      }, 1000)\r\n    }\r\n  }else{\r\n    if(previousButton !== null){\r\n      makeInActive(previousButton)\r\n    }else{\r\n      //\r\n    }\r\n    pause()\r\n    wavesurfer = null\r\n    previousButton = null\r\n    visualizerButton = null\r\n    var waveSurferFlag = document.getElementById('mp3_player')\r\n    waveSurferFlag.style.visibility = 'hidden'\r\n    alert('No Audio Found!')\r\n  }\r\n}\r\n\r\nfunction changeToSpinning(id){\r\n  if(testButtons.indexOf(id) >= 0){\r\n    $('#' + id).removeClass('fa fa-play')\r\n    $('#' + id).addClass('fas fa-circle-notch fa-spin')\r\n  }else if(repeatButtons.indexOf(id) === -1){\r\n    // implement remove class here using ios, if this is implemented it affects the wholle process\r\n    // implement only on the IPA\r\n    // findout why sub component not working with removeclass while wokring on javascript style\r\n    $('#' + id).removeClass('fa fa-volume-up')\r\n    $('#' + id).addClass('fas fa-circle-notch fa-spin')\r\n  }else{\r\n    $('#' + id).removeClass('fas fa-sync')\r\n    $('#' + id).addClass('fas fa-circle-notch fa-spin')\r\n  }\r\n}\r\n\r\nfunction changeToInitial(id){\r\n  if(testButtons.indexOf(id) >= 0){\r\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n    $('#' + id).addClass('fa fa-play')\r\n  }else if(repeatButtons.indexOf(id) === -1){\r\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n    $('#' + id).addClass('fa fa-volume-up')\r\n  }else{\r\n    $('#' + id).removeClass('fas fa-circle-notch fa-spin')\r\n    $('#' + id).addClass('fas fa-sync')\r\n  }\r\n}\r\n\r\nfunction initVisualizer(url){\r\n  var progressFlag = document.getElementById('spinnerFlag')\r\n  var waveSurferFlag = document.getElementById('mp3_player')\r\n  $('#visualizerAudioPlayButton').removeClass('fa fa-volume-up')\r\n  $('#visualizerAudioPlayButton').addClass('fas fa-circle-notch fa-spin')\r\n  // progressFlag.style.display = 'block'\r\n  waveSurferFlag.style.visibility = 'hidden'\r\n  var parameter = {\r\n    container: '#mp3_player',\r\n    waveColor: '#1caceb',\r\n    progressColor: '#1caceb',\r\n    hideScrollbar: true,\r\n    height: 128,\r\n    backend: 'MediaElement'\r\n  }\r\n  prevWaveUrl = url\r\n  if(wavesurfer === null){\r\n    wavesurfer = WaveSurfer.create(parameter)\r\n  }else{\r\n    wavesurfer.destroy()\r\n    wavesurfer = WaveSurfer.create(parameter)\r\n  }\r\n  wavesurfer.load(url)\r\n  wavesurfer.on('ready', function() {\r\n    window.setTimeout(function(){\r\n      $('#visualizerAudioPlayButton').removeClass('fas fa-circle-notch fa-spin')\r\n      $('#visualizerAudioPlayButton').addClass('fa fa-volume-up')\r\n      waveSurferFlag.style.visibility = 'visible'\r\n    }, 100)\r\n    window.setTimeout(function(){\r\n      // progressFlag.style.display = 'none'\r\n      wavesurfer.play(0)\r\n      wavesurfer.drawer.progress(0)\r\n    }, 100)\r\n  })\r\n}\r\n\r\nexport function visualizerPlay(id){\r\n  if(wavesurfer !== null){\r\n    wavesurfer.setVolume(1)\r\n    wavesurfer.play(0)\r\n    wavesurfer.drawer.progress(0)\r\n    let iDevices = [\r\n      'iPad Simulator',\r\n      'iPhone Simulator',\r\n      'iPod Simulator',\r\n      'iPad',\r\n      'iPhone',\r\n      'iPod'\r\n    ]\r\n    let deviceFlag = false\r\n    if (navigator.platform) {\r\n      while (iDevices.length) {\r\n        if (navigator.platform === iDevices.pop()){\r\n          // console.log('ios')\r\n          deviceFlag = true\r\n        }\r\n      }\r\n    }\r\n    if(deviceFlag === true){\r\n      changeToSpinning(id)\r\n      var waveSurferFlag = document.getElementById('mp3_player')\r\n      waveSurferFlag.style.visibility = 'hidden'\r\n      wavesurfer.load(prevWaveUrl)\r\n      wavesurfer.on('ready', function() {\r\n        window.setTimeout(function(){\r\n          // progressFlag.style.display = 'none'\r\n          changeToInitial(id)\r\n          waveSurferFlag.style.visibility = 'visible'\r\n          wavesurfer.play(0)\r\n          wavesurfer.drawer.progress(0)\r\n        }, 100)\r\n      })\r\n    }else{\r\n      if(id === 'visualizerRepeatAudioPlayButton'){\r\n        makeActive('visualizerRepeatAudioPlayButton')\r\n        makeInActive('visualizerAudioPlayButton')\r\n        visualizerButton = 'visualizerRepeatAudioPlayButton'\r\n        wavesurfer.on('finish', function(){\r\n          wavesurfer.play(0)\r\n          wavesurfer.drawer.progress(0)\r\n        })\r\n      }else{\r\n        makeActive('visualizerAudioPlayButton')\r\n        makeInActive('visualizerRepeatAudioPlayButton')\r\n        visualizerButton = 'visualizerAudioPlayButton'\r\n        // wavesurfer.backend.un('finish', null)\r\n        wavesurfer.un('finish', null)\r\n      }\r\n    }\r\n    // wavesurfer.backend.on('audioprocess', function (time){\r\n    //    wavesurfer.drawer.progress(wavesurfer.backend.getPlayedPercents())\r\n    //    wavesurfer.fireEvent('audioprocess', time)\r\n    // })\r\n  }\r\n  if(previousButton !== null){\r\n    makeInActive(previousButton)\r\n    previousButton = id\r\n  }\r\n  if(audio !== null){\r\n    audio.unload()\r\n  }\r\n}\r\n\r\nexport function pause(){\r\n  if(audio !== null){\r\n    audio.pause()\r\n    makeInActive(previousButton)\r\n  }\r\n  if(wavesurfer !== null){\r\n    wavesurfer.pause()\r\n    makeInActive(previousButton)\r\n  }\r\n  previousButton = null\r\n}\r\n\r\nexport function pauseHowler(urlP, id){\r\n  if(previousButton === null){\r\n    previousButton = id\r\n    makeActive(previousButton)\r\n  }else if(previousButton !== id){\r\n    makeInActive(previousButton)\r\n    makeActive(id)\r\n    previousButton = id\r\n  }\r\n  if(audio !== null && url === urlP){\r\n    audio.pause()\r\n  }else if(audio !== null && url !== urlP && (pauseButton.indexOf(id) > -1)){\r\n    audio.pause()\r\n    audio.unload()\r\n    audio = null\r\n    makeInActive(previousButton)\r\n  }\r\n}\r\n\r\nexport function playHowler(urlP, id){\r\n  if(audio === null){\r\n    url = urlP\r\n    playerHowler(urlP, id)\r\n  }else{\r\n    if(urlP === url){\r\n      makeInActive(previousButton)\r\n      makeActive(id)\r\n      if(pauseButton.indexOf(previousButton) > -1){\r\n        audio.play()\r\n        if(repeatButtonsTest.indexOf(id) > -1){\r\n          audio.on('end', function(){\r\n            // audio.seek(0)\r\n            audio.play()\r\n          })\r\n        }else{\r\n          audio.off('end')\r\n        }\r\n      }else if(testButtons.indexOf(previousButton) > -1 && repeatButtonsTest.indexOf(id) > -1 && audio.playing() === false){\r\n        audio.seek(0)\r\n        audio.play()\r\n        audio.on('end', function(){\r\n          // audio.seek(0)\r\n          audio.play()\r\n        })\r\n      }else if(testButtons.indexOf(previousButton) > -1 && testButtons.indexOf(id) > -1 && audio.playing() === false){\r\n        audio.seek(0)\r\n        audio.play()\r\n      }else{\r\n        if(repeatButtonsTest.indexOf(id) > -1){\r\n          audio.on('end', function(){\r\n            // audio.seek(0)\r\n            audio.play()\r\n          })\r\n        }else{\r\n          audio.off('end')\r\n        }\r\n      }\r\n      previousButton = id\r\n    }else{\r\n      url = urlP\r\n      audio.pause()\r\n      audio.unload()\r\n      audio = null\r\n      makeInActive(previousButton)\r\n      playerHowler(urlP, id)\r\n    }\r\n  }\r\n}\r\n\r\nfunction makeActive(id){\r\n  var container = document.getElementById(id)\r\n  // how to detect mobile screen on javascript?\r\n  if(id === 'lessonAudioPlayButton' || id === 'lessonAudioPlayButtonRepeat' || id === 'grammarAudioPlayButton' || id === 'grammarAudioPlayButtonRepeat' || pronounciationAudio.indexOf(id) > -1){\r\n    container.style.background = '#ccc'\r\n  }else{\r\n    container.style.background = '#1caceb'\r\n  }\r\n  container.style.color = '#fff'\r\n}\r\n\r\nfunction makeInActive(id){\r\n  var container = document.getElementById(id)\r\n  if(container !== null){\r\n    container.style.color = '#1caceb'\r\n    if(id === 'lessonAudioPlayButton' || id === 'lessonAudioPlayButtonRepeat' || id === 'grammarAudioPlayButton' || id === 'grammarAudioPlayButtonRepeat' || pronounciationAudio.indexOf(id) > -1){\r\n      container.style.background = '#fff'\r\n    }else{\r\n      container.style.background = 'inherit'\r\n    }\r\n  }\r\n}\r\n\r\nexport function hideModal(modal){\r\n  $(modal).modal('hide')\r\n}\r\n\r\nexport function showModal(modal){\r\n  $(modal).modal({\r\n    backdrop: 'static',\r\n    keyboard: true,\r\n    show: true\r\n  })\r\n}\r\n\r\nexport function hideDashboardModal(){\r\n  $('#dashboardModal').modal('hide')\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/audio/index.js","<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-10 mx-auto\">\r\n      <ul class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item active\" v-on:click=\"redirectDashboard('/dashboard')\"><a href=\"#\" onclick=\"return false;\">Dashboard</a></li>\r\n        <li class=\"breadcrumb-item active\">Already Known</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"col-lg-10 mx-auto\">\r\n      <ul class=\"pagination pagination-lg pagination-header\">\r\n        <li class=\"page-item page-link page-link2\" v-bind:class=\"{'word-active':isActive.word === true}\" v-on:click=\"redirect('/already_known/', 'word')\">Words</li>\r\n        <li class=\"page-item page-link page-link2\" v-bind:class=\"{'sentence-active':isActive.sentence === true}\" v-on:click=\"redirect('/already_known/', 'sentence')\">Sentences</li>\r\n        <li class=\"page-item page-link page-link2 link3\" v-bind:class=\"{'lesson-active':isActive.lesson === true}\" v-on:click=\"redirect('/already_known/', 'lesson')\">Lessons</li>\r\n         <li class=\"page-item disabled page-item-block\">\r\n        </li>\r\n<!--         <li class=\"guide-video-history\">\r\n          <div class=\"wistia_embed guide-video popover=true wistia_async_u8p9wq6mq8\" onclick=\"pause()\"></div>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n    <div v-bind:class=\"{'word-result-active': isActive.word === true}\" class=\"col-lg-10 mx-auto word-result\">\r\n      <span class=\"pagination-holder pagination-mobile-hide\">\r\n        <ul class=\"pagination justify-content-center word-pagination \">\r\n          <li v-bind:class=\"{'disabled': wordPrevFlag === false}\" class=\"page-item\" v-if=\"active !== null\">\r\n            <span class=\"page-link\" v-on:click=\"wordPrev()\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"active === null\">\r\n            <span class=\"page-link\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item page-link\" v-bind:class=\"{'active': (i + 64) === active}\" v-for=\"i in 26\" v-html=\"'&#' + (i + 64) + ';'\" v-on:click=\"sortWord(i), pager(i + 64)\"></li>\r\n          <li v-bind:class=\"{'disabled': wordNextFlag === false}\" class=\"page-item\" v-if=\"active !== null\">\r\n            <span class=\"page-link\" v-on:click=\"wordNext()\">Next</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"active === null\">\r\n            <span class=\"page-link\">Next</span>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n      <span class=\"pagination-holder pagination-mobile-show\">\r\n        <ul class=\"pagination justify-content-center word-pagination\">\r\n          <li v-bind:class=\"{'disabled': wordPrevFlag === false}\" class=\"page-item\" v-if=\"active !== null\">\r\n            <span class=\"page-link\" v-on:click=\"wordMobilePrev()\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"active === null\">\r\n            <span class=\"page-link\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item page-link\" v-bind:class=\"{'active': (i + 64 + wordLimitAdder) === active}\" v-for=\"i in wordLimit\" v-html=\"'&#' + (i + 64 + wordLimitAdder) + ';'\" v-on:click=\"sortWord(i + wordLimitAdder), pager(i + 64 + wordLimitAdder)\"></li>\r\n          <li v-bind:class=\"{'disabled': wordNextFlag === false}\" class=\"page-item\" v-if=\"active !== null\">\r\n            <span class=\"page-link\" v-on:click=\"wordMobileNext()\">Next</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"active === null\">\r\n            <span class=\"page-link\">Next</span>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n      <table class=\"table table-hover borderless\"  v-if=\"word.length >= 1\">\r\n        <thead>\r\n          <tr class=\"thead\">\r\n            <td>WORD</td>\r\n            <td>TRANSLATION</td>\r\n            <!-- <td>SYLLABLE</td> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"table-hover\">\r\n          <tr v-for=\"item, index in word\">\r\n            <td>\r\n              <i class=\"fa fa-volume-up regular-volume-up\" @click=\"audioHandler.playerHowler(config.BACKEND_URL + item.audio, 'audioWord' + index)\" v-bind:id=\"'audioWord' + index\"></i>\r\n              <label v-html=\"item.word\" style=\"text-transform: capitalize;\"></label>\r\n            </td>\r\n            <td>\r\n              <label v-html=\"item.translation\" style=\"padding-top: 10px;text-transform: capitalize;\"></label>\r\n            </td>\r\n<!--             <td>\r\n              <i class=\"fa fa-volume-up regular-volume-up\" v-bind:onclick=\"'playerHowler(\\'' + config.BACKEND_URL + item.syllabus_audio + '\\',\\'syllabusAudioWord' + index + '\\')'\" v-bind:id=\"'syllabusAudioWord' + index\"></i>\r\n              <label v-html=\"item.syllabus\"></label>\r\n            </td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <span v-else class=\"error-container text-danger\">No Word(s) Learned or Completed!</span>\r\n    </div>\r\n    <div v-bind:class=\"{'sentence-result-active': isActive.sentence === true}\" class=\"col-lg-10 mx-auto  sentence-result\">\r\n        <span class=\"pagination-holder pagination-mobile-hide\">\r\n        <ul class=\"pagination justify-content-center word-pagination \">\r\n          <li v-bind:class=\"{'disabled': sentencePrevFlag === false}\" class=\"page-item\" v-if=\"activeSentence !== null\">\r\n            <span class=\"page-link\" v-on:click=\"sentencePrev()\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"activeSentence === null\">\r\n            <span class=\"page-link\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item page-link\" v-bind:class=\"{'active': (i + 64) === activeSentence}\" v-for=\"i in 26\" v-html=\"'&#' + (i + 64) + ';'\" v-on:click=\"sortSentence(i), pagerSentence(i + 64)\"></li>\r\n          <li v-bind:class=\"{'disabled': sentenceNextFlag === false}\" class=\"page-item\" v-if=\"activeSentence !== null\">\r\n            <span class=\"page-link\" v-on:click=\"sentenceNext()\">Next</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"activeSentence === null\">\r\n            <span class=\"page-link\">Next</span>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n      <span class=\"pagination-holder pagination-mobile-show\">\r\n        <ul class=\"pagination justify-content-center word-pagination\">\r\n          <li v-bind:class=\"{'disabled': sentencePrevFlag === false}\" class=\"page-item\" v-if=\"activeSentence !== null\">\r\n            <span class=\"page-link\" v-on:click=\"sentenceMobilePrev()\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"activeSentence === null\">\r\n            <span class=\"page-link\">Previous</span>\r\n          </li>\r\n          <li class=\"page-item page-link\" v-bind:class=\"{'active': (i + 64 + sentenceLimitAdder) === activeSentence}\" v-for=\"i in sentenceLimit\" v-html=\"'&#' + (i + 64 + sentenceLimitAdder) + ';'\" v-on:click=\"sortSentence(i + sentenceLimitAdder), pagerSentence(i + 64 + sentenceLimitAdder)\"></li>\r\n          <li v-bind:class=\"{'disabled': sentenceNextFlag === false}\" class=\"page-item\" v-if=\"activeSentence !== null\">\r\n            <span class=\"page-link\" v-on:click=\"sentenceMobileNext()\">Next</span>\r\n          </li>\r\n          <li class=\"page-item disabled\" v-if=\"activeSentence === null\">\r\n            <span class=\"page-link\">Next</span>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n      <table class=\"table table-hover borderless\" v-if=\"sentence.length >= 1\">\r\n        <thead>\r\n          <tr class=\"thead\">\r\n            <td>SENTENCE</td>\r\n            <td>TRANSLATION</td>\r\n           <!--  <td>SYLLABLE</td> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"item, index in sentence\" >\r\n            <td>\r\n              <i class=\"fa fa-volume-up regular-volume-up\" @click=\"audioHandler.playerHowler(config.BACKEND_URL + item.audio, 'audioSentence' + index)\" v-bind:id=\"'audioSentence' + index\"></i>\r\n              <label v-html=\"item.original\"></label>\r\n            </td>\r\n            <td><label v-html=\"item.translation\" style=\"padding-top: 10px;\"></label></td>\r\n<!--             <td>\r\n              <i class=\"fa fa-volume-up regular-volume-up\" v-bind:onclick=\"'playerHowler(\\'' + config.BACKEND_URL + item.syllabus_audio + '\\',\\'syllabusAudioSentence' + index + '\\')'\" v-bind:id=\"'syllabusAudioSentence' + index\"></i>\r\n              <label v-html=\"item.syllabus\"></label>\r\n            </td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <span v-else class=\"error-container text-danger\">No Sentence(s) Learned or Completed!</span>\r\n    </div>\r\n    <div v-bind:class=\"{'lesson-result-active': isActive.lesson === true}\" class=\"col-lg-10 mx-auto lesson-result-history\">\r\n      <span class=\"tick-info pull-right\">\r\n        <label><i class=\"fas fa-check\"></i>Tick when you have put in your Calendar as a reminder to practice lesson with native speaker.</label>\r\n      </span>\r\n      <span v-if=\"lesson.length > 0\">\r\n        <span v-for=\"item, index in lesson\" class=\"lesson-holder-history\">\r\n         <div class=\"lesson-item-history\" v-bind:id=\"'lesson-container-' + index\"> \r\n          <i class=\"fa fa-volume-up regular-volume-up\" @click=\"audioHandler.playerHowler(config.BACKEND_URL + item.lesson[0].lesson_audio, 'audioLessonKnown' + index )\" v-bind:id=\"'audioLessonKnown' + index\" style=\"margin-top:2px; margin-left:2px;\"></i>\r\n          <label style=\"padding-top: 5px; padding-left: 10px;\" class=\"title\">{{index + 1}}. \r\n            <label v-html=\"item.lesson[0].title\"></label>\r\n          </label>\r\n          <i class=\"fa fa-check test-check-history pull-right\" v-on:click=\"toggle(index)\" v-if=\"item.lesson_tick_flag === true\"></i>\r\n          <!-- <i class=\"fa fa-check test-check-number-history pull-right\" v-on:click=\"toggle(index)\" v-else></i> -->\r\n          <!-- <label  class=\"test-check-number-history pull-right\" v-on:click=\"toggle(index)\" v-else>G</label> -->\r\n<!--           <i class=\"fas fa-toggle-on pull-right tick-toggle\" v-on:click=\"toggle(index)\" v-if=\"item.lesson_tick_flag === true\" data-hover=\"tooltip\" data-placement=\"bottom\" title=\"Google Calendar\"></i>\r\n          <i class=\"fas fa-toggle-off pull-right tick-toggle text-danger\" v-on:click=\"toggle(index)\" v-else data-hover=\"tooltip\" data-placement=\"bottom\" title=\"Google Calendar\"></i> -->\r\n          <i class=\"fa fa-chevron-down pull-right\" style=\"padding-top:15px; padding-right: 10px;\" v-on:click=\"retrieveContent(item.lesson[0].id, index)\"></i>\r\n         </div>\r\n          <div class=\"lessons-content\" v-bind:id=\"'lesson-content-' + index\"  v-if=\"contents.length > 0\">\r\n            <span class=\"content-holder\" v-for=\"itemContent, indexContent in contents\">\r\n              <span class=\"original\">\r\n                <label>{{indexContent + 1}}. </label>\r\n                <label v-html=\"itemContent.original\"></label>\r\n              </span>\r\n              <span class=\"translation\">\r\n                <label>{{indexContent + 1}}. </label>\r\n                <label v-html=\"itemContent.translation\"></label>\r\n              </span>  \r\n            </span>\r\n          </div>\r\n        </span>\r\n      </span>\r\n      <span v-else class=\"error-container text-danger\">No Lesson(s) Learned or Completed!</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style>\r\n\r\n  .word-active, .sentence-active, .lesson-active, .page-link:hover{\r\n    background: #1caceb !important;\r\n    color: white !important;\r\n  }\r\n\r\n  .pagination-header{\r\n    border:none !important;\r\n    background: #eee;\r\n    border-radius: 0px !important;\r\n\r\n  }\r\n  .pagination-holder{\r\n    width: 100%;\r\n    float: left;\r\n  }\r\n\r\n  .page-link:hover{\r\n    cursor: pointer;\r\n  }\r\n  .page-link2{\r\n    width: 15% !important;\r\n    text-align: center !important;\r\n    float: left;\r\n  }\r\n  .page-item-block{\r\n    width: 45% !important;\r\n    float: left;\r\n    border-top-right-radius: 0px !important;\r\n    border-bottom-right-radius: 0px !important;\r\n  }\r\n  .disabled, .page-link2{\r\n    border:none !important;\r\n    background: #eee;\r\n  }\r\n  .guide-video-history{\r\n    float: left;\r\n    width: 10%;\r\n  }\r\n  .guide-video-history .guide-video{\r\n    height: 50px;\r\n    padding-top: 2px;\r\n  }\r\n\r\n\r\n  /*\r\n\r\n      Word Result\r\n  */\r\n  .word-result, .sentence-result, .lesson-result-history{\r\n    display: none;\r\n    float: left;\r\n    min-height: 200px;\r\n    overflow-y: hidden;\r\n  }\r\n  .word-result-active, .sentence-result-active, .lesson-result-active{\r\n    display: block;\r\n  }\r\n  .lesson-item-history{\r\n    height: 50px;\r\n    border-bottom: solid 1px #eee;\r\n    margin-top: 1px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  .lesson-item-history i:hover{\r\n    cursor: pointer;\r\n  }\r\n  .lessons-content{\r\n    width: 100%;\r\n    min-height: 50px !important;\r\n    overflow: hidden;\r\n    display: none;\r\n    border-bottom: solid 1px #eee;\r\n    border-right: solid 1px #eee;\r\n    border-left: solid 1px #eee;\r\n    -webkit-transition: width 2s; /* Safari */\r\n    transition: width 2s;\r\n  }\r\n  .lesson-holder-history{\r\n    float: left;\r\n    height: auto;\r\n    width: 100%;\r\n  }\r\n  .content-holder{\r\n    min-height: 50px;\r\n    overflow: hidden;\r\n  }\r\n  .content-holder .original{\r\n    width: 100%;\r\n    float: left;\r\n    font-size: 18px;\r\n  }\r\n  .content-holder .translation{\r\n    width: 90%;\r\n    margin-left: 1%;\r\n    float: left;\r\n    color: #888;\r\n    font-size: 18px;\r\n  }\r\n  .content-holder .original label{\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n  }\r\n  .content-holder .translation label{\r\n    padding-top: 5px;\r\n  }\r\n\r\n  .error-container{\r\n    width: 100% !important;\r\n    float: left;\r\n    text-align: center;\r\n  }\r\n  .table-hover:hover{\r\n    cursor: pointer !important;\r\n  }\r\n  .table{\r\n    font-size: 16px !important;\r\n  }\r\n  .fa-chevron-down{\r\n    color: #1caceb;\r\n  }\r\n\r\n  .tick-info{\r\n    width: 100%;\r\n    float: left;\r\n    text-align: right;\r\n  }\r\n\r\n  .tick-info i{\r\n    width: 24px;\r\n    height:24px;\r\n    border-radius: 12px;\r\n    color: #fff;\r\n    text-align: center !important;\r\n    margin-right: 5px;\r\n    margin-left: 5px;\r\n    background: #1caceb;\r\n    padding-top: 5px;\r\n  }\r\n  .tick-info label{\r\n    padding-right: 10px;\r\n  }\r\n\r\n  .tick-toggle{\r\n    font-size: 40px;\r\n    padding-top: 5px;\r\n    padding-bottom: 5px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n    color: #1caceb\r\n  }\r\n\r\n  .test-check-history{\r\n    width: 40px;\r\n    height:40px;\r\n    border-radius: 20px;\r\n    color: #fff;\r\n    text-align: center !important;\r\n    margin-right: 5px;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n    background: #1caceb;\r\n    padding-top: 10px;\r\n  }\r\n  .test-check-number-history{\r\n    width: 40px;\r\n    height:40px;\r\n    border-radius: 20px;\r\n    color: #fff;\r\n    text-align: center !important;\r\n    margin-right: 5px;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n    background: #aaa;\r\n    padding-top: 10px;\r\n  }\r\n  .test-check-number-history:hover{\r\n    cursor: pointer;\r\n  }\r\n  .test-check-history{\r\n    background: #1caceb;\r\n    color: #fff;\r\n  }\r\n\r\n  .word-pagination .active{\r\n    background: #1caceb;\r\n    color: #fff;\r\n  }\r\n  .pagination-mobile-show{\r\n    display: none;\r\n  }\r\n  .pagination-mobile-hide{\r\n    display: block;\r\n  }\r\n  thead{\r\n    border-bottom: 2px solid #ccc !important;\r\n  }\r\n  table.borderless td,table.borderless th{\r\n     border: none !important;\r\n  }\r\n\r\n  .thead{ \r\n    font-weight: 600 !important;\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 991px){\r\n    .pagination-mobile-hide{\r\n      display: none;\r\n    }\r\n    .pagination-mobile-show{\r\n      display: block;\r\n    }\r\n  }\r\n  @media screen and (min-width: 551px) and (max-width: 991px) {\r\n    .guide-video-history{\r\n      width: 10% !important;\r\n    }\r\n    .guide-video-history .guide-video{\r\n      padding-top: 0px;\r\n    }\r\n    .pagination-header .page-link2{\r\n      width: 33% !important;\r\n      text-align: center !important;\r\n      font-size: 14px !important;\r\n      padding-left: 0px !important;\r\n      padding-right: 0px !important;\r\n    }\r\n\r\n    .pagination-header .link3{\r\n      width: 34% !important;\r\n    }\r\n    .page-item-block{\r\n      width: 0% !important;\r\n      float: left;\r\n    }\r\n    .tick-info{\r\n      text-align: center;\r\n    }\r\n    .test-check-number-history{\r\n      font-size: 18px !important;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 550px) {\r\n    .guide-video-history{\r\n      width: 25% !important;\r\n    }\r\n    .guide-video-history .guide-video{\r\n      padding-top: 0px;\r\n    }\r\n    .pagination-header .page-link2{\r\n      width: 33% !important;\r\n      text-align: center !important;\r\n      font-size: 14px !important;\r\n      padding-left: 0px !important;\r\n      padding-right: 0px !important;\r\n    }\r\n    .pagination-header .link3{\r\n      width: 34% !important;\r\n    }\r\n    .page-item-block{\r\n      width: 0% !important;\r\n      float: left;\r\n    }\r\n    .lesson-item-history .title{\r\n      font-size: 12px;\r\n    }\r\n  }\r\n</style>\r\n<script>\r\nimport ROUTER from '../../router'\r\nimport AUTH from '../../services/auth'\r\nimport CONFIG from '../../config.js'\r\nimport {Howl, Howler} from 'howler'\r\nimport * as AudioHandler from '../../components/audio'\r\nexport default {\r\n  mounted(){\r\n    this.view(this.$route.params.parameter)\r\n    this.initWistia()\r\n  },\r\n  created(){\r\n  },\r\n  data(){\r\n    return{\r\n      user: AUTH.user,\r\n      tokenData: AUTH.tokenData,\r\n      audio: null,\r\n      config: CONFIG,\r\n      word: [],\r\n      sentence: [],\r\n      lesson: [],\r\n      contents: [],\r\n      prevLessonIndex: null,\r\n      isActive: {\r\n        word: true,\r\n        sentence: false,\r\n        lesson: false\r\n      },\r\n      wordAudio: null,\r\n      parameter: this.$route.params.parameter,\r\n      tickToggle: false,\r\n      wistia: {\r\n        url: 'http://fast.wistia.com/assets/external/E-v1.js',\r\n        charset: 'ISO-8859-1'\r\n      },\r\n      active: null,\r\n      wordPrevFlag: false,\r\n      wordNextFlag: true,\r\n      wordLimit: 5,\r\n      wordLimitAdder: 0,\r\n      activeSentence: null,\r\n      sentencePrevFlag: false,\r\n      sentenceNextFlag: true,\r\n      sentenceLimit: 5,\r\n      sentenceLimitAdder: 0,\r\n      audioHandler: AudioHandler\r\n    }\r\n  },\r\n  methods: {\r\n    initWistia(){\r\n      let script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = this.wistia.url\r\n      script.charset = this.wistia.charset\r\n      document.body.appendChild(script)\r\n    },\r\n    redirectDashboard(parameter){\r\n      ROUTER.push(parameter)\r\n      this.audioHandler.pause()\r\n    },\r\n    redirect(parameter, method){\r\n      this.active = null\r\n      this.activeSentence = null\r\n      ROUTER.push(parameter + method)\r\n      this.view(method)\r\n    },\r\n    view(method){\r\n      if(this.audio !== null){\r\n        this.audio.pause()\r\n      }\r\n      if(method === 'word'){\r\n        this.isActive.word = true\r\n        this.isActive.sentence = false\r\n        this.isActive.lesson = false\r\n      }else if(method === 'sentence'){\r\n        this.isActive.word = false\r\n        this.isActive.sentence = true\r\n        this.isActive.lesson = false\r\n      }else{\r\n        this.isActive.word = false\r\n        this.isActive.sentence = false\r\n        this.isActive.lesson = true\r\n      }\r\n      if(this.isActive.word === true){\r\n        this.retrieveWord('')\r\n      }else if(this.isActive.sentence === true){\r\n        this.retrieveSentence('')\r\n      }else{\r\n        this.retrieveLesson()\r\n      }\r\n    },\r\n    sortWord(i){\r\n      let char = String.fromCharCode(i + 64)\r\n      this.retrieveWord(char)\r\n    },\r\n    pager(index){\r\n      this.active = index\r\n      if(this.active === 90){\r\n        this.wordNextFlag = false\r\n        this.wordPrevFlag = true\r\n      }else if(this.active === 65){\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = false\r\n      }else{\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = true\r\n      }\r\n    },\r\n    wordNext(){\r\n      if(this.active < 90){\r\n        this.active++\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = true\r\n        this.retrieveWord(String.fromCharCode(this.active))\r\n      }\r\n      if(this.active === 90){\r\n        this.wordNextFlag = false\r\n        this.wordPrevFlag = true\r\n      }\r\n    },\r\n    wordPrev(){\r\n      if(this.active > 65){\r\n        this.active--\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = true\r\n        this.retrieveWord(String.fromCharCode(this.active))\r\n      }\r\n      if(this.active === 65){\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = false\r\n      }\r\n    },\r\n    wordMobileNext(){\r\n      if(this.active < 90){\r\n        this.active++\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = true\r\n        this.retrieveWord(String.fromCharCode(this.active))\r\n        if(this.wordLimitAdder < 21){\r\n          this.wordLimitAdder++\r\n        }\r\n      }\r\n      if(this.active === 90){\r\n        this.wordNextFlag = false\r\n        this.wordPrevFlag = true\r\n      }\r\n    },\r\n    wordMobilePrev(){\r\n      if(this.active > 65){\r\n        this.active--\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = true\r\n        this.retrieveWord(String.fromCharCode(this.active))\r\n        if(this.wordLimitAdder >= 1){\r\n          this.wordLimitAdder--\r\n        }\r\n      }\r\n      if(this.active === 65){\r\n        this.wordNextFlag = true\r\n        this.wordPrevFlag = false\r\n      }\r\n    },\r\n    retrieveWord(char){\r\n      let parameter = {\r\n        'account_id': this.user.userID,\r\n        'char': char + '%'\r\n      }\r\n      $('#loading').css({'display': 'block'})\r\n      this.APIRequest('save/retrieve_history', parameter).then(response => {\r\n        $('#loading').css({'display': 'none'})\r\n        this.word = response.data\r\n      })\r\n    },\r\n    sortSentence(i){\r\n      let char = String.fromCharCode(i + 64)\r\n      this.retrieveSentence(char)\r\n    },\r\n    pagerSentence(index){\r\n      this.activeSentence = index\r\n      if(this.activeSentence === 90){\r\n        this.sentenceNextFlag = false\r\n        this.sentencePrevFlag = true\r\n      }else if(this.activeSentence === 65){\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = false\r\n      }else{\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = true\r\n      }\r\n    },\r\n    sentenceNext(){\r\n      if(this.activeSentence < 90){\r\n        this.activeSentence++\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = true\r\n        this.retrieveSentence(String.fromCharCode(this.activeSentence))\r\n      }\r\n      if(this.activeSentence === 90){\r\n        this.sentenceNextFlag = false\r\n        this.sentencePrevFlag = true\r\n      }\r\n    },\r\n    sentencePrev(){\r\n      if(this.activeSentence > 65){\r\n        this.activeSentence--\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = true\r\n        this.retrieveSentence(String.fromCharCode(this.activeSentence))\r\n      }\r\n      if(this.activeSentence === 65){\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = false\r\n      }\r\n    },\r\n    sentenceMobileNext(){\r\n      if(this.activeSentence < 90){\r\n        this.activeSentence++\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = true\r\n        this.retrieveSentence(String.fromCharCode(this.activeSentence))\r\n        if(this.sentenceLimitAdder < 21){\r\n          this.sentenceLimitAdder++\r\n        }\r\n      }\r\n      if(this.activeSentence === 90){\r\n        this.sentenceNextFlag = false\r\n        this.sentencePrevFlag = true\r\n      }\r\n    },\r\n    sentenceMobilePrev(){\r\n      if(this.activeSentence > 65){\r\n        this.activeSentence--\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = true\r\n        this.retrieveSentence(String.fromCharCode(this.activeSentence))\r\n        if(this.sentenceLimitAdder >= 1){\r\n          this.sentenceLimitAdder--\r\n        }\r\n      }\r\n      if(this.activeSentence === 65){\r\n        this.sentenceNextFlag = true\r\n        this.sentencePrevFlag = false\r\n      }\r\n    },\r\n    retrieveSentence(char){\r\n      let parameter = {\r\n        'account_id': this.user.userID,\r\n        char: char + '%'\r\n      }\r\n      $('#loading').css({'display': 'block'})\r\n      this.APIRequest('save_content/retrieve_history', parameter).then(response => {\r\n        $('#loading').css({'display': 'none'})\r\n        this.sentence = response.data\r\n      })\r\n    },\r\n    retrieveLesson(){\r\n      let parameter = {\r\n        'account_id': this.user.userID\r\n      }\r\n      $('#loading').css({'display': 'block'})\r\n      this.APIRequest('lesson/retrieve_history', parameter).then(response => {\r\n        $('#loading').css({'display': 'none'})\r\n        if(response.data.length > 0){\r\n          this.lesson = response.data\r\n        }else{\r\n          this.lesson = []\r\n        }\r\n      })\r\n    },\r\n    retrieveContent(id, index){\r\n      this.contents = this.lesson[index].contents\r\n      setTimeout(() => {\r\n        this.makeActive(index)\r\n      }, 5)\r\n      // let parameter = {\r\n      //   'condition': [{\r\n      //     'value': id,\r\n      //     'column': 'lesson_id',\r\n      //     'clause': '='\r\n      //   }]\r\n      // }\r\n      // this.APIRequest('content/retrieve', parameter).then(response => {\r\n      //   if(response.data !== null){\r\n      //     this.contents = response.data\r\n      //   }else{\r\n      //     this.contents = []\r\n      //   }\r\n      // }).done(() => {\r\n      //   setTimeout(() => {\r\n      //     this.makeActive(index)\r\n      //   }, 500)\r\n      // })\r\n    },\r\n    makeActive(index){\r\n      if(this.prevLessonIndex === null){\r\n        this.prevLessonIndex = index\r\n        $('#lesson-container-' + index).css({'background': '#eee', 'color': '#000'})\r\n        // $('#lesson-content-' + index).css({'display': 'block'})\r\n        $('#lesson-content-' + index).slideDown()\r\n      }else{\r\n        if(this.prevLessonIndex === index){\r\n          $('#lesson-content-' + index).slideUp()\r\n          // $('#lesson-content-' + index).css({'display': 'none'})\r\n          $('#lesson-container-' + index).css({'background': '#fff', 'color': '#000'})\r\n          this.prevLessonIndex = null\r\n        }else{\r\n          $('#lesson-content-' + this.prevLessonIndex).slideUp()\r\n          // $('#lesson-content-' + this.prevLessonIndex).css({'display': 'none'})\r\n          $('#lesson-container-' + this.prevLessonIndex).css({'background': '#fff', 'color': '#000'})\r\n          // $('#lesson-content-' + index).css({'display': 'block'})\r\n          $('#lesson-content-' + index).slideDown()\r\n          $('#lesson-container-' + index).css({'background': '#eee', 'color': '#000'})\r\n          this.prevLessonIndex = index\r\n        }\r\n      }\r\n    },\r\n    toggle(index){\r\n      let parameter = {\r\n        'account_id': this.lesson[index].account_id,\r\n        'lesson_id': this.lesson[index].lesson_id,\r\n        'flag': !this.lesson[index].lesson_tick_flag\r\n      }\r\n      this.APIRequest('lesson_ticks/update', parameter).then(response => {\r\n        this.retrieveLesson()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// History.vue?073b9429","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".lesson-active,.page-link:hover,.sentence-active,.word-active{background:#1caceb!important;color:#fff!important}.pagination-header{border:none!important;background:#eee;border-radius:0!important}.pagination-holder{width:100%;float:left}.page-link:hover{cursor:pointer}.page-link2{width:15%!important;text-align:center!important;float:left}.page-item-block{width:45%!important;float:left;border-top-right-radius:0!important;border-bottom-right-radius:0!important}.disabled,.page-link2{border:none!important;background:#eee}.guide-video-history{float:left;width:10%}.guide-video-history .guide-video{height:50px;padding-top:2px}.lesson-result-history,.sentence-result,.word-result{display:none;float:left;min-height:200px;overflow-y:hidden}.lesson-result-active,.sentence-result-active,.word-result-active{display:block}.lesson-item-history{height:50px;border-bottom:1px solid #eee;margin-top:1px;font-size:18px}.lesson-item-history i:hover{cursor:pointer}.lessons-content{width:100%;min-height:50px!important;overflow:hidden;display:none;border-bottom:1px solid #eee;border-right:1px solid #eee;border-left:1px solid #eee;transition:width 2s}.lesson-holder-history{float:left;height:auto;width:100%}.content-holder{min-height:50px;overflow:hidden}.content-holder .original{width:100%;float:left;font-size:18px}.content-holder .translation{width:90%;margin-left:1%;float:left;color:#888;font-size:18px}.content-holder .original label{padding-top:5px;padding-bottom:5px}.content-holder .translation label{padding-top:5px}.error-container{width:100%!important;float:left;text-align:center}.table-hover:hover{cursor:pointer!important}.table{font-size:16px!important}.fa-chevron-down{color:#1caceb}.tick-info{width:100%;float:left;text-align:right}.tick-info i{width:24px;height:24px;border-radius:12px;color:#fff;text-align:center!important;margin-right:5px;margin-left:5px;background:#1caceb;padding-top:5px}.tick-info label{padding-right:10px}.tick-toggle{font-size:40px;padding:5px;color:#1caceb}.test-check-history,.test-check-number-history{width:40px;height:40px;border-radius:20px;text-align:center!important;margin-right:5px;margin-left:5px;margin-top:5px;padding-top:10px}.test-check-number-history{color:#fff;background:#aaa}.test-check-number-history:hover{cursor:pointer}.test-check-history,.word-pagination .active{background:#1caceb;color:#fff}.pagination-mobile-show{display:none}.pagination-mobile-hide{display:block}thead{border-bottom:2px solid #ccc!important}table.borderless td,table.borderless th{border:none!important}.thead{font-weight:600!important;font-size:16px}@media screen and (max-width:991px){.pagination-mobile-hide{display:none}.pagination-mobile-show{display:block}}@media screen and (min-width:551px) and (max-width:991px){.guide-video-history{width:10%!important}.guide-video-history .guide-video{padding-top:0}.pagination-header .page-link2{width:33%!important;text-align:center!important;font-size:14px!important;padding-left:0!important;padding-right:0!important}.pagination-header .link3{width:34%!important}.page-item-block{width:0!important;float:left}.tick-info{text-align:center}.test-check-number-history{font-size:18px!important}}@media screen and (max-width:550px){.guide-video-history{width:25%!important}.guide-video-history .guide-video{padding-top:0}.pagination-header .page-link2{width:33%!important;text-align:center!important;font-size:14px!important;padding-left:0!important;padding-right:0!important}.pagination-header .link3{width:34%!important}.page-item-block{width:0!important;float:left}.lesson-item-history .title{font-size:12px}}\", \"\", {\"version\":3,\"sources\":[\"C:/xampp/htdocs/talkfluent/src/modules/history/History.vue\"],\"names\":[],\"mappings\":\"AACA,8DACE,6BAA+B,AAC/B,oBAAwB,CACzB,AACD,mBACE,sBAAuB,AACvB,gBAAiB,AACjB,yBAA8B,CAC/B,AACD,mBACE,WAAY,AACZ,UAAY,CACb,AACD,iBACE,cAAgB,CACjB,AACD,YACE,oBAAsB,AACtB,4BAA8B,AAC9B,UAAY,CACb,AACD,iBACE,oBAAsB,AACtB,WAAY,AACZ,oCAAwC,AACxC,sCAA2C,CAC5C,AACD,sBACE,sBAAuB,AACvB,eAAiB,CAClB,AACD,qBACE,WAAY,AACZ,SAAW,CACZ,AACD,kCACE,YAAa,AACb,eAAiB,CAClB,AAOD,qDACE,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,iBAAmB,CACpB,AACD,kEACE,aAAe,CAChB,AACD,qBACE,YAAa,AACb,6BAA8B,AAC9B,eAAgB,AAChB,cAAgB,CACjB,AACD,6BACE,cAAgB,CACjB,AACD,iBACE,WAAY,AACZ,0BAA4B,AAC5B,gBAAiB,AACjB,aAAc,AACd,6BAA8B,AAC9B,4BAA6B,AAC7B,2BAA4B,AAC5B,mBAAqB,CACtB,AACD,uBACE,WAAY,AACZ,YAAa,AACb,UAAY,CACb,AACD,gBACE,gBAAiB,AACjB,eAAiB,CAClB,AACD,0BACE,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,6BACE,UAAW,AACX,eAAgB,AAChB,WAAY,AACZ,WAAY,AACZ,cAAgB,CACjB,AACD,gCACE,gBAAiB,AACjB,kBAAoB,CACrB,AACD,mCACE,eAAiB,CAClB,AACD,iBACE,qBAAuB,AACvB,WAAY,AACZ,iBAAmB,CACpB,AACD,mBACE,wBAA2B,CAC5B,AACD,OACE,wBAA2B,CAC5B,AACD,iBACE,aAAe,CAChB,AACD,WACE,WAAY,AACZ,WAAY,AACZ,gBAAkB,CACnB,AACD,aACE,WAAY,AACZ,YAAY,AACZ,mBAAoB,AACpB,WAAY,AACZ,4BAA8B,AAC9B,iBAAkB,AAClB,gBAAiB,AACjB,mBAAoB,AACpB,eAAiB,CAClB,AACD,iBACE,kBAAoB,CACrB,AACD,aACE,eAAgB,AAGhB,YAAkB,AAElB,aAAc,CACf,AAaD,+CAXE,WAAY,AACZ,YAAY,AACZ,mBAAoB,AAEpB,4BAA8B,AAC9B,iBAAkB,AAClB,gBAAiB,AACjB,eAAgB,AAEhB,gBAAkB,CAanB,AAXD,2BAIE,WAAY,AAKZ,eAAiB,CAElB,AACD,iCACE,cAAgB,CACjB,AAKD,6CACE,mBAAoB,AACpB,UAAY,CACb,AACD,wBACE,YAAc,CACf,AACD,wBACE,aAAe,CAChB,AACD,MACE,sCAAyC,CAC1C,AACD,wCACG,qBAAwB,CAC1B,AACD,OACE,0BAA4B,AAC5B,cAAgB,CACjB,AACD,oCACA,wBACI,YAAc,CACjB,AACD,wBACI,aAAe,CAClB,CACA,AACD,0DACA,qBACI,mBAAsB,CACzB,AACD,kCACI,aAAiB,CACpB,AACD,+BACI,oBAAsB,AACtB,4BAA8B,AAC9B,yBAA2B,AAC3B,yBAA6B,AAC7B,yBAA8B,CACjC,AACD,0BACI,mBAAsB,CACzB,AACD,iBACI,kBAAqB,AACrB,UAAY,CACf,AACD,WACI,iBAAmB,CACtB,AACD,2BACI,wBAA2B,CAC9B,CACA,AACD,oCACA,qBACI,mBAAsB,CACzB,AACD,kCACI,aAAiB,CACpB,AACD,+BACI,oBAAsB,AACtB,4BAA8B,AAC9B,yBAA2B,AAC3B,yBAA6B,AAC7B,yBAA8B,CACjC,AACD,0BACI,mBAAsB,CACzB,AACD,iBACI,kBAAqB,AACrB,UAAY,CACf,AACD,4BACI,cAAgB,CACnB,CACA\",\"file\":\"History.vue\",\"sourcesContent\":[\"\\n.word-active, .sentence-active, .lesson-active, .page-link:hover{\\n  background: #1caceb !important;\\n  color: white !important;\\n}\\n.pagination-header{\\n  border:none !important;\\n  background: #eee;\\n  border-radius: 0px !important;\\n}\\n.pagination-holder{\\n  width: 100%;\\n  float: left;\\n}\\n.page-link:hover{\\n  cursor: pointer;\\n}\\n.page-link2{\\n  width: 15% !important;\\n  text-align: center !important;\\n  float: left;\\n}\\n.page-item-block{\\n  width: 45% !important;\\n  float: left;\\n  border-top-right-radius: 0px !important;\\n  border-bottom-right-radius: 0px !important;\\n}\\n.disabled, .page-link2{\\n  border:none !important;\\n  background: #eee;\\n}\\n.guide-video-history{\\n  float: left;\\n  width: 10%;\\n}\\n.guide-video-history .guide-video{\\n  height: 50px;\\n  padding-top: 2px;\\n}\\n\\n\\n/*\\n\\n    Word Result\\n*/\\n.word-result, .sentence-result, .lesson-result-history{\\n  display: none;\\n  float: left;\\n  min-height: 200px;\\n  overflow-y: hidden;\\n}\\n.word-result-active, .sentence-result-active, .lesson-result-active{\\n  display: block;\\n}\\n.lesson-item-history{\\n  height: 50px;\\n  border-bottom: solid 1px #eee;\\n  margin-top: 1px;\\n  font-size: 18px;\\n}\\n.lesson-item-history i:hover{\\n  cursor: pointer;\\n}\\n.lessons-content{\\n  width: 100%;\\n  min-height: 50px !important;\\n  overflow: hidden;\\n  display: none;\\n  border-bottom: solid 1px #eee;\\n  border-right: solid 1px #eee;\\n  border-left: solid 1px #eee; /* Safari */\\n  transition: width 2s;\\n}\\n.lesson-holder-history{\\n  float: left;\\n  height: auto;\\n  width: 100%;\\n}\\n.content-holder{\\n  min-height: 50px;\\n  overflow: hidden;\\n}\\n.content-holder .original{\\n  width: 100%;\\n  float: left;\\n  font-size: 18px;\\n}\\n.content-holder .translation{\\n  width: 90%;\\n  margin-left: 1%;\\n  float: left;\\n  color: #888;\\n  font-size: 18px;\\n}\\n.content-holder .original label{\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n.content-holder .translation label{\\n  padding-top: 5px;\\n}\\n.error-container{\\n  width: 100% !important;\\n  float: left;\\n  text-align: center;\\n}\\n.table-hover:hover{\\n  cursor: pointer !important;\\n}\\n.table{\\n  font-size: 16px !important;\\n}\\n.fa-chevron-down{\\n  color: #1caceb;\\n}\\n.tick-info{\\n  width: 100%;\\n  float: left;\\n  text-align: right;\\n}\\n.tick-info i{\\n  width: 24px;\\n  height:24px;\\n  border-radius: 12px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  background: #1caceb;\\n  padding-top: 5px;\\n}\\n.tick-info label{\\n  padding-right: 10px;\\n}\\n.tick-toggle{\\n  font-size: 40px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  color: #1caceb\\n}\\n.test-check-history{\\n  width: 40px;\\n  height:40px;\\n  border-radius: 20px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n  background: #1caceb;\\n  padding-top: 10px;\\n}\\n.test-check-number-history{\\n  width: 40px;\\n  height:40px;\\n  border-radius: 20px;\\n  color: #fff;\\n  text-align: center !important;\\n  margin-right: 5px;\\n  margin-left: 5px;\\n  margin-top: 5px;\\n  background: #aaa;\\n  padding-top: 10px;\\n}\\n.test-check-number-history:hover{\\n  cursor: pointer;\\n}\\n.test-check-history{\\n  background: #1caceb;\\n  color: #fff;\\n}\\n.word-pagination .active{\\n  background: #1caceb;\\n  color: #fff;\\n}\\n.pagination-mobile-show{\\n  display: none;\\n}\\n.pagination-mobile-hide{\\n  display: block;\\n}\\nthead{\\n  border-bottom: 2px solid #ccc !important;\\n}\\ntable.borderless td,table.borderless th{\\n   border: none !important;\\n}\\n.thead{ \\n  font-weight: 600 !important;\\n  font-size: 16px;\\n}\\n@media screen and (max-width: 991px){\\n.pagination-mobile-hide{\\n    display: none;\\n}\\n.pagination-mobile-show{\\n    display: block;\\n}\\n}\\n@media screen and (min-width: 551px) and (max-width: 991px) {\\n.guide-video-history{\\n    width: 10% !important;\\n}\\n.guide-video-history .guide-video{\\n    padding-top: 0px;\\n}\\n.pagination-header .page-link2{\\n    width: 33% !important;\\n    text-align: center !important;\\n    font-size: 14px !important;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n.pagination-header .link3{\\n    width: 34% !important;\\n}\\n.page-item-block{\\n    width: 0% !important;\\n    float: left;\\n}\\n.tick-info{\\n    text-align: center;\\n}\\n.test-check-number-history{\\n    font-size: 18px !important;\\n}\\n}\\n@media screen and (max-width: 550px) {\\n.guide-video-history{\\n    width: 25% !important;\\n}\\n.guide-video-history .guide-video{\\n    padding-top: 0px;\\n}\\n.pagination-header .page-link2{\\n    width: 33% !important;\\n    text-align: center !important;\\n    font-size: 14px !important;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n.pagination-header .link3{\\n    width: 34% !important;\\n}\\n.page-item-block{\\n    width: 0% !important;\\n    float: left;\\n}\\n.lesson-item-history .title{\\n    font-size: 12px;\\n}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5488340d\",\"scoped\":false,\"hasInlineConfig\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/history/History.vue\n// module id = 700\n// module chunks = 28","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-5488340d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./History.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"26e73afe\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5488340d\",\"scoped\":false,\"hasInlineConfig\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/history/History.vue\n// module id = 783\n// module chunks = 28","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"breadcrumb\"\n  }, [_c('li', {\n    staticClass: \"breadcrumb-item active\",\n    on: {\n      \"click\": function($event) {\n        return _vm.redirectDashboard('/dashboard')\n      }\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#\",\n      \"onclick\": \"return false;\"\n    }\n  }, [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    staticClass: \"breadcrumb-item active\"\n  }, [_vm._v(\"Already Known\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"pagination pagination-lg pagination-header\"\n  }, [_c('li', {\n    staticClass: \"page-item page-link page-link2\",\n    class: {\n      'word-active': _vm.isActive.word === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'word')\n      }\n    }\n  }, [_vm._v(\"Words\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item page-link page-link2\",\n    class: {\n      'sentence-active': _vm.isActive.sentence === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'sentence')\n      }\n    }\n  }, [_vm._v(\"Sentences\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item page-link page-link2 link3\",\n    class: {\n      'lesson-active': _vm.isActive.lesson === true\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/already_known/', 'lesson')\n      }\n    }\n  }, [_vm._v(\"Lessons\")]), _vm._v(\" \"), _c('li', {\n    staticClass: \"page-item disabled page-item-block\"\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto word-result\",\n    class: {\n      'word-result-active': _vm.isActive.word === true\n    }\n  }, [_c('span', {\n    staticClass: \"pagination-holder pagination-mobile-hide\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination \"\n  }, [(_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordPrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordPrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((26), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64) === _vm.active\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortWord(i), _vm.pager(i + 64)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), _c('span', {\n    staticClass: \"pagination-holder pagination-mobile-show\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination\"\n  }, [(_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordPrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordMobilePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((_vm.wordLimit), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64 + _vm.wordLimitAdder) === _vm.active\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64 + _vm.wordLimitAdder) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortWord(i + _vm.wordLimitAdder), _vm.pager(i + 64 + _vm.wordLimitAdder)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.active !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.wordNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.wordMobileNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.active === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), (_vm.word.length >= 1) ? _c('table', {\n    staticClass: \"table table-hover borderless\"\n  }, [_vm._m(0), _vm._v(\" \"), _c('tbody', {\n    staticClass: \"table-hover\"\n  }, _vm._l((_vm.word), function(item, index) {\n    return _c('tr', [_c('td', [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      attrs: {\n        \"id\": 'audioWord' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.audio, 'audioWord' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      staticStyle: {\n        \"text-transform\": \"capitalize\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.word)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('label', {\n      staticStyle: {\n        \"padding-top\": \"10px\",\n        \"text-transform\": \"capitalize\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.translation)\n      }\n    })])])\n  }), 0)]) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Word(s) Learned or Completed!\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto  sentence-result\",\n    class: {\n      'sentence-result-active': _vm.isActive.sentence === true\n    }\n  }, [_c('span', {\n    staticClass: \"pagination-holder pagination-mobile-hide\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination \"\n  }, [(_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentencePrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentencePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((26), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64) === _vm.activeSentence\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortSentence(i), _vm.pagerSentence(i + 64)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentenceNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), _c('span', {\n    staticClass: \"pagination-holder pagination-mobile-show\"\n  }, [_c('ul', {\n    staticClass: \"pagination justify-content-center word-pagination\"\n  }, [(_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentencePrevFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceMobilePrev()\n      }\n    }\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Previous\")])]) : _vm._e(), _vm._v(\" \"), _vm._l((_vm.sentenceLimit), function(i) {\n    return _c('li', {\n      staticClass: \"page-item page-link\",\n      class: {\n        'active': (i + 64 + _vm.sentenceLimitAdder) === _vm.activeSentence\n      },\n      domProps: {\n        \"innerHTML\": _vm._s('&#' + (i + 64 + _vm.sentenceLimitAdder) + ';')\n      },\n      on: {\n        \"click\": function($event) {\n          _vm.sortSentence(i + _vm.sentenceLimitAdder), _vm.pagerSentence(i + 64 + _vm.sentenceLimitAdder)\n        }\n      }\n    })\n  }), _vm._v(\" \"), (_vm.activeSentence !== null) ? _c('li', {\n    staticClass: \"page-item\",\n    class: {\n      'disabled': _vm.sentenceNextFlag === false\n    }\n  }, [_c('span', {\n    staticClass: \"page-link\",\n    on: {\n      \"click\": function($event) {\n        return _vm.sentenceMobileNext()\n      }\n    }\n  }, [_vm._v(\"Next\")])]) : _vm._e(), _vm._v(\" \"), (_vm.activeSentence === null) ? _c('li', {\n    staticClass: \"page-item disabled\"\n  }, [_c('span', {\n    staticClass: \"page-link\"\n  }, [_vm._v(\"Next\")])]) : _vm._e()], 2)]), _vm._v(\" \"), (_vm.sentence.length >= 1) ? _c('table', {\n    staticClass: \"table table-hover borderless\"\n  }, [_vm._m(1), _vm._v(\" \"), _c('tbody', _vm._l((_vm.sentence), function(item, index) {\n    return _c('tr', [_c('td', [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      attrs: {\n        \"id\": 'audioSentence' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.audio, 'audioSentence' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.original)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('label', {\n      staticStyle: {\n        \"padding-top\": \"10px\"\n      },\n      domProps: {\n        \"innerHTML\": _vm._s(item.translation)\n      }\n    })])])\n  }), 0)]) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Sentence(s) Learned or Completed!\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto lesson-result-history\",\n    class: {\n      'lesson-result-active': _vm.isActive.lesson === true\n    }\n  }, [_vm._m(2), _vm._v(\" \"), (_vm.lesson.length > 0) ? _c('span', _vm._l((_vm.lesson), function(item, index) {\n    return _c('span', {\n      staticClass: \"lesson-holder-history\"\n    }, [_c('div', {\n      staticClass: \"lesson-item-history\",\n      attrs: {\n        \"id\": 'lesson-container-' + index\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-volume-up regular-volume-up\",\n      staticStyle: {\n        \"margin-top\": \"2px\",\n        \"margin-left\": \"2px\"\n      },\n      attrs: {\n        \"id\": 'audioLessonKnown' + index\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.audioHandler.playerHowler(_vm.config.BACKEND_URL + item.lesson[0].lesson_audio, 'audioLessonKnown' + index)\n        }\n      }\n    }), _vm._v(\" \"), _c('label', {\n      staticClass: \"title\",\n      staticStyle: {\n        \"padding-top\": \"5px\",\n        \"padding-left\": \"10px\"\n      }\n    }, [_vm._v(_vm._s(index + 1) + \". \\n            \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.lesson[0].title)\n      }\n    })]), _vm._v(\" \"), (item.lesson_tick_flag === true) ? _c('i', {\n      staticClass: \"fa fa-check test-check-history pull-right\",\n      on: {\n        \"click\": function($event) {\n          return _vm.toggle(index)\n        }\n      }\n    }) : _vm._e(), _vm._v(\" \"), _c('i', {\n      staticClass: \"fa fa-chevron-down pull-right\",\n      staticStyle: {\n        \"padding-top\": \"15px\",\n        \"padding-right\": \"10px\"\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.retrieveContent(item.lesson[0].id, index)\n        }\n      }\n    })]), _vm._v(\" \"), (_vm.contents.length > 0) ? _c('div', {\n      staticClass: \"lessons-content\",\n      attrs: {\n        \"id\": 'lesson-content-' + index\n      }\n    }, _vm._l((_vm.contents), function(itemContent, indexContent) {\n      return _c('span', {\n        staticClass: \"content-holder\"\n      }, [_c('span', {\n        staticClass: \"original\"\n      }, [_c('label', [_vm._v(_vm._s(indexContent + 1) + \". \")]), _vm._v(\" \"), _c('label', {\n        domProps: {\n          \"innerHTML\": _vm._s(itemContent.original)\n        }\n      })]), _vm._v(\" \"), _c('span', {\n        staticClass: \"translation\"\n      }, [_c('label', [_vm._v(_vm._s(indexContent + 1) + \". \")]), _vm._v(\" \"), _c('label', {\n        domProps: {\n          \"innerHTML\": _vm._s(itemContent.translation)\n        }\n      })])])\n    }), 0) : _vm._e()])\n  }), 0) : _c('span', {\n    staticClass: \"error-container text-danger\"\n  }, [_vm._v(\"No Lesson(s) Learned or Completed!\")])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', {\n    staticClass: \"thead\"\n  }, [_c('td', [_vm._v(\"WORD\")]), _vm._v(\" \"), _c('td', [_vm._v(\"TRANSLATION\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', {\n    staticClass: \"thead\"\n  }, [_c('td', [_vm._v(\"SENTENCE\")]), _vm._v(\" \"), _c('td', [_vm._v(\"TRANSLATION\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('span', {\n    staticClass: \"tick-info pull-right\"\n  }, [_c('label', [_c('i', {\n    staticClass: \"fas fa-check\"\n  }), _vm._v(\"Tick when you have put in your Calendar as a reminder to practice lesson with native speaker.\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5488340d\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/modules/history/History.vue\n// module id = 914\n// module chunks = 28"],"sourceRoot":""}