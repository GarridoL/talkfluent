{"version":3,"sources":["webpack:///static/js/12.4a13823a459f664a97f0.js","webpack:///./src/modules/lesson/ContentManagementv2.vue","webpack:///./~/axios/lib/utils.js?eda1*********","webpack:///./~/axios/lib/defaults.js?12cb*********","webpack:///./~/axios/lib/adapters/xhr.js?14ed*********","webpack:///./~/axios/lib/cancel/Cancel.js?3ada*********","webpack:///./~/axios/lib/cancel/isCancel.js?f270*********","webpack:///./~/axios/lib/core/createError.js?f777*********","webpack:///./~/axios/lib/helpers/bind.js?5cdd*********","webpack:///./~/axios/index.js?4307*********","webpack:///./~/axios/lib/axios.js?061f*********","webpack:///./~/axios/lib/cancel/CancelToken.js?4765*********","webpack:///./~/axios/lib/core/Axios.js?483c*********","webpack:///./~/axios/lib/core/InterceptorManager.js?5892*********","webpack:///./~/axios/lib/core/dispatchRequest.js?91bc*********","webpack:///./~/axios/lib/core/enhanceError.js?288c*********","webpack:///./~/axios/lib/core/settle.js?199f*********","webpack:///./~/axios/lib/core/transformData.js?0ea6*********","webpack:///./~/axios/lib/helpers/btoa.js?7d44*********","webpack:///./~/axios/lib/helpers/buildURL.js?9a6a*********","webpack:///./~/axios/lib/helpers/combineURLs.js?7eb7*********","webpack:///./~/axios/lib/helpers/cookies.js?0450*********","webpack:///./~/axios/lib/helpers/isAbsoluteURL.js?3809*********","webpack:///./~/axios/lib/helpers/isURLSameOrigin.js?142d*********","webpack:///./~/axios/lib/helpers/normalizeHeaderName.js?40b2*********","webpack:///./~/axios/lib/helpers/parseHeaders.js?15ca*********","webpack:///./~/axios/lib/helpers/spread.js?3c41*********","webpack:///./~/is-buffer/index.js?1f6a*********","webpack:///./~/howler/dist/howler.js?905d*******","webpack:///./~/babel-runtime/core-js/json/stringify.js?4574***","webpack:///./~/core-js/library/fn/json/stringify.js?6708***","webpack:///ContentManagementv2.vue","webpack:///./src/modules/lesson/ContentManagementv2.vue?53e4","webpack:///./src/modules/lesson/ContentManagementv2.vue?1070","webpack:///./src/modules/lesson/ContentManagementv2.vue?ee23"],"names":["webpackJsonp","395","module","exports","__webpack_require__","Component","410","isArray","val","toString","call","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","navigator","product","window","document","forEach","obj","fn","i","l","length","key","Object","prototype","hasOwnProperty","merge","assignValue","result","arguments","extend","a","b","thisArg","bind","isBuffer","411","process","setContentTypeIfUnset","headers","value","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","defaults","adapter","XMLHttpRequest","transformRequest","data","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","412","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","config","Promise","resolve","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","toUpperCase","params","paramsSerializer","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","413","Cancel","message","this","__CANCEL__","414","415","enhanceError","code","error","Error","416","args","Array","apply","417","418","createInstance","defaultConfig","context","Axios","instance","axios","create","instanceConfig","CancelToken","isCancel","all","promises","spread","default","419","executor","TypeError","resolvePromise","token","reason","throwIfRequested","source","c","420","interceptors","InterceptorManager","dispatchRequest","chain","interceptor","unshift","fulfilled","rejected","push","shift","421","handlers","use","eject","id","h","422","throwIfCancellationRequested","transformData","isAbsoluteURL","combineURLs","baseURL","423","424","425","fns","426","E","input","block","charCode","String","output","idx","map","chars","charAt","charCodeAt","name","427","encode","encodeURIComponent","serializedParams","parts","v","toISOString","join","428","relativeURL","429","write","expires","path","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","430","test","431","resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hash","hostname","port","pathname","originURL","userAgent","createElement","location","requestURL","parsed","432","normalizedName","433","ignoreDuplicateOf","split","line","substr","concat","434","callback","arr","435","constructor","isSlowBuffer","readFloatLE","slice","_isBuffer","436","global","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","HowlerGlobal","init","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","isOldOpera","parseInt","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","createBufferSource","connect","destination","start","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","exec","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","index","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","msg","task","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","ceil","__default","loadSound","atob","dataView","Uint8Array","decodeAudioData","xhr","safeXhrSend","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_super","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","440","__esModule","441","core","$JSON","it","633","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1__router__","__WEBPACK_IMPORTED_MODULE_2__services_auth__","__WEBPACK_IMPORTED_MODULE_3_axios__","__WEBPACK_IMPORTED_MODULE_3_axios___default","__WEBPACK_IMPORTED_MODULE_4__config_js__","__WEBPACK_IMPORTED_MODULE_5_howler__","mounted","redirect","getLesson","user","tokenData","modalTitle","content","errorMessage","original","translation","syllabus","accentText","syllabusAudio","file","syllabusFile","videoUrl","lesson","filterId","lessonId","modalContent","modalContentInput","methods","parameter","setUpFileUpload","files","target","dataTransfer","createAudio","setUpSyllabusFileUpload","FileReader","readAsDataURL","submit","validation","sendRequest","_this","formData","append","post","BACKEND_URL","word","filter","condition","column","clause","getContent","_this2","APIRequest","_this3","deleteContent","_this4","updateModal","updateContent","_this5","683","sources","names","mappings","sourcesContent","sourceRoot","759","locals","878","render","_vm","_h","$createElement","_c","_self","staticClass","click","$event","attrs","onclick","_v","_m","directives","rawName","expression","change","$$selectedVal","options","selected","_value","multiple","disabled","_l","item","domProps","_s","title","innerHTML","syllabus_audio","data-toggle","data-target","tabindex","role","aria-labelledby","aria-hidden","_e","composing","$set","rows","data-dismiss","aria-label","placeholder","staticRenderFns","colspan"],"mappings":"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","file":"static/js/12.4a13823a459f664a97f0.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 395:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(759)\n\nvar Component = __webpack_require__(151)(\n  /* script */\n  __webpack_require__(633),\n  /* template */\n  __webpack_require__(878),\n  /* scopeId */\n  \"data-v-2349aa3d\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bind = __webpack_require__(416);\nvar isBuffer = __webpack_require__(435);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n/***/ }),\n\n/***/ 411:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(410);\nvar normalizeHeaderName = __webpack_require__(432);\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(412);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(412);\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(83)))\n\n/***/ }),\n\n/***/ 412:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\nvar settle = __webpack_require__(424);\nvar buildURL = __webpack_require__(427);\nvar parseHeaders = __webpack_require__(433);\nvar isURLSameOrigin = __webpack_require__(431);\nvar createError = __webpack_require__(415);\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(426);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (\"production\" !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(429);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n/***/ }),\n\n/***/ 413:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n/***/ }),\n\n/***/ 414:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(423);\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(418);\n\n/***/ }),\n\n/***/ 418:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\nvar bind = __webpack_require__(416);\nvar Axios = __webpack_require__(420);\nvar defaults = __webpack_require__(411);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(413);\naxios.CancelToken = __webpack_require__(419);\naxios.isCancel = __webpack_require__(414);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(434);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Cancel = __webpack_require__(413);\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n/***/ }),\n\n/***/ 420:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(411);\nvar utils = __webpack_require__(410);\nvar InterceptorManager = __webpack_require__(421);\nvar dispatchRequest = __webpack_require__(422);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\nvar transformData = __webpack_require__(425);\nvar isCancel = __webpack_require__(414);\nvar defaults = __webpack_require__(411);\nvar isAbsoluteURL = __webpack_require__(430);\nvar combineURLs = __webpack_require__(428);\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(415);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n/***/ }),\n\n/***/ 430:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n/***/ }),\n\n/***/ 431:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n/***/ }),\n\n/***/ 432:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n/***/ }),\n\n/***/ 433:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(410);\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n/***/ }),\n\n/***/ 434:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Pool of unlocked HTML5 Audio objects.\r\n      self._html5AudioPool = [];\r\n      self.html5PoolSize = 10;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto audio unlocker.\r\n      self.autoUnlock = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Some browsers/devices will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _unlockAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\r\n      if (self._audioUnlocked || !self.ctx) {\r\n        return;\r\n      }\r\n\r\n      self._audioUnlocked = false;\r\n      self.autoUnlock = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Create a pool of unlocked HTML5 Audio objects that can\r\n        // be used for playing sounds without user interaction. HTML5\r\n        // Audio objects must be individually unlocked, as opposed\r\n        // to the WebAudio API which only needs a single activation.\r\n        // This must occur before WebAudio setup or the source.onended\r\n        // event will not fire.\r\n        for (var i=0; i<self.html5PoolSize; i++) {\r\n          try {\r\n            var audioNode = new Audio();\r\n\r\n            // Mark this Audio object as unlocked to ensure it can get returned\r\n            // to the unlocked pool when released.\r\n            audioNode._unlocked = true;\r\n\r\n            // Add the audio node to the pool.\r\n            self._releaseHtml5Audio(audioNode);\r\n          } catch (e) {\r\n            self.noAudio = true;\r\n          }\r\n        }\r\n\r\n        // Loop through any assigned audio nodes and unlock them.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and unlock the audio nodes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node && !sound._node._unlocked) {\r\n                sound._node._unlocked = true;\r\n                sound._node.load();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fix Android can not play in suspend state.\r\n        self._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._audioUnlocked = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\r\n     * return a new Audio object and throw a warning.\r\n     * @return {Audio} HTML5 Audio object.\r\n     */\r\n    _obtainHtml5Audio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Return the next object from the pool if one exists.\r\n      if (self._html5AudioPool.length) {\r\n        return self._html5AudioPool.pop();\r\n      }\r\n\r\n      //.Check if the audio is locked and throw a warning.\r\n      var testPlay = new Audio().play();\r\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\r\n        testPlay.catch(function() {\r\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\r\n        });\r\n      }\r\n\r\n      return new Audio();\r\n    },\r\n\r\n    /**\r\n     * Return an activated HTML5 Audio object to the pool.\r\n     * @return {Howler}\r\n     */\r\n    _releaseHtml5Audio: function(audio) {\r\n      var self = this || Howler;\r\n\r\n      // Don't add audio to the pool if we don't know if it has been unlocked.\r\n      if (audio._unlocked) {\r\n        self._html5AudioPool.push(audio);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n\r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\r\n        Howler._unlockAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended. \r\n        // If there is, play that sound. If not, continue as usual.  \r\n        if (!self._playLock) {\r\n          var num = 0;\r\n          for (var i=0; i<self._sounds.length; i++) {\r\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n              num++;\r\n              id = self._sounds[i]._id;\r\n            }\r\n          }\r\n\r\n          if (num === 1) {\r\n            sprite = null;\r\n          } else {\r\n            id = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Mark this sound as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n      var start = self._sprite[sprite][0] / 1000;\r\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n      sound._sprite = sprite;\r\n\r\n      // Mark the sound as ended instantly so that this async playback\r\n      // doesn't get grabbed by another call to play while this one waits to start.\r\n      sound._ended = false;\r\n\r\n      // Update the parameters of the sound.\r\n      var setParams = function() {\r\n        sound._paused = false;\r\n        sound._seek = seek;\r\n        sound._start = start;\r\n        sound._stop = stop;\r\n        sound._loop = loop;\r\n      };\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (seek >= stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._playLock = false;\r\n          setParams();\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          // Wait for the audio context to resume before playing.\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Some browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Set param values immediately.\r\n              setParams();\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  node._unlocked = true;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                    self._loadQueue();\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n\r\n                  // Reset the ended and paused values.\r\n                  sound._ended = true;\r\n                  sound._paused = true;\r\n                });\r\n            } else if (!internal) {\r\n              self._playLock = false;\r\n              setParams();\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // If this is streaming audio, make sure the src is set and load again.\r\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\r\n          node.src = self._src;\r\n          node.load();\r\n        }\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n\r\n              // If this is a live stream, stop download once the audio is stopped.\r\n              if (sound._node.duration === Infinity) {\r\n                self._clearSound(sound._node);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Make sure the to/from/len values are numbers.\r\n      from = parseFloat(from);\r\n      to = parseFloat(to);\r\n      len = parseFloat(len);\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            if (self.playing(id[i])) {\r\n              sound._rateSeek = self.seek(id[i]);\r\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            }\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          self._clearSound(sounds[i]._node);\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n\r\n          // Release the Audio object back to the pool.\r\n          Howler._releaseHtml5Audio(sounds[i]._node);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        if (isIOS) {\r\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n        }\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\r\n     * @param  {Object} node Audio node to clear.\r\n     */\r\n    _clearSound: function(node) {\r\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n      if (!checkIE) {\r\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        // Get an unlocked Audio object from the pool.\r\n        self._node = Howler._obtainHtml5Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\r\n    if (!Howler.usingWebAudio) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // If the audio context creation still failed, set using web audio to false.\r\n    if (!Howler.ctx) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (true) {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setPosition(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(29)))\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(441), __esModule: true };\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(12);\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(440);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__router__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_auth__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios__ = __webpack_require__(417);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_js__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_howler__ = __webpack_require__(436);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_howler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_howler__);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  mounted: function mounted() {\n    __WEBPACK_IMPORTED_MODULE_2__services_auth__[\"a\" /* default */].redirect();\n    this.getLesson();\n  },\n  data: function data() {\n    return {\n      user: __WEBPACK_IMPORTED_MODULE_2__services_auth__[\"a\" /* default */].user,\n      tokenData: __WEBPACK_IMPORTED_MODULE_2__services_auth__[\"a\" /* default */].tokenData,\n      modalTitle: 'Add Content',\n      content: [],\n      errorMessage: null,\n      original: null,\n      translation: null,\n      audio: null,\n      syllabus: null,\n      accentText: null,\n      syllabusAudio: null,\n      file: null,\n      syllabusFile: null,\n      videoUrl: null,\n      lesson: [],\n      filterId: null,\n      lessonId: null,\n      modalContent: null,\n      modalContentInput: {\n        id: null,\n        original: null,\n        translation: null,\n        audio: null,\n        syllabus: null,\n        syllabusAudio: null,\n        videoUrl: null\n      }\n    };\n  },\n\n  methods: {\n    redirect: function redirect(parameter) {\n      __WEBPACK_IMPORTED_MODULE_1__router__[\"a\" /* default */].push(parameter);\n    },\n    setUpFileUpload: function setUpFileUpload(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) {\n        return false;\n      } else {\n        this.file = files[0];\n        this.createAudio(files[0]);\n      }\n    },\n    setUpSyllabusFileUpload: function setUpSyllabusFileUpload(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) {\n        return false;\n      } else {\n        this.syllabusFile = files[0];\n        this.createAudio(files[0]);\n      }\n    },\n    createAudio: function createAudio(file) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(event.target.files[0]);\n    },\n    submit: function submit() {\n      if (this.validation() === true) {\n        this.errorMessage = null;\n        this.sendRequest();\n      } else {\n        this.errorMessage = 'Please fillup the required information';\n      }\n    },\n    sendRequest: function sendRequest() {\n      var _this = this;\n\n      var formData = new FormData();\n      formData.append('lesson_id', this.lessonId);\n      formData.append('original', this.original);\n      formData.append('translation', this.translation);\n      formData.append('audio', this.audio);\n      formData.append('syllabus', this.syllabus);\n      formData.append('syllabus_audio', this.syllabusAudio);\n      formData.append('accent_text', this.accentText);\n      formData.append('video_url', this.videoUrl);\n      __WEBPACK_IMPORTED_MODULE_3_axios___default.a.post(__WEBPACK_IMPORTED_MODULE_4__config_js__[\"default\"].BACKEND_URL + '/content/create', formData).then(function (response) {\n        if (response.data.error.status === 100) {\n          var error = response.data.error.message;\n          if (error.word !== 'undefined') {\n            _this.errorMessage = error.word[0];\n          } else {\n            _this.errorMessage = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(error);\n          }\n        } else if (response.data.result) {\n          _this.filter();\n        } else {}\n      });\n    },\n    filter: function filter() {\n      var parameter = {\n        'condition': [{\n          'column': 'lesson_id',\n          'clause': '=',\n          'value': this.filterId\n        }]\n      };\n      this.getContent(parameter);\n    },\n    getContent: function getContent(parameter) {\n      var _this2 = this;\n\n      this.APIRequest('content/retrieve', parameter).then(function (response) {\n        _this2.content = response.data;\n      });\n    },\n    getLesson: function getLesson() {\n      var _this3 = this;\n\n      this.APIRequest('lesson/retrieve').then(function (response) {\n        _this3.lesson = response.data;\n      });\n    },\n    deleteContent: function deleteContent(index) {\n      var _this4 = this;\n\n      var parameter = {\n        id: index\n      };\n      this.APIRequest('content/delete', parameter).then(function (response) {\n        _this4.filter();\n      });\n    },\n    validation: function validation() {\n      if (this.original === null || this.translation === null) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    play: function play(url) {\n      if (this.audio === null) {\n        this.audio = new __WEBPACK_IMPORTED_MODULE_5_howler__[\"Howl\"]({\n          src: __WEBPACK_IMPORTED_MODULE_4__config_js__[\"default\"].BACKEND_URL + url\n        });\n        this.audio.play();\n      } else {\n        this.audio.unload();\n        this.audio = new __WEBPACK_IMPORTED_MODULE_5_howler__[\"Howl\"]({\n          src: __WEBPACK_IMPORTED_MODULE_4__config_js__[\"default\"].BACKEND_URL + url\n        });\n        this.audio.play();\n      }\n    },\n    pause: function pause(path) {\n      this.audio.pause();\n    },\n    updateModal: function updateModal(index) {\n      this.modalContent = this.content[index];\n      this.modalContentInput.id = this.modalContent.id;\n    },\n    updateContent: function updateContent() {\n      var _this5 = this;\n\n      __WEBPACK_IMPORTED_MODULE_3_axios___default.a.post(__WEBPACK_IMPORTED_MODULE_4__config_js__[\"default\"].BACKEND_URL + '/content/update', this.modalContent).then(function (response) {\n        if (response.data.error.status === 100) {\n          var error = response.data.error.message;\n          if (error.word !== 'undefined') {\n            _this5.errorMessage = error.word[0];\n          } else {\n            _this5.errorMessage = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(error);\n          }\n        } else if (response.data.data === true) {\n          _this5.filter();\n        } else {}\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 683:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(367)();\n// imports\n\n\n// module\nexports.push([module.i, \".result-holder[data-v-2349aa3d]{color:#000;margin-bottom:5%;height:150px}.history[data-v-2349aa3d]{margin-top:25px}.bg-primary[data-v-2349aa3d]{background:#1caceb!important}.modal-title i[data-v-2349aa3d],td button i[data-v-2349aa3d]{padding-right:10px}thead[data-v-2349aa3d]{font-weight:700}.modal-body[data-v-2349aa3d]{width:98%!important;margin:0 1%!important}\", \"\", {\"version\":3,\"sources\":[\"C:/xampp/htdocs/talkfluent/src/modules/lesson/ContentManagementv2.vue\"],\"names\":[],\"mappings\":\"AACA,gCACE,WAAY,AACZ,iBAAkB,AAClB,YAAc,CACf,AACD,0BACE,eAAiB,CAClB,AACD,6BACE,4BAA+B,CAChC,AAID,6DACE,kBAAoB,CACrB,AACD,uBACE,eAAiB,CAClB,AACD,6BACE,oBAAsB,AACtB,qBAAiC,CAClC\",\"file\":\"ContentManagementv2.vue\",\"sourcesContent\":[\"\\n.result-holder[data-v-2349aa3d]{\\r\\n  color: #000;\\r\\n  margin-bottom: 5%;\\r\\n  height: 150px;\\n}\\n.history[data-v-2349aa3d]{\\r\\n  margin-top: 25px;\\n}\\n.bg-primary[data-v-2349aa3d]{\\r\\n  background: #1caceb !important;\\n}\\n.modal-title i[data-v-2349aa3d]{\\r\\n  padding-right: 10px;\\n}\\ntd button i[data-v-2349aa3d]{\\r\\n  padding-right: 10px;\\n}\\nthead[data-v-2349aa3d]{\\r\\n  font-weight: 700;\\n}\\n.modal-body[data-v-2349aa3d]{\\r\\n  width: 98% !important;\\r\\n  margin: 0px 1% 0px 1% !important;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 759:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(683);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(368)(\"8e7d6ade\", content, true);\n\n/***/ }),\n\n/***/ 878:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"breadcrumb\"\n  }, [_c('li', {\n    staticClass: \"breadcrumb-item active\",\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/dashboard')\n      }\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#\",\n      \"onclick\": \"return false;\"\n    }\n  }, [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    staticClass: \"breadcrumb-item active\"\n  }, [_vm._v(\"Content Management\")])])]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto history\"\n  }, [_c('div', {\n    staticClass: \"filter\"\n  }, [_vm._m(1), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.filterId),\n      expression: \"filterId\"\n    }],\n    staticClass: \"form-control col-lg-3 col-md-4 col-sm-12\",\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.filterId = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', {\n    attrs: {\n      \"disabled\": \"\",\n      \"value\": \"\"\n    }\n  }, [_vm._v(\"Please Select Lesson\")]), _vm._v(\" \"), _vm._l((_vm.lesson), function(item, index) {\n    return _c('option', {\n      staticClass: \"form-control\",\n      domProps: {\n        \"value\": item.id\n      }\n    }, [_vm._v(_vm._s(item.title))])\n  })], 2), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-primary\",\n    on: {\n      \"click\": function($event) {\n        return _vm.filter()\n      }\n    }\n  }, [_vm._v(\"Filter\")])]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('table', {\n    staticClass: \"table table-responsive\"\n  }, [_vm._m(2), _vm._v(\" \"), (_vm.content.length !== 0) ? _c('tbody', _vm._l((_vm.content), function(item, index) {\n    return _c('tr', [_c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      on: {\n        \"click\": function($event) {\n          return _vm.play(item.audio)\n        }\n      }\n    }, [_vm._v(\"Play\")]), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.original)\n      }\n    })]), _vm._v(\" \"), _c('td', [_vm._v(_vm._s(item.translation))]), _vm._v(\" \"), _c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      on: {\n        \"click\": function($event) {\n          return _vm.play(item.syllabus_audio)\n        }\n      }\n    }, [_vm._v(\"Play\")]), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.syllabus)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      attrs: {\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#editModal\"\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.updateModal(index)\n        }\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-pencil\"\n    }), _vm._v(\"Edit\")]), _vm._v(\" \"), _c('button', {\n      staticClass: \"btn btn-danger\",\n      on: {\n        \"click\": function($event) {\n          return _vm.deleteContent(item.id)\n        }\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-trash\"\n    }), _vm._v(\"Delete\")])])])\n  }), 0) : _c('tbody', [_vm._m(3)])])]), _vm._v(\" \"), (_vm.modalContent !== null) ? _c('div', {\n    staticClass: \"modal fade\",\n    attrs: {\n      \"id\": \"editModal\",\n      \"tabindex\": \"-1\",\n      \"role\": \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-dialog modal-lg\",\n    attrs: {\n      \"role\": \"document\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-content\"\n  }, [_vm._m(4), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-body\"\n  }, [(_vm.errorMessage !== null) ? _c('span', {\n    staticClass: \"text-danger text-center\"\n  }, [_c('label', [_c('b', [_vm._v(\"Opps! \")]), _vm._v(_vm._s(_vm.errorMessage))])]) : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), _c('label', [_vm._v(\"Title\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.original),\n      expression: \"modalContent.original\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.original)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"original\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.translation),\n      expression: \"modalContent.translation\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.translation)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"translation\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Audio\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.audio),\n      expression: \"modalContent.audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"audio\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.syllabus),\n      expression: \"modalContent.syllabus\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.syllabus)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"syllabus\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus Audio\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.syllabus_audio),\n      expression: \"modalContent.syllabus_audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.syllabus_audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"syllabus_audio\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Video Url\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.video_url),\n      expression: \"modalContent.video_url\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.video_url)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"video_url\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Accent Text (Optional)\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.accent_text),\n      expression: \"modalContent.accent_text\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"rows\": \"10\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.accent_text)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"accent_text\", $event.target.value)\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-footer\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.updateContent()\n      }\n    }\n  }, [_vm._v(\"update\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-danger\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_vm._v(\"Close\")])])])])]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal fade\",\n    attrs: {\n      \"id\": \"myModal\",\n      \"tabindex\": \"-1\",\n      \"role\": \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-dialog modal-lg\",\n    attrs: {\n      \"role\": \"document\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-content\"\n  }, [_c('div', {\n    staticClass: \"modal-header bg-primary\"\n  }, [_c('h5', {\n    staticClass: \"modal-title\",\n    attrs: {\n      \"id\": \"exampleModalLabel\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-ellipsis-v\"\n  }), _vm._v(_vm._s(_vm.modalTitle))]), _vm._v(\" \"), _vm._m(5)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-body\"\n  }, [(_vm.errorMessage !== null) ? _c('span', {\n    staticClass: \"text-danger text-center\"\n  }, [_c('label', [_c('b', [_vm._v(\"Opps! \")]), _vm._v(_vm._s(_vm.errorMessage))])]) : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), _c('label', [_vm._v(\"Lesson\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.lessonId),\n      expression: \"lessonId\"\n    }],\n    staticClass: \"form-control\",\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.lessonId = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, _vm._l((_vm.lesson), function(item, index) {\n    return _c('option', {\n      domProps: {\n        \"value\": item.id\n      }\n    }, [_vm._v(_vm._s(item.title))])\n  }), 0), _vm._v(\" \"), _c('label', [_vm._v(\"Title\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.original),\n      expression: \"original\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Original\"\n    },\n    domProps: {\n      \"value\": (_vm.original)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.original = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.translation),\n      expression: \"translation\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Translation\"\n    },\n    domProps: {\n      \"value\": (_vm.translation)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.translation = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Audio URL\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.audio),\n      expression: \"audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Audio URL\"\n    },\n    domProps: {\n      \"value\": (_vm.audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.audio = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.syllabus),\n      expression: \"syllabus\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Syllabus\"\n    },\n    domProps: {\n      \"value\": (_vm.syllabus)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.syllabus = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Video Url\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.videoUrl),\n      expression: \"videoUrl\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"videoUrl\"\n    },\n    domProps: {\n      \"value\": (_vm.videoUrl)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.videoUrl = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus Audio URL\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.syllabusAudio),\n      expression: \"syllabusAudio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Audio URL\"\n    },\n    domProps: {\n      \"value\": (_vm.syllabusAudio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.syllabusAudio = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Accent Text (Optional)\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.accentText),\n      expression: \"accentText\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"rows\": \"10\"\n    },\n    domProps: {\n      \"value\": (_vm.accentText)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.accentText = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-footer\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submit()\n      }\n    }\n  }, [_vm._v(\"Submit\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-danger\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_vm._v(\"Close\")])])])])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary pull-right\",\n    attrs: {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-plus\"\n  }), _vm._v(\" Add Content\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('label', [_c('h5', [_vm._v(\"Filter\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('td', [_vm._v(\"Original\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Action\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('tr', [_c('td', {\n    staticClass: \"text-danger text-center\",\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(\"Empty\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"modal-header bg-primary\"\n  }, [_c('h5', {\n    staticClass: \"modal-title\",\n    attrs: {\n      \"id\": \"exampleModalLabel\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-ellipsis-v\"\n  }), _vm._v(\"Update Content\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"close\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_c('span', {\n    staticClass: \"text-white\",\n    attrs: {\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"×\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', {\n    staticClass: \"close\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_c('span', {\n    staticClass: \"text-white\",\n    attrs: {\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"×\")])])\n}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/12.4a13823a459f664a97f0.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-2349aa3d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ContentManagementv2.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ContentManagementv2.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2349aa3d\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ContentManagementv2.vue\"),\n  /* scopeId */\n  \"data-v-2349aa3d\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/lesson/ContentManagementv2.vue\n// module id = 395\n// module chunks = 12","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/utils.js\n// module id = 410\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/defaults.js\n// module id = 411\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/adapters/xhr.js\n// module id = 412\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/cancel/Cancel.js\n// module id = 413\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/cancel/isCancel.js\n// module id = 414\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/createError.js\n// module id = 415\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/bind.js\n// module id = 416\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/index.js\n// module id = 417\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/axios.js\n// module id = 418\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/cancel/CancelToken.js\n// module id = 419\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/Axios.js\n// module id = 420\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/InterceptorManager.js\n// module id = 421\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/dispatchRequest.js\n// module id = 422\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/enhanceError.js\n// module id = 423\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/settle.js\n// module id = 424\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/core/transformData.js\n// module id = 425\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/btoa.js\n// module id = 426\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/buildURL.js\n// module id = 427\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/combineURLs.js\n// module id = 428\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/cookies.js\n// module id = 429\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/isAbsoluteURL.js\n// module id = 430\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/isURLSameOrigin.js\n// module id = 431\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/normalizeHeaderName.js\n// module id = 432\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/parseHeaders.js\n// module id = 433\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/axios/lib/helpers/spread.js\n// module id = 434\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-buffer/index.js\n// module id = 435\n// module chunks = 0 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27","/*!\r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Pool of unlocked HTML5 Audio objects.\r\n      self._html5AudioPool = [];\r\n      self.html5PoolSize = 10;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto audio unlocker.\r\n      self.autoUnlock = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Some browsers/devices will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _unlockAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\r\n      if (self._audioUnlocked || !self.ctx) {\r\n        return;\r\n      }\r\n\r\n      self._audioUnlocked = false;\r\n      self.autoUnlock = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Create a pool of unlocked HTML5 Audio objects that can\r\n        // be used for playing sounds without user interaction. HTML5\r\n        // Audio objects must be individually unlocked, as opposed\r\n        // to the WebAudio API which only needs a single activation.\r\n        // This must occur before WebAudio setup or the source.onended\r\n        // event will not fire.\r\n        for (var i=0; i<self.html5PoolSize; i++) {\r\n          try {\r\n            var audioNode = new Audio();\r\n\r\n            // Mark this Audio object as unlocked to ensure it can get returned\r\n            // to the unlocked pool when released.\r\n            audioNode._unlocked = true;\r\n\r\n            // Add the audio node to the pool.\r\n            self._releaseHtml5Audio(audioNode);\r\n          } catch (e) {\r\n            self.noAudio = true;\r\n          }\r\n        }\r\n\r\n        // Loop through any assigned audio nodes and unlock them.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and unlock the audio nodes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node && !sound._node._unlocked) {\r\n                sound._node._unlocked = true;\r\n                sound._node.load();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fix Android can not play in suspend state.\r\n        self._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._audioUnlocked = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\r\n     * return a new Audio object and throw a warning.\r\n     * @return {Audio} HTML5 Audio object.\r\n     */\r\n    _obtainHtml5Audio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Return the next object from the pool if one exists.\r\n      if (self._html5AudioPool.length) {\r\n        return self._html5AudioPool.pop();\r\n      }\r\n\r\n      //.Check if the audio is locked and throw a warning.\r\n      var testPlay = new Audio().play();\r\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\r\n        testPlay.catch(function() {\r\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\r\n        });\r\n      }\r\n\r\n      return new Audio();\r\n    },\r\n\r\n    /**\r\n     * Return an activated HTML5 Audio object to the pool.\r\n     * @return {Howler}\r\n     */\r\n    _releaseHtml5Audio: function(audio) {\r\n      var self = this || Howler;\r\n\r\n      // Don't add audio to the pool if we don't know if it has been unlocked.\r\n      if (audio._unlocked) {\r\n        self._html5AudioPool.push(audio);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n        self.ctx.suspend().then(function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        });\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n\r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\r\n        Howler._unlockAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload) {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended. \r\n        // If there is, play that sound. If not, continue as usual.  \r\n        if (!self._playLock) {\r\n          var num = 0;\r\n          for (var i=0; i<self._sounds.length; i++) {\r\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n              num++;\r\n              id = self._sounds[i]._id;\r\n            }\r\n          }\r\n\r\n          if (num === 1) {\r\n            sprite = null;\r\n          } else {\r\n            id = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Mark this sound as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n      var start = self._sprite[sprite][0] / 1000;\r\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n      sound._sprite = sprite;\r\n\r\n      // Mark the sound as ended instantly so that this async playback\r\n      // doesn't get grabbed by another call to play while this one waits to start.\r\n      sound._ended = false;\r\n\r\n      // Update the parameters of the sound.\r\n      var setParams = function() {\r\n        sound._paused = false;\r\n        sound._seek = seek;\r\n        sound._start = start;\r\n        sound._stop = stop;\r\n        sound._loop = loop;\r\n      };\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (seek >= stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._playLock = false;\r\n          setParams();\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running') {\r\n          playWebAudio();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          // Wait for the audio context to resume before playing.\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Some browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Set param values immediately.\r\n              setParams();\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  node._unlocked = true;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                    self._loadQueue();\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n\r\n                  // Reset the ended and paused values.\r\n                  sound._ended = true;\r\n                  sound._paused = true;\r\n                });\r\n            } else if (!internal) {\r\n              self._playLock = false;\r\n              setParams();\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // If this is streaming audio, make sure the src is set and load again.\r\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\r\n          node.src = self._src;\r\n          node.load();\r\n        }\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          var listener = function() {\r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n\r\n              // If this is a live stream, stop download once the audio is stopped.\r\n              if (sound._node.duration === Infinity) {\r\n                self._clearSound(sound._node);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Make sure the to/from/len values are numbers.\r\n      from = parseFloat(from);\r\n      to = parseFloat(to);\r\n      len = parseFloat(len);\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        vol = Math.max(0, vol);\r\n        vol = Math.min(1, vol);\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            if (self.playing(id[i])) {\r\n              sound._rateSeek = self.seek(id[i]);\r\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            }\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return self;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            self._emit('seek', id);\r\n\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          self._clearSound(sounds[i]._node);\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n\r\n          // Release the Audio object back to the pool.\r\n          Howler._releaseHtml5Audio(sounds[i]._node);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        if (isIOS) {\r\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n        }\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\r\n     * @param  {Object} node Audio node to clear.\r\n     */\r\n    _clearSound: function(node) {\r\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n      if (!checkIE) {\r\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else {\r\n        // Get an unlocked Audio object from the pool.\r\n        self._node = Howler._obtainHtml5Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = 'auto';\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.withCredentials = self._xhrWithCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\r\n    if (!Howler.usingWebAudio) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // If the audio context creation still failed, set using web audio to false.\r\n    if (!Howler.ctx) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    });\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (typeof exports !== 'undefined') {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Define globally in case AMD is not available or unused.\r\n  if (typeof window !== 'undefined') {\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.1.2\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2019, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setPosition(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        var panner = sound._panner;\r\n        if (panner) {\r\n          panner.coneInnerAngle = pa.coneInnerAngle;\r\n          panner.coneOuterAngle = pa.coneOuterAngle;\r\n          panner.coneOuterGain = pa.coneOuterGain;\r\n          panner.distanceModel = pa.distanceModel;\r\n          panner.maxDistance = pa.maxDistance;\r\n          panner.refDistance = pa.refDistance;\r\n          panner.rolloffFactor = pa.rolloffFactor;\r\n          panner.panningModel = pa.panningModel;\r\n        } else {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/howler/dist/howler.js\n// module id = 436\n// module chunks = 0 3 6 7 8 9 10 11 12 13 14 15 21 22 23 24 25 26 28","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 440\n// module chunks = 8 9 10 11 12 13 16 17 18 19 20 29","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 441\n// module chunks = 8 9 10 11 12 13 16 17 18 19 20 29","<template>\r\n  <div class=\"row\">\r\n      <div class=\"col-lg-10 mx-auto\">\r\n        <ul class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item active\" v-on:click=\"redirect('/dashboard')\"><a href=\"#\" onclick=\"return false;\">Dashboard</a></li>\r\n          <li class=\"breadcrumb-item active\">Content Management</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-lg-10 mx-auto\">\r\n        <button class=\"btn btn-primary pull-right\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-plus\"></i> Add Content</button>\r\n      </div>\r\n      <div class=\"col-lg-10 mx-auto history\">\r\n        <div class=\"filter\">\r\n          <label><h5>Filter</h5></label>\r\n          <select class=\"form-control col-lg-3 col-md-4 col-sm-12\" v-model=\"filterId\">\r\n            <option disabled value=\"\">Please Select Lesson</option>\r\n            <option v-for=\"item, index in lesson\" class=\"form-control\" v-bind:value=\"item.id\">{{item.title}}</option>\r\n          </select>\r\n          <br>\r\n          <button class=\"btn btn-primary\" v-on:click=\"filter()\">Filter</button>\r\n        </div>\r\n        <br>\r\n        <table class=\"table table-responsive\">\r\n          <thead>\r\n            <tr>\r\n              <td>Original</td>\r\n              <td>Translation</td>\r\n              <td>Syllabus</td>\r\n              <td>Action</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody v-if=\"content.length !== 0\">\r\n            <tr v-for=\"item, index in content\">\r\n              <td>\r\n                <button class=\"btn btn-primary\" v-on:click=\"play(item.audio)\">Play</button>\r\n                <label v-html=\"item.original\"></label>\r\n              </td>\r\n              <td>{{item.translation}}</td>\r\n              <td>\r\n                <button class=\"btn btn-primary\" v-on:click=\"play(item.syllabus_audio)\">Play</button>\r\n                <label v-html=\"item.syllabus\"></label>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-primary\" v-on:click=\"updateModal(index)\" data-toggle=\"modal\" data-target=\"#editModal\"><i class=\"fa fa-pencil\"></i>Edit</button>\r\n                <button class=\"btn btn-danger\" v-on:click=\"deleteContent(item.id)\"><i class=\"fa fa-trash\"></i>Delete</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          <tbody v-else>\r\n            <tr>\r\n              <td class=\"text-danger text-center\" colspan=\"3\">Empty</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n    <!-- Modal \r\n\r\n      EDIT\r\n    -->\r\n    <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" v-if=\"modalContent !== null\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header bg-primary\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\"><i class=\"fa fa-ellipsis-v\"></i>Update Content</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\" class=\"text-white\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <span v-if=\"errorMessage !== null\" class=\"text-danger text-center\">\r\n                <label><b>Opps! </b>{{errorMessage}}</label>\r\n            </span>\r\n            <br v-if=\"errorMessage !== null\">\r\n            <br v-if=\"errorMessage !== null\">\r\n            <label>Title</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.original\">\r\n            <br>\r\n            <label>Translation</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.translation\">\r\n            <br> \r\n            <label>Audio</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.audio\">\r\n            <br> \r\n            <label>Syllabus</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.syllabus\">\r\n            <br> \r\n            <label>Syllabus Audio</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.syllabus_audio\">\r\n            <br>\r\n            <label>Video Url</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" v-model=\"modalContent.video_url\">\r\n            <br>\r\n            <label>Accent Text (Optional)</label>\r\n            <br>\r\n            <textarea class=\"form-control\" rows=\"10\" v-model=\"modalContent.accent_text\"></textarea>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"updateContent()\">update</button>\r\n              <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" aria-label=\"Close\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- Modal \r\n\r\n      ADD\r\n    -->\r\n    <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header bg-primary\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\"><i class=\"fa fa-ellipsis-v\"></i>{{modalTitle}}</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\" class=\"text-white\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <span v-if=\"errorMessage !== null\" class=\"text-danger text-center\">\r\n                <label><b>Opps! </b>{{errorMessage}}</label>\r\n            </span>\r\n            <br v-if=\"errorMessage !== null\">\r\n            <br v-if=\"errorMessage !== null\">\r\n            <label>Lesson</label>\r\n            <br>\r\n            <select class=\"form-control\" v-model=\"lessonId\">\r\n              <option v-for=\"item, index in lesson\" v-bind:value=\"item.id\">{{item.title}}</option>\r\n            </select>\r\n            <label>Title</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"Original\" v-model=\"original\">\r\n            <br>\r\n            <label>Translation</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"Translation\" v-model=\"translation\">\r\n            <br> \r\n            <label>Audio URL</label>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"Audio URL\" v-model=\"audio\">\r\n            <br>\r\n            <label>Syllabus</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"Syllabus\" v-model=\"syllabus\">\r\n            <br>\r\n            <label>Video Url</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"videoUrl\" v-model=\"videoUrl\">\r\n            <br> \r\n            <label>Syllabus Audio URL</label>\r\n            <br>\r\n            <input type=\"text\" name=\"title\" class=\"form-control\" placeholder=\"Audio URL\" v-model=\"syllabusAudio\">\r\n            <br>\r\n            <label>Accent Text (Optional)</label>\r\n            <br>\r\n            <textarea class=\"form-control\" rows=\"10\" v-model=\"accentText\"></textarea>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"submit()\">Submit</button>\r\n              <button type=\"button\" class=\"btn btn-danger\"  data-dismiss=\"modal\" aria-label=\"Close\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ROUTER from '../../router'\r\nimport AUTH from '../../services/auth'\r\nimport axios from 'axios'\r\nimport CONFIG from '../../config.js'\r\nimport {Howl, Howler} from 'howler'\r\nexport default {\r\n  mounted(){\r\n    AUTH.redirect()\r\n    this.getLesson()\r\n  },\r\n  data(){\r\n    return {\r\n      user: AUTH.user,\r\n      tokenData: AUTH.tokenData,\r\n      modalTitle: 'Add Content',\r\n      content: [],\r\n      errorMessage: null,\r\n      original: null,\r\n      translation: null,\r\n      audio: null,\r\n      syllabus: null,\r\n      accentText: null,\r\n      syllabusAudio: null,\r\n      file: null,\r\n      syllabusFile: null,\r\n      videoUrl: null,\r\n      lesson: [],\r\n      filterId: null,\r\n      lessonId: null,\r\n      modalContent: null,\r\n      modalContentInput: {\r\n        id: null,\r\n        original: null,\r\n        translation: null,\r\n        audio: null,\r\n        syllabus: null,\r\n        syllabusAudio: null,\r\n        videoUrl: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    redirect(parameter){\r\n      ROUTER.push(parameter)\r\n    },\r\n    setUpFileUpload(e){\r\n      let files = e.target.files || e.dataTransfer.files\r\n      if(!files.length){\r\n        return false\r\n      }else{\r\n        this.file = files[0]\r\n        this.createAudio(files[0])\r\n      }\r\n    },\r\n    setUpSyllabusFileUpload(e){\r\n      let files = e.target.files || e.dataTransfer.files\r\n      if(!files.length){\r\n        return false\r\n      }else{\r\n        this.syllabusFile = files[0]\r\n        this.createAudio(files[0])\r\n      }\r\n    },\r\n    createAudio(file){\r\n      let fileReader = new FileReader()\r\n      fileReader.readAsDataURL(event.target.files[0])\r\n    },\r\n    submit(){\r\n      if(this.validation() === true){\r\n        this.errorMessage = null\r\n        this.sendRequest()\r\n      }else{\r\n        this.errorMessage = 'Please fillup the required information'\r\n      }\r\n    },\r\n    sendRequest(){\r\n      let formData = new FormData()\r\n      formData.append('lesson_id', this.lessonId)\r\n      formData.append('original', this.original)\r\n      formData.append('translation', this.translation)\r\n      formData.append('audio', this.audio)\r\n      formData.append('syllabus', this.syllabus)\r\n      formData.append('syllabus_audio', this.syllabusAudio)\r\n      formData.append('accent_text', this.accentText)\r\n      formData.append('video_url', this.videoUrl)\r\n      axios.post(CONFIG.BACKEND_URL + '/content/create', formData).then(response => {\r\n        if(response.data.error.status === 100){\r\n          let error = response.data.error.message\r\n          if(error.word !== 'undefined'){\r\n            this.errorMessage = error.word[0]\r\n          }else{\r\n            this.errorMessage = JSON.stringify(error)\r\n          }\r\n        }else if(response.data.result){\r\n          this.filter()\r\n        }else{\r\n        }\r\n      })\r\n    },\r\n    filter(){\r\n      let parameter = {\r\n        'condition': [{\r\n          'column': 'lesson_id',\r\n          'clause': '=',\r\n          'value': this.filterId\r\n        }]\r\n      }\r\n      this.getContent(parameter)\r\n    },\r\n    getContent(parameter){\r\n      this.APIRequest('content/retrieve', parameter).then(response => {\r\n        this.content = response.data\r\n      })\r\n    },\r\n    getLesson(){\r\n      this.APIRequest('lesson/retrieve').then(response => {\r\n        this.lesson = response.data\r\n      })\r\n    },\r\n    deleteContent(index){\r\n      let parameter = {\r\n        id: index\r\n      }\r\n      this.APIRequest('content/delete', parameter).then(response => {\r\n        this.filter()\r\n      })\r\n    },\r\n    validation(){\r\n      if(this.original === null || this.translation === null){\r\n        return false\r\n      }else{\r\n        return true\r\n      }\r\n    },\r\n    play(url){\r\n      if(this.audio === null){\r\n        this.audio = new Howl({\r\n          src: CONFIG.BACKEND_URL + url\r\n        })\r\n        this.audio.play()\r\n      }else{\r\n        this.audio.unload()\r\n        this.audio = new Howl({\r\n          src: CONFIG.BACKEND_URL + url\r\n        })\r\n        this.audio.play()\r\n      }\r\n    },\r\n    pause(path){\r\n      this.audio.pause()\r\n    },\r\n    updateModal(index){\r\n      this.modalContent = this.content[index]\r\n      this.modalContentInput.id = this.modalContent.id\r\n    },\r\n    updateContent(){\r\n      axios.post(CONFIG.BACKEND_URL + '/content/update', this.modalContent).then(response => {\r\n        if(response.data.error.status === 100){\r\n          let error = response.data.error.message\r\n          if(error.word !== 'undefined'){\r\n            this.errorMessage = error.word[0]\r\n          }else{\r\n            this.errorMessage = JSON.stringify(error)\r\n          }\r\n        }else if(response.data.data === true){\r\n          this.filter()\r\n        }else{\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.result-holder{\r\n  color: #000;\r\n  margin-bottom: 5%;\r\n  height: 150px;\r\n}\r\n\r\n.history{\r\n  margin-top: 25px;\r\n}\r\n\r\n.bg-primary{\r\n  background: #1caceb !important; \r\n}\r\n\r\n.modal-title i{\r\n  padding-right: 10px;\r\n}\r\n\r\ntd button i{\r\n  padding-right: 10px;\r\n}\r\n\r\nthead{\r\n  font-weight: 700;\r\n}\r\n\r\n.modal-body{\r\n  width: 98% !important;\r\n  margin: 0px 1% 0px 1% !important;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// ContentManagementv2.vue?0e9a262a","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".result-holder[data-v-2349aa3d]{color:#000;margin-bottom:5%;height:150px}.history[data-v-2349aa3d]{margin-top:25px}.bg-primary[data-v-2349aa3d]{background:#1caceb!important}.modal-title i[data-v-2349aa3d],td button i[data-v-2349aa3d]{padding-right:10px}thead[data-v-2349aa3d]{font-weight:700}.modal-body[data-v-2349aa3d]{width:98%!important;margin:0 1%!important}\", \"\", {\"version\":3,\"sources\":[\"C:/xampp/htdocs/talkfluent/src/modules/lesson/ContentManagementv2.vue\"],\"names\":[],\"mappings\":\"AACA,gCACE,WAAY,AACZ,iBAAkB,AAClB,YAAc,CACf,AACD,0BACE,eAAiB,CAClB,AACD,6BACE,4BAA+B,CAChC,AAID,6DACE,kBAAoB,CACrB,AACD,uBACE,eAAiB,CAClB,AACD,6BACE,oBAAsB,AACtB,qBAAiC,CAClC\",\"file\":\"ContentManagementv2.vue\",\"sourcesContent\":[\"\\n.result-holder[data-v-2349aa3d]{\\r\\n  color: #000;\\r\\n  margin-bottom: 5%;\\r\\n  height: 150px;\\n}\\n.history[data-v-2349aa3d]{\\r\\n  margin-top: 25px;\\n}\\n.bg-primary[data-v-2349aa3d]{\\r\\n  background: #1caceb !important;\\n}\\n.modal-title i[data-v-2349aa3d]{\\r\\n  padding-right: 10px;\\n}\\ntd button i[data-v-2349aa3d]{\\r\\n  padding-right: 10px;\\n}\\nthead[data-v-2349aa3d]{\\r\\n  font-weight: 700;\\n}\\n.modal-body[data-v-2349aa3d]{\\r\\n  width: 98% !important;\\r\\n  margin: 0px 1% 0px 1% !important;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-2349aa3d\",\"scoped\":true,\"hasInlineConfig\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/lesson/ContentManagementv2.vue\n// module id = 683\n// module chunks = 12","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2349aa3d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ContentManagementv2.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"8e7d6ade\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-2349aa3d\",\"scoped\":true,\"hasInlineConfig\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/lesson/ContentManagementv2.vue\n// module id = 759\n// module chunks = 12","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('ul', {\n    staticClass: \"breadcrumb\"\n  }, [_c('li', {\n    staticClass: \"breadcrumb-item active\",\n    on: {\n      \"click\": function($event) {\n        return _vm.redirect('/dashboard')\n      }\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#\",\n      \"onclick\": \"return false;\"\n    }\n  }, [_vm._v(\"Dashboard\")])]), _vm._v(\" \"), _c('li', {\n    staticClass: \"breadcrumb-item active\"\n  }, [_vm._v(\"Content Management\")])])]), _vm._v(\" \"), _vm._m(0), _vm._v(\" \"), _c('div', {\n    staticClass: \"col-lg-10 mx-auto history\"\n  }, [_c('div', {\n    staticClass: \"filter\"\n  }, [_vm._m(1), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.filterId),\n      expression: \"filterId\"\n    }],\n    staticClass: \"form-control col-lg-3 col-md-4 col-sm-12\",\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.filterId = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', {\n    attrs: {\n      \"disabled\": \"\",\n      \"value\": \"\"\n    }\n  }, [_vm._v(\"Please Select Lesson\")]), _vm._v(\" \"), _vm._l((_vm.lesson), function(item, index) {\n    return _c('option', {\n      staticClass: \"form-control\",\n      domProps: {\n        \"value\": item.id\n      }\n    }, [_vm._v(_vm._s(item.title))])\n  })], 2), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-primary\",\n    on: {\n      \"click\": function($event) {\n        return _vm.filter()\n      }\n    }\n  }, [_vm._v(\"Filter\")])]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('table', {\n    staticClass: \"table table-responsive\"\n  }, [_vm._m(2), _vm._v(\" \"), (_vm.content.length !== 0) ? _c('tbody', _vm._l((_vm.content), function(item, index) {\n    return _c('tr', [_c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      on: {\n        \"click\": function($event) {\n          return _vm.play(item.audio)\n        }\n      }\n    }, [_vm._v(\"Play\")]), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.original)\n      }\n    })]), _vm._v(\" \"), _c('td', [_vm._v(_vm._s(item.translation))]), _vm._v(\" \"), _c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      on: {\n        \"click\": function($event) {\n          return _vm.play(item.syllabus_audio)\n        }\n      }\n    }, [_vm._v(\"Play\")]), _vm._v(\" \"), _c('label', {\n      domProps: {\n        \"innerHTML\": _vm._s(item.syllabus)\n      }\n    })]), _vm._v(\" \"), _c('td', [_c('button', {\n      staticClass: \"btn btn-primary\",\n      attrs: {\n        \"data-toggle\": \"modal\",\n        \"data-target\": \"#editModal\"\n      },\n      on: {\n        \"click\": function($event) {\n          return _vm.updateModal(index)\n        }\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-pencil\"\n    }), _vm._v(\"Edit\")]), _vm._v(\" \"), _c('button', {\n      staticClass: \"btn btn-danger\",\n      on: {\n        \"click\": function($event) {\n          return _vm.deleteContent(item.id)\n        }\n      }\n    }, [_c('i', {\n      staticClass: \"fa fa-trash\"\n    }), _vm._v(\"Delete\")])])])\n  }), 0) : _c('tbody', [_vm._m(3)])])]), _vm._v(\" \"), (_vm.modalContent !== null) ? _c('div', {\n    staticClass: \"modal fade\",\n    attrs: {\n      \"id\": \"editModal\",\n      \"tabindex\": \"-1\",\n      \"role\": \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-dialog modal-lg\",\n    attrs: {\n      \"role\": \"document\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-content\"\n  }, [_vm._m(4), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-body\"\n  }, [(_vm.errorMessage !== null) ? _c('span', {\n    staticClass: \"text-danger text-center\"\n  }, [_c('label', [_c('b', [_vm._v(\"Opps! \")]), _vm._v(_vm._s(_vm.errorMessage))])]) : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), _c('label', [_vm._v(\"Title\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.original),\n      expression: \"modalContent.original\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.original)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"original\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.translation),\n      expression: \"modalContent.translation\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.translation)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"translation\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Audio\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.audio),\n      expression: \"modalContent.audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"audio\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.syllabus),\n      expression: \"modalContent.syllabus\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.syllabus)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"syllabus\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus Audio\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.syllabus_audio),\n      expression: \"modalContent.syllabus_audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.syllabus_audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"syllabus_audio\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Video Url\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.video_url),\n      expression: \"modalContent.video_url\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.video_url)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"video_url\", $event.target.value)\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Accent Text (Optional)\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.modalContent.accent_text),\n      expression: \"modalContent.accent_text\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"rows\": \"10\"\n    },\n    domProps: {\n      \"value\": (_vm.modalContent.accent_text)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.$set(_vm.modalContent, \"accent_text\", $event.target.value)\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-footer\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.updateContent()\n      }\n    }\n  }, [_vm._v(\"update\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-danger\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_vm._v(\"Close\")])])])])]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal fade\",\n    attrs: {\n      \"id\": \"myModal\",\n      \"tabindex\": \"-1\",\n      \"role\": \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-dialog modal-lg\",\n    attrs: {\n      \"role\": \"document\"\n    }\n  }, [_c('div', {\n    staticClass: \"modal-content\"\n  }, [_c('div', {\n    staticClass: \"modal-header bg-primary\"\n  }, [_c('h5', {\n    staticClass: \"modal-title\",\n    attrs: {\n      \"id\": \"exampleModalLabel\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-ellipsis-v\"\n  }), _vm._v(_vm._s(_vm.modalTitle))]), _vm._v(\" \"), _vm._m(5)]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-body\"\n  }, [(_vm.errorMessage !== null) ? _c('span', {\n    staticClass: \"text-danger text-center\"\n  }, [_c('label', [_c('b', [_vm._v(\"Opps! \")]), _vm._v(_vm._s(_vm.errorMessage))])]) : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), (_vm.errorMessage !== null) ? _c('br') : _vm._e(), _vm._v(\" \"), _c('label', [_vm._v(\"Lesson\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.lessonId),\n      expression: \"lessonId\"\n    }],\n    staticClass: \"form-control\",\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.lessonId = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, _vm._l((_vm.lesson), function(item, index) {\n    return _c('option', {\n      domProps: {\n        \"value\": item.id\n      }\n    }, [_vm._v(_vm._s(item.title))])\n  }), 0), _vm._v(\" \"), _c('label', [_vm._v(\"Title\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.original),\n      expression: \"original\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Original\"\n    },\n    domProps: {\n      \"value\": (_vm.original)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.original = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.translation),\n      expression: \"translation\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Translation\"\n    },\n    domProps: {\n      \"value\": (_vm.translation)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.translation = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Audio URL\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.audio),\n      expression: \"audio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Audio URL\"\n    },\n    domProps: {\n      \"value\": (_vm.audio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.audio = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.syllabus),\n      expression: \"syllabus\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Syllabus\"\n    },\n    domProps: {\n      \"value\": (_vm.syllabus)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.syllabus = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Video Url\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.videoUrl),\n      expression: \"videoUrl\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"videoUrl\"\n    },\n    domProps: {\n      \"value\": (_vm.videoUrl)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.videoUrl = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Syllabus Audio URL\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.syllabusAudio),\n      expression: \"syllabusAudio\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"title\",\n      \"placeholder\": \"Audio URL\"\n    },\n    domProps: {\n      \"value\": (_vm.syllabusAudio)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.syllabusAudio = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('label', [_vm._v(\"Accent Text (Optional)\")]), _vm._v(\" \"), _c('br'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.accentText),\n      expression: \"accentText\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"rows\": \"10\"\n    },\n    domProps: {\n      \"value\": (_vm.accentText)\n    },\n    on: {\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.accentText = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"modal-footer\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": function($event) {\n        return _vm.submit()\n      }\n    }\n  }, [_vm._v(\"Submit\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-danger\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_vm._v(\"Close\")])])])])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"col-lg-10 mx-auto\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary pull-right\",\n    attrs: {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#myModal\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-plus\"\n  }), _vm._v(\" Add Content\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('label', [_c('h5', [_vm._v(\"Filter\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('thead', [_c('tr', [_c('td', [_vm._v(\"Original\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Translation\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Syllabus\")]), _vm._v(\" \"), _c('td', [_vm._v(\"Action\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('tr', [_c('td', {\n    staticClass: \"text-danger text-center\",\n    attrs: {\n      \"colspan\": \"3\"\n    }\n  }, [_vm._v(\"Empty\")])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"modal-header bg-primary\"\n  }, [_c('h5', {\n    staticClass: \"modal-title\",\n    attrs: {\n      \"id\": \"exampleModalLabel\"\n    }\n  }, [_c('i', {\n    staticClass: \"fa fa-ellipsis-v\"\n  }), _vm._v(\"Update Content\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"close\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_c('span', {\n    staticClass: \"text-white\",\n    attrs: {\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"×\")])])])\n},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('button', {\n    staticClass: \"close\",\n    attrs: {\n      \"type\": \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }\n  }, [_c('span', {\n    staticClass: \"text-white\",\n    attrs: {\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"×\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-2349aa3d\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/modules/lesson/ContentManagementv2.vue\n// module id = 878\n// module chunks = 12"],"sourceRoot":""}